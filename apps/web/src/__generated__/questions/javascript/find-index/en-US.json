{
  "description": "var Component=(()=>{var s=Object.create;var d=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var f=Object.getPrototypeOf,x=Object.prototype.hasOwnProperty;var p=(r,n)=>()=>(n||r((n={exports:{}}).exports,n),n.exports),g=(r,n)=>{for(var i in n)d(r,i,{get:n[i],enumerable:!0})},c=(r,n,i,a)=>{if(n&&typeof n==\"object\"||typeof n==\"function\")for(let t of u(n))!x.call(r,t)&&t!==i&&d(r,t,{get:()=>n[t],enumerable:!(a=m(n,t))||a.enumerable});return r};var I=(r,n,i)=>(i=r!=null?s(f(r)):{},c(n||!r||!r.__esModule?d(i,\"default\",{value:r,enumerable:!0}):i,r)),y=r=>c(d({},\"__esModule\",{value:!0}),r);var l=p((N,h)=>{h.exports=_jsx_runtime});var _={};g(_,{default:()=>b,frontmatter:()=>v});var e=I(l()),v={title:\"Find Index\",excerpt:\"Implement a function that returns the index of the first element in the array that satisfies the provided testing function\"};function o(r){let n=Object.assign({p:\"p\",code:\"code\",pre:\"pre\",h2:\"h2\",ol:\"ol\",li:\"li\",em:\"em\",ul:\"ul\",a:\"a\"},r.components);return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsxs)(n.p,{children:[\"Implement a function \",(0,e.jsx)(n.code,{children:\"findIndex(array, predicate, [fromIndex=0])\"}),\" that takes an array of values, a function \",(0,e.jsx)(n.code,{children:\"predicate\"}),\", and an optional \",(0,e.jsx)(n.code,{children:\"fromIndex\"}),\" number argument, and returns the index of the first element in the array that satisfies the provided testing function \",(0,e.jsx)(n.code,{children:\"predicate\"}),\".\"]}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"language-js\",children:`findIndex(array, predicate, [(fromIndex = 0)]);\n`})}),`\n`,(0,e.jsx)(n.h2,{children:\"Arguments\"}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\"array\"}),\" \",(0,e.jsx)(n.em,{children:\"(Array)\"}),\": The array to inspect.\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\"predicate\"}),\" \",(0,e.jsx)(n.em,{children:\"(Function)\"}),\": The function invoked per iteration. The function is invoked with three arguments: \",(0,e.jsx)(n.em,{children:\"(value, index, array)\"}),\".\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\"[fromIndex=0]\"}),\" \",(0,e.jsx)(n.em,{children:\"(number)\"}),\": The index to search from.\"]}),`\n`]}),`\n`,(0,e.jsx)(n.h2,{children:\"Returns\"}),`\n`,(0,e.jsxs)(n.p,{children:[(0,e.jsx)(n.em,{children:\"(number)\"}),\": Returns the index of the found element, else \",(0,e.jsx)(n.code,{children:\"-1\"}),\".\"]}),`\n`,(0,e.jsx)(n.h2,{children:\"Example\"}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"language-js\",children:`const arr = [1, 2, 3, 4, 5];\n\n// Search for the first value in the array that is greater than 3.\nfindIndex(arr, (num) => num > 3); // => 3\n\n// Start searching from index 3 (inclusive).\nfindIndex(arr, (num) => num > 3, 4); // => 4\n\n// No such element exists.\nfindIndex(arr, (num) => num > 10, 3); // => -1\n`})}),`\n`,(0,e.jsx)(n.h2,{children:\"Edge Cases\"}),`\n`,(0,e.jsx)(n.p,{children:\"Your function should handle negative and out of bound indices.\"}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsxs)(n.li,{children:[\"Negative: negative integers count back from the last item in the array. \",(0,e.jsx)(n.code,{children:\"-1\"}),\" means the last element in the array, \",(0,e.jsx)(n.code,{children:\"-2\"}),\" means the second last element, and so on.\"]}),`\n`,(0,e.jsxs)(n.li,{children:[\"Out of bound: if \",(0,e.jsx)(n.code,{children:\"index < -array.length\"}),\", start searching from index 0.\"]}),`\n`]}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"language-js\",children:`const arr = [1, 2, 3, 4, 5];\n\n// Start searching from index 2 (inclusive).\nfindIndex(arr, (num) => num > 2, -3); // => 2\n\nfindIndex(arr, (num) => num % 2 === 0, -3); // => 3\n\n// Start from 0 if fromIndex < -(array.length)\nfindIndex(arr, (num) => num > 2, -10); // => 2\n\n// Search rightwards from index that's already out of bounds,\n// which will always result in -1.\nfindIndex(arr, (num) => num > 2, 10); // => -1\n`})}),`\n`,(0,e.jsx)(n.h2,{children:\"Resources\"}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsx)(n.li,{children:(0,e.jsxs)(n.a,{href:\"https://lodash.com/docs/#findIndex\",children:[\"Lodash \",(0,e.jsx)(n.code,{children:\"_.findIndex\"})]})}),`\n`]})]})}function j(r={}){let{wrapper:n}=r.components||{};return n?(0,e.jsx)(n,Object.assign({},r,{children:(0,e.jsx)(o,r)})):o(r)}var b=j;return y(_);})();\n;return Component;",
  "format": "javascript",
  "metadata": {
    "author": null,
    "companies": [],
    "created": 1682726400,
    "difficulty": "easy",
    "duration": 10,
    "excerpt": "Implement a function that returns the index of the first element in the array that satisfies the provided testing function",
    "featured": false,
    "format": "javascript",
    "frameworkDefault": null,
    "frameworks": [],
    "href": "/questions/javascript/find-index",
    "importance": "low",
    "languages": [
      "js",
      "ts"
    ],
    "nextQuestions": [],
    "premium": true,
    "published": true,
    "ranking": 100,
    "similarQuestions": [
      "find-last-index"
    ],
    "slug": "find-index",
    "subtitle": null,
    "title": "Find Index",
    "topics": []
  },
  "skeleton": {
    "js": "/**\n * This function returns the index of the first element in the array that satisfies the provided testing function.\n * Otherwise, it returns -1, indicating that no element passed the test.\n *\n * @param {Array} array - The array to search.\n * @param {Function} predicate - The function invoked per iteration.\n * @param {number} [fromIndex=0] - The index to start searching from.\n * @returns The index of the found element, else -1.\n */\nexport default function findIndex(array, predicate, fromIndex = 0) {\n  throw 'Not implemented!';\n}",
    "ts": "export default function findIndex<T>(\n  array: Array<T>,\n  predicate: (value: T, index: number, array: Array<T>) => boolean,\n  fromIndex = 0,\n): number {\n  throw 'Not implemented!';\n}"
  },
  "solution": "var Component=(()=>{var f=Object.create;var o=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var p=Object.getPrototypeOf,g=Object.prototype.hasOwnProperty;var I=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports),y=(n,e)=>{for(var r in e)o(n,r,{get:e[r],enumerable:!0})},d=(n,e,r,a)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let i of u(e))!g.call(n,i)&&i!==r&&o(n,i,{get:()=>e[i],enumerable:!(a=m(e,i))||a.enumerable});return n};var _=(n,e,r)=>(r=n!=null?f(p(n)):{},d(e||!n||!n.__esModule?o(r,\"default\",{value:n,enumerable:!0}):r,n)),j=n=>d(o({},\"__esModule\",{value:!0}),n);var c=I((b,s)=>{s.exports=_jsx_runtime});var D={};y(D,{default:()=>C});var t=_(c());var h=MDXCodeBlock;var l=`/**\n * This function returns the index of the first element in the array that satisfies the provided testing function.\n * Otherwise, it returns -1, indicating that no element passed the test.\n *\n * @param {Array} array - The array to search.\n * @param {Function} predicate - The function invoked per iteration.\n * @param {number} [fromIndex=0] - The index to start searching from.\n * @returns The index of the found element, else -1.\n */\nexport default function findIndex(array, predicate, fromIndex = 0) {\n  const length = array.length;\n  const startIndex =\n    fromIndex >= 0 ? fromIndex : Math.max(length + fromIndex, 0);\n\n  for (let index = startIndex; index < length; index++) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n\n  return -1;\n}\n`;function x(n){let e=Object.assign({h2:\"h2\",ul:\"ul\",li:\"li\",a:\"a\",code:\"code\"},n.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h2,{children:\"Solution\"}),`\n`,(0,t.jsx)(h,{children:l}),`\n`,(0,t.jsx)(e.h2,{children:\"Resources\"}),`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsx)(e.li,{children:(0,t.jsxs)(e.a,{href:\"https://lodash.com/docs/#findIndex\",children:[\"Lodash \",(0,t.jsx)(e.code,{children:\"_.findIndex\"})]})}),`\n`]})]})}function T(n={}){let{wrapper:e}=n.components||{};return e?(0,t.jsx)(e,Object.assign({},n,{children:(0,t.jsx)(x,n)})):x(n)}var C=T;return j(D);})();\n;return Component;",
  "tests": "import findIndex from './find-index';\n\ndescribe('findIndex', () => {\n  test('empty array', () => {\n    expect(findIndex([], (num) => num % 2 === 0)).toBe(-1);\n  });\n\n  test('finds index of first even number', () => {\n    expect(findIndex([4, 12, 8, 130, 44], (num) => num % 2 === 0)).toBe(0);\n    expect(findIndex([5, 12, 8, 130, 44], (num) => num % 2 === 0)).toBe(1);\n  });\n\n  test('no element passes test', () => {\n    expect(findIndex([5, 12, 8, 130, 44], (num) => num > 200)).toBe(-1);\n  });\n\n  test('searches from given start index', () => {\n    expect(findIndex([5, 12, 8, 130, 44], (num) => num % 2 === 0, 1)).toBe(1);\n    expect(findIndex([5, 12, 8, 130, 44], (num) => num % 10 === 0, 2)).toBe(3);\n    expect(findIndex([5, 12, 8, 130, 44], (num) => num % 2 === 0, 3)).toBe(3);\n  });\n\n  test('handles negative start index', () => {\n    expect(findIndex([5, 12, 8, 130, 44], (num) => num > 3, -2)).toBe(3);\n    expect(findIndex([5, 12, 8, 130, 44], (num) => num < 100, -2)).toBe(4);\n  });\n\n  test('handles out of bound index', () => {\n    expect(findIndex([5, 12, 8, 130, 44], (value) => value >= 12, 5)).toBe(-1);\n    expect(findIndex([5, 12, 8, 130, 44], (value) => value >= 12, 10)).toBe(-1);\n    expect(findIndex([5, 12, 8, 130, 44], (value) => value >= 12, -10)).toBe(1);\n  });\n});"
}