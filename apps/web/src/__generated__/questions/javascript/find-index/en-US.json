{
  "description": "var Component=(()=>{var l=Object.create;var a=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var m=Object.getOwnPropertyNames;var f=Object.getPrototypeOf,x=Object.prototype.hasOwnProperty;var p=(r,n)=>()=>(n||r((n={exports:{}}).exports,n),n.exports),g=(r,n)=>{for(var t in n)a(r,t,{get:n[t],enumerable:!0})},c=(r,n,t,d)=>{if(n&&typeof n==\"object\"||typeof n==\"function\")for(let i of m(n))!x.call(r,i)&&i!==t&&a(r,i,{get:()=>n[i],enumerable:!(d=u(n,i))||d.enumerable});return r};var I=(r,n,t)=>(t=r!=null?l(f(r)):{},c(n||!r||!r.__esModule?a(t,\"default\",{value:r,enumerable:!0}):t,r)),y=r=>c(a({},\"__esModule\",{value:!0}),r);var o=p((F,s)=>{s.exports=_jsx_runtime});var _={};g(_,{default:()=>R,frontmatter:()=>j});var e=I(o()),j={title:\"Find Index\",excerpt:\"Implement a function that returns the index of the first element in the array that satisfies the provided testing function.\"};function h(r){let n=Object.assign({p:\"p\",pre:\"pre\",code:\"code\",ul:\"ul\",li:\"li\",h2:\"h2\"},r.components);return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(n.p,{children:\"Write a function named findIndex that takes an array of values, a function predicate, and an optional fromIndex number argument, and returns the index of the first element in the array that satisfies the provided testing function predicate.\"}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"language-js\",children:`findIndex(array, predicate, [(fromIndex = 0)]);\n`})}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\"array\"}),\": The array to iterate over.\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\"predicate\"}),\": The function invoked per iteration. It is called with three arguments: (value, index, array).\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\"fromIndex\"}),\": The index to start the search from. If no index provided, start searching from index 0.\"]}),`\n`]}),`\n`,(0,e.jsx)(n.p,{children:\"Returns the index of the found element, else -1.\"}),`\n`,(0,e.jsx)(n.h2,{children:\"Examples\"}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"language-js\",children:`const arr = [1, 2, 3, 4, 5];\n\n// Search for the first number in the array that is greater than 3\nfindIndex(arr, (num) => num > 3); // Returns index 3\n\n// Start searching from index 3 (inclusive)\nfindIndex(arr, (num) => num > 3, 4); // Returns index 4\n\nfindIndex(arr, (num) => num > 10, 3); // Returns index -1\n`})}),`\n`,(0,e.jsx)(n.h2,{children:\"Edge cases\"}),`\n`,(0,e.jsxs)(n.p,{children:[\"Your function needs to handle negative \",(0,e.jsx)(n.code,{children:\"fromIndex\"}),\". Also, if \",(0,e.jsx)(n.code,{children:\"index < - array.length\"}),\", start searching from index 0.\"]}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"language-js\",children:`const arr = [1, 2, 3, 4, 5];\n\nfindIndex(arr, (num) => num > 2, -3); // Returns index 2\n\nfindIndex(arr, (num) => num > 2, 10); // Returns index -1\n\n// Start from 0 if fromIndex < -(array.length)\nfindIndex(arr, (num) => num > 2, -10); // Returns index 1\n`})})]})}function v(r={}){let{wrapper:n}=r.components||{};return n?(0,e.jsx)(n,Object.assign({},r,{children:(0,e.jsx)(h,r)})):h(r)}var R=v;return y(_);})();\n;return Component;",
  "format": "javascript",
  "metadata": {
    "author": null,
    "companies": [],
    "created": 1682726400,
    "difficulty": "easy",
    "duration": 10,
    "excerpt": "Implement a function that returns the index of the first element in the array that satisfies the provided testing function.",
    "featured": false,
    "format": "javascript",
    "frameworkDefault": null,
    "frameworks": [],
    "href": "/questions/javascript/find-index",
    "importance": "low",
    "languages": [
      "js",
      "ts"
    ],
    "nextQuestions": [],
    "premium": true,
    "published": true,
    "ranking": 100,
    "similarQuestions": [
      "find-last-index"
    ],
    "slug": "find-index",
    "title": "Find Index"
  },
  "skeleton": {
    "js": "/**\n * This function returns the index of the first element in the array that satisfies the provided testing function.\n * Otherwise, it returns -1, indicating that no element passed the test.\n *\n * @param {Array} array - The array to search.\n * @param {Function} predicate - The function invoked per iteration.\n * @param {number} [fromIndex=0] - The index to start searching from.\n * @returns The index of the found element, else -1.\n */\nexport default function findIndex(array, predicate, fromIndex = 0) {\n  throw 'Not implemented!';\n}",
    "ts": "export default function findIndex<T>(\n  array: Array<T>,\n  predicate: (value: T, index: number, array: Array<T>) => boolean,\n  fromIndex = 0,\n): number {\n  throw 'Not implemented!';\n}"
  },
  "solution": "var Component=(()=>{var m=Object.create;var i=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var l=Object.getOwnPropertyNames;var p=Object.getPrototypeOf,g=Object.prototype.hasOwnProperty;var y=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),I=(e,t)=>{for(var r in t)i(e,r,{get:t[r],enumerable:!0})},d=(e,t,r,o)=>{if(t&&typeof t==\"object\"||typeof t==\"function\")for(let a of l(t))!g.call(e,a)&&a!==r&&i(e,a,{get:()=>t[a],enumerable:!(o=u(t,a))||o.enumerable});return e};var j=(e,t,r)=>(r=e!=null?m(p(e)):{},d(t||!e||!e.__esModule?i(r,\"default\",{value:e,enumerable:!0}):r,e)),_=e=>d(i({},\"__esModule\",{value:!0}),e);var c=y((b,s)=>{s.exports=_jsx_runtime});var D={};I(D,{default:()=>C});var n=j(c());var x=MDXCodeBlock;var h=`/**\n * This function returns the index of the first element in the array that satisfies the provided testing function.\n * Otherwise, it returns -1, indicating that no element passed the test.\n *\n * @param {Array} array - The array to search.\n * @param {Function} predicate - The function invoked per iteration.\n * @param {number} [fromIndex=0] - The index to start searching from.\n * @returns The index of the found element, else -1.\n */\nexport default function findIndex(array, predicate, fromIndex = 0) {\n  const length = array.length;\n  const startIndex =\n    fromIndex >= 0 ? fromIndex : Math.max(length + fromIndex, 0);\n\n  for (let index = startIndex; index < length; index++) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n\n  return -1;\n}\n`;function f(e){let t=Object.assign({h2:\"h2\"},e.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h2,{children:\"Solution\"}),`\n`,(0,n.jsx)(x,{children:h})]})}function T(e={}){let{wrapper:t}=e.components||{};return t?(0,n.jsx)(t,Object.assign({},e,{children:(0,n.jsx)(f,e)})):f(e)}var C=T;return _(D);})();\n;return Component;",
  "tests": "import findIndex from './find-index';\n\n/* eslint-disable no-undef */\ndescribe('findIndex', () => {\n  const arr = [5, 12, 8, 130, 44];\n\n  test('finds index of first even number', () => {\n    const result = findIndex(arr, (num) => num % 2 === 0);\n    expect(result).toBe(1);\n  });\n\n  test('returns -1 if no element passes test', () => {\n    const result = findIndex(arr, (num) => num > 200);\n    expect(result).toBe(-1);\n  });\n\n  test('returns -1 if array is empty', () => {\n    const result = findIndex([], (num) => num > 200);\n    expect(result).toBe(-1);\n  });\n\n  test('searches from given start index', () => {\n    const result = findIndex(arr, (num) => num % 2 === 0, 3);\n    expect(result).toBe(3);\n  });\n\n  test('handles negative fromIndex', () => {\n    const result = findIndex(arr, (num) => num > 3, -2);\n    expect(result).toEqual(3);\n  });\n\n  test('handles out of range index', () => {\n    expect(findIndex(arr, (value) => value >= 12, 10)).toEqual(-1);\n    expect(findIndex(arr, (value) => value >= 12, -10)).toEqual(1);\n  });\n});"
}