{
  "description": "var Component=(()=>{var h=Object.create;var i=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var f=Object.getOwnPropertyNames;var p=Object.getPrototypeOf,m=Object.prototype.hasOwnProperty;var g=(r,e)=>()=>(e||r((e={exports:{}}).exports,e),e.exports),y=(r,e)=>{for(var a in e)i(r,a,{get:e[a],enumerable:!0})},c=(r,e,a,l)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let t of f(e))!m.call(r,t)&&t!==a&&i(r,t,{get:()=>e[t],enumerable:!(l=u(e,t))||l.enumerable});return r};var x=(r,e,a)=>(a=r!=null?h(p(r)):{},c(e||!r||!r.__esModule?i(a,\"default\",{value:r,enumerable:!0}):a,r)),j=r=>c(i({},\"__esModule\",{value:!0}),r);var d=g((T,o)=>{o.exports=_jsx_runtime});var b={};y(b,{default:()=>v,frontmatter:()=>w});var n=x(d()),w={title:\"Fill\",excerpt:\"Implement a function that fills an array with values within specified indices\"};function s(r){let e=Object.assign({p:\"p\",code:\"code\",pre:\"pre\",ul:\"ul\",li:\"li\",h2:\"h2\"},r.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(e.p,{children:[\"Write a \",(0,n.jsx)(e.code,{children:\"fill\"}),\" function, which fills elements of array with value from start up to, but not including, end:\"]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-js\",children:`fill(array, value, [(start = 0)], [(end = array.length)]);\n`})}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"array\"}),\" (Array): The array to fill.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"value\"}),\" (*): The value to fill array with.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"start\"}),\" (number): The start position (default 0).\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"end\"}),\" (number): The end position (default array.length).\"]}),`\n`]}),`\n`,(0,n.jsx)(e.p,{children:\"Make sure to mutate the original array instead of creating a shallow copy.\"}),`\n`,(0,n.jsx)(e.h2,{children:\"Example\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-js\",children:`const array = [1, 2, 3];\nfill(array, 'a'); // => ['a', 'a', 'a']\nfill([4, 6, 8, 10], '*', 1, 3); // => [4, '*', '*', 10]\n`})}),`\n`,(0,n.jsx)(e.p,{children:\"Make sure to handle negative indices and out of range indices.\"})]})}function _(r={}){let{wrapper:e}=r.components||{};return e?(0,n.jsx)(e,Object.assign({},r,{children:(0,n.jsx)(s,r)})):s(r)}var v=_;return j(b);})();\n;return Component;",
  "format": "javascript",
  "metadata": {
    "author": null,
    "companies": [],
    "created": 1682553600,
    "difficulty": "easy",
    "duration": 10,
    "excerpt": "Implement a function that fills an array with values within specified indices",
    "featured": false,
    "format": "javascript",
    "frameworkDefault": null,
    "frameworks": [],
    "href": "/questions/javascript/fill",
    "importance": "low",
    "languages": [
      "js",
      "ts"
    ],
    "nextQuestions": [],
    "premium": true,
    "published": true,
    "ranking": 100,
    "similarQuestions": [],
    "slug": "fill",
    "title": "Fill"
  },
  "skeleton": {
    "js": "/**\n * @param {Array} array - The array to fill.\n * @param {*} value - The value to fill array with.\n * @param {number} [start=0] - The start position.\n * @param {number} [end=array.length] - The end position.\n * @return {Array} Returns the filled array.\n */\nexport default function fill(array, value, start = 0, end = array.length) {\n  throw 'Not implemented!';\n}",
    "ts": "export default function fill<T>(\n  array: Array<T>,\n  value: T,\n  start = 0,\n  end = array.length,\n): Array<T> {\n  throw 'Not implemented!';\n}"
  },
  "solution": "var Component=(()=>{var m=Object.create;var s=Object.defineProperty;var x=Object.getOwnPropertyDescriptor;var j=Object.getOwnPropertyNames;var p=Object.getPrototypeOf,_=Object.prototype.hasOwnProperty;var d=(n,t)=>()=>(t||n((t={exports:{}}).exports,t),t.exports),f=(n,t)=>{for(var e in t)s(n,e,{get:t[e],enumerable:!0})},a=(n,t,e,r)=>{if(t&&typeof t==\"object\"||typeof t==\"function\")for(let o of j(t))!_.call(n,o)&&o!==e&&s(n,o,{get:()=>t[o],enumerable:!(r=x(t,o))||r.enumerable});return n};var b=(n,t,e)=>(e=n!=null?m(p(n)):{},a(t||!n||!n.__esModule?s(e,\"default\",{value:n,enumerable:!0}):e,n)),M=n=>a(s({},\"__esModule\",{value:!0}),n);var u=d((O,i)=>{i.exports=_jsx_runtime});var C={};f(C,{default:()=>h});var c=b(u());function l(n){let t=Object.assign({p:\"p\"},n.components);return(0,c.jsx)(t.p,{children:\"No solutions available.\"})}function g(n={}){let{wrapper:t}=n.components||{};return t?(0,c.jsx)(t,Object.assign({},n,{children:(0,c.jsx)(l,n)})):l(n)}var h=g;return M(C);})();\n;return Component;",
  "tests": "import fill from './fill';\n\n/* eslint-disable no-undef */\ndescribe('fill', () => {\n  test('fills array with value from start to end', () => {\n    const arr = [1, 2, 3, 4, 5];\n    expect(fill(arr, '*', 2, 4)).toEqual([1, 2, '*', '*', 5]);\n  });\n  test('fills array with value from start to end by default', () => {\n    const arr = [1, 2, 3];\n    expect(fill(arr, '*')).toEqual(['*', '*', '*']);\n  });\n  test('fills array with value from start to end when negative indices are provided', () => {\n    const arr = [1, 2, 3];\n    expect(fill(arr, '*', -2, -1)).toEqual([1, '*', 3]);\n  });\n  test('fills array with value from start to end when out of range indices are provided', () => {\n    const arr = [1, 2, 3];\n    expect(fill(arr, '*', 1, 10)).toEqual([1, '*', '*', '*']);\n  });\n  test('mutates original array', () => {\n    const arr = [1, 2, 3];\n    expect(fill(arr, '*', 1, 2)).toBe(arr);\n  });\n});"
}