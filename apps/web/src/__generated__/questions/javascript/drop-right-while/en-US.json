{
  "description": "var Component=(()=>{var s=Object.create;var a=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var m=Object.getPrototypeOf,f=Object.prototype.hasOwnProperty;var g=(r,e)=>()=>(e||r((e={exports:{}}).exports,e),e.exports),y=(r,e)=>{for(var t in e)a(r,t,{get:e[t],enumerable:!0})},o=(r,e,t,l)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let i of p(e))!f.call(r,i)&&i!==t&&a(r,i,{get:()=>e[i],enumerable:!(l=u(e,i))||l.enumerable});return r};var x=(r,e,t)=>(t=r!=null?s(m(r)):{},o(e||!r||!r.__esModule?a(t,\"default\",{value:r,enumerable:!0}):t,r)),v=r=>o(a({},\"__esModule\",{value:!0}),r);var d=g((b,c)=>{c.exports=_jsx_runtime});var _={};y(_,{default:()=>W,frontmatter:()=>j});var n=x(d()),j={title:\"Drop Right While\",excerpt:\"Implement a function that excludes elements from the end of an array until the predicate returns false\"};function h(r){let e=Object.assign({p:\"p\",code:\"code\",pre:\"pre\",ul:\"ul\",li:\"li\",h2:\"h2\"},r.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(e.p,{children:[\"Lodash provides a utility called \",(0,n.jsx)(e.code,{children:\"dropRightWhile\"}),\" that creates a slice of an array with elements dropped from the end until the \",(0,n.jsx)(e.code,{children:\"predicate\"}),\" function returns falsey.\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Implement a function \",(0,n.jsx)(e.code,{children:\"dropRightWhile\"}),\" that behaves like Lodash's \",(0,n.jsx)(e.code,{children:\"dropRightWhile\"}),\" utility using the following function signature:\"]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-js\",children:`dropRightWhile(array, predicate);\n`})}),`\n`,(0,n.jsx)(e.p,{children:\"The function takes two arguments:\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"array (Array)\"}),\": The array to iterate over.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"predicate (Function)\"}),\": The predicate is invoked with three arguments: (value, index, array) and returns a \",(0,n.jsx)(e.code,{children:\"boolean\"}),\" value.\"]}),`\n`]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Your function should drop elements from the end of the array until the predicate function returns \",(0,n.jsx)(e.code,{children:\"falsey\"}),\", and return the remaining elements as a new array. Your function should not modify the original array.\"]}),`\n`,(0,n.jsx)(e.h2,{children:\"Examples\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-js\",children:`dropRightWhile([1, 2, 3, 4, 5], (value) => value > 3); // => [1, 2, 3]\ndropRightWhile([1, 2, 3], (value) => value < 6); // => []\ndropRightWhile([1, 2, 3, 4, 5], (value) => value > 6); // => [1, 2, 3, 4, 5]\n`})})]})}function R(r={}){let{wrapper:e}=r.components||{};return e?(0,n.jsx)(e,Object.assign({},r,{children:(0,n.jsx)(h,r)})):h(r)}var W=R;return v(_);})();\n;return Component;",
  "format": "javascript",
  "metadata": {
    "author": null,
    "companies": [],
    "created": 1682553600,
    "difficulty": "easy",
    "duration": 10,
    "excerpt": "Implement a function that excludes elements from the end of an array until the predicate returns false",
    "featured": false,
    "format": "javascript",
    "frameworkDefault": null,
    "frameworks": [],
    "href": "/questions/javascript/drop-right-while",
    "importance": "low",
    "languages": [
      "js",
      "ts"
    ],
    "nextQuestions": [],
    "premium": true,
    "published": true,
    "ranking": 100,
    "similarQuestions": [
      "drop-while"
    ],
    "slug": "drop-right-while",
    "title": "Drop Right While"
  },
  "skeleton": {
    "js": "/**\n * @param {Array} array - The array to iterate over.\n * @param {Function} predicate - The function invoked per iteration.\n * @return {Array} Returns the slice of `array`.\n */\nexport default function dropRightWhile(array, predicate) {\n  throw 'Not implemented!';\n}",
    "ts": "export default function dropRightWhile<T>(\n  array: Array<T>,\n  predicate: (value?: T) => boolean,\n): T {\n  throw 'Not implemented!';\n}"
  },
  "solution": "var Component=(()=>{var p=Object.create;var o=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var f=Object.getOwnPropertyNames;var y=Object.getPrototypeOf,x=Object.prototype.hasOwnProperty;var g=(r,e)=>()=>(e||r((e={exports:{}}).exports,e),e.exports),_=(r,e)=>{for(var n in e)o(r,n,{get:e[n],enumerable:!0})},c=(r,e,n,a)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let i of f(e))!x.call(r,i)&&i!==n&&o(r,i,{get:()=>e[i],enumerable:!(a=m(e,i))||a.enumerable});return r};var j=(r,e,n)=>(n=r!=null?p(y(r)):{},c(e||!r||!r.__esModule?o(n,\"default\",{value:r,enumerable:!0}):n,r)),R=r=>c(o({},\"__esModule\",{value:!0}),r);var h=g((k,l)=>{l.exports=_jsx_runtime});var W={};_(W,{default:()=>D});var t=j(h());var d=MDXCodeBlock;var s=`/**\n * @param {Array} array - The array to iterate over.\n * @param {Function} predicate - The function invoked per iteration.\n * @return {Array} Returns the slice of \\`array\\`.\n */\nexport default function dropRightWhile(array, predicate) {\n  let i = array.length - 1;\n\n  while (i >= 0 && predicate(array[i], i, array)) {\n    i--;\n  }\n\n  return array.slice(0, i + 1);\n}\n`;function u(r){let e=Object.assign({h2:\"h2\",ul:\"ul\",li:\"li\",a:\"a\",code:\"code\"},r.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h2,{children:\"Solution\"}),`\n`,(0,t.jsx)(d,{children:s}),`\n`,(0,t.jsx)(e.h2,{children:\"Resources\"}),`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsx)(e.li,{children:(0,t.jsxs)(e.a,{href:\"https://lodash.com/docs/#dropRightWhile\",children:[\"Lodash \",(0,t.jsx)(e.code,{children:\"_.dropRightWhile\"})]})}),`\n`]})]})}function C(r={}){let{wrapper:e}=r.components||{};return e?(0,t.jsx)(e,Object.assign({},r,{children:(0,t.jsx)(u,r)})):u(r)}var D=C;return R(W);})();\n;return Component;",
  "tests": "import dropRightWhile from './drop-right-while';\n\ndescribe('dropRightWhile', () => {\n  test('should drop elements from the right until predicate returns falsey', () => {\n    const array = [1, 2, 3, 4, 5];\n    const predicate = (value) => value > 3;\n    expect(dropRightWhile(array, predicate)).toEqual([1, 2, 3]);\n  });\n\n  test('should return original array if predicate always returns falsey', () => {\n    const array = [1, 2, 3, 4, 5];\n    const predicate = (value) => value < 0;\n    expect(dropRightWhile(array, predicate)).toEqual([1, 2, 3, 4, 5]);\n  });\n\n  test('should return empty array if predicate always returns truthy', () => {\n    const array = [1, 2, 3, 4, 5];\n    const predicate = (value) => value < 6;\n    expect(dropRightWhile(array, predicate)).toEqual([]);\n  });\n\n  test('should return an empty array if array is empty', () => {\n    const array = [];\n    const predicate = (value) => value > 3;\n    expect(dropRightWhile(array, predicate)).toEqual([]);\n  });\n});"
}