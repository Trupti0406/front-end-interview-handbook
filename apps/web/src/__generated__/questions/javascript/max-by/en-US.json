{
  "description": "var Component=(()=>{var m=Object.create;var c=Object.defineProperty;var s=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var x=Object.getPrototypeOf,p=Object.prototype.hasOwnProperty;var f=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),y=(t,e)=>{for(var r in e)c(t,r,{get:e[r],enumerable:!0})},d=(t,e,r,a)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let i of u(e))!p.call(t,i)&&i!==r&&c(t,i,{get:()=>e[i],enumerable:!(a=s(e,i))||a.enumerable});return t};var g=(t,e,r)=>(r=t!=null?m(x(t)):{},d(e||!t||!t.__esModule?c(r,\"default\",{value:t,enumerable:!0}):r,t)),_=t=>d(c({},\"__esModule\",{value:!0}),t);var h=f((b,l)=>{l.exports=_jsx_runtime});var M={};y(M,{default:()=>B,frontmatter:()=>j});var n=g(h()),j={title:\"Max By\",excerpt:\"Implement a function that finds the maximum element based on the specified criteria\"};function o(t){let e=Object.assign({p:\"p\",code:\"code\",h2:\"h2\",ol:\"ol\",li:\"li\",em:\"em\",pre:\"pre\",ul:\"ul\",a:\"a\"},t.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(e.p,{children:[\"Implement a function \",(0,n.jsx)(e.code,{children:\"maxBy(array, [iteratee=_.identity])\"}),\" that finds the element inside \",(0,n.jsx)(e.code,{children:\"array\"}),\" with the maximum value after going through \",(0,n.jsx)(e.code,{children:\"iteratee\"}),\". The \",(0,n.jsx)(e.code,{children:\"iteratee\"}),\" is invoked with one argument: (value).\"]}),`\n`,(0,n.jsx)(e.h2,{children:\"Arguments\"}),`\n`,(0,n.jsxs)(e.ol,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"array\"}),\" \",(0,n.jsx)(e.em,{children:\"(Array)\"}),\": The array to iterate over.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"[iteratee=_.identity]\"}),\" \",(0,n.jsx)(e.em,{children:\"(Function)\"}),\": The iteratee invoked per element.\"]}),`\n`]}),`\n`,(0,n.jsx)(e.h2,{children:\"Returns\"}),`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.em,{children:\"(*)\"}),\": Returns the maximum value.\"]}),`\n`,(0,n.jsx)(e.h2,{children:\"Examples\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-js\",children:`maxBy([{ n: 1 }, { n: 2 }], (o) => o.n;); // => { n: 2 }\n\nmaxBy([{ n: 1 }, { n: 2 }], 'n'); // => { n: 2 }\n`})}),`\n`,(0,n.jsxs)(e.p,{children:[\"The function should return \",(0,n.jsx)(e.code,{children:\"undefined\"}),\" if there is no matching value that fulfills \",(0,n.jsx)(e.code,{children:\"iteratee\"}),\".\"]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-js\",children:`maxBy([{ n: 1 }, { n: 2 }], 'm'); // => undefined\n`})}),`\n`,(0,n.jsx)(e.h2,{children:\"Resources\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:(0,n.jsxs)(e.a,{href:\"https://lodash.com/docs/#maxBy\",children:[\"Lodash \",(0,n.jsx)(e.code,{children:\"_.maxBy\"})]})}),`\n`]})]})}function v(t={}){let{wrapper:e}=t.components||{};return e?(0,n.jsx)(e,Object.assign({},t,{children:(0,n.jsx)(o,t)})):o(t)}var B=v;return _(M);})();\n;return Component;",
  "files": {
    "/package.json": "{\n  \"name\": \"@gfe-questions/max-by\",\n  \"version\": \"0.0.1\",\n  \"main\": \"/src/max-by.ts\",\n  \"devDependencies\": {\n    \"@types/jest\": \"29.5.0\",\n    \"typescript\": \"5.0.2\"\n  }\n}\n",
    "/tsconfig.json": "{\n  \"include\": [\"./**/*\"],\n  \"compilerOptions\": {\n    \"strict\": true,\n    \"esModuleInterop\": true,\n    \"lib\": [\"dom\", \"esnext\"],\n    \"jsx\": \"react-jsx\"\n  }\n}\n",
    "/src/max-by.run.test.ts": "import maxBy from './max-by';\n\ndescribe('maxBy', () => {\n  test('no matching value', () => {\n    expect(maxBy([{ n: 1 }, { n: 2 }], 'm')).toEqual(undefined);\n  });\n\n  test('iteratee as a string', () => {\n    expect(maxBy([{ n: 1 }, { n: 2 }], 'n')).toEqual({ n: 2 });\n  });\n\n  test('iteratee as a function', () => {\n    expect(\n      maxBy([{ n: 1 }, { n: 2 }], function (o: any) {\n        return o.n;\n      }),\n    ).toEqual({ n: 2 });\n  });\n});\n",
    "/src/max-by.submit.test.ts": "import maxBy from './max-by';\n\ndescribe('maxBy', () => {\n  test('empty input array', () => {\n    expect(maxBy([], 'n')).toEqual(undefined);\n  });\n\n  test('iteratee as a string', () => {\n    expect(maxBy([{ n: 1 }, { n: 2 }, { n: 3 }], 'n')).toEqual({ n: 3 });\n    expect(maxBy([{ age: 30 }, { age: 22 }, { age: 40 }], 'age')).toEqual({\n      age: 40,\n    });\n  });\n\n  test('iteratee as a function', () => {\n    expect(maxBy([{ n: 1 }, { n: 2 }], (o: any) => o.n)).toEqual({ n: 2 });\n    expect(\n      maxBy(\n        [{ data: { score: 10 } }, { data: { score: 20 } }],\n        (o: any) => o.data.score,\n      ),\n    ).toEqual({ data: { score: 20 } });\n  });\n\n  test('strings comparison', () => {\n    expect(\n      maxBy(['apple', 'pear', 'banana'], (fruit: any) => fruit.length),\n    ).toEqual('banana');\n  });\n\n  test('non-existent property', () => {\n    expect(maxBy([{ n: 1 }, { n: 2 }], 'm')).toEqual(undefined);\n  });\n\n  test('mixed data types', () => {\n    expect(maxBy([1, '2', 3], (item: any) => Number(item))).toEqual(3);\n  });\n});\n",
    "/src/max-by.ts": "export default function maxBy(\n  array: Array<any>,\n  iteratee: Function | string,\n): any {\n  let result: any, computed: any;\n\n  // Convert string iteratee into function.\n  const iterateeFunc: Function =\n    typeof iteratee === 'function' ? iteratee : (value: any) => value[iteratee];\n\n  // Iterate through array to find the maximum `result`.\n  for (const value of array) {\n    const current: any = iterateeFunc(value);\n    if (current != null && (current > computed || computed === undefined)) {\n      computed = current; // Store the calculated value of the current `result`.\n      result = value;\n    }\n  }\n  return result;\n}\n"
  },
  "format": "javascript",
  "metadata": {
    "author": null,
    "companies": [],
    "created": 1710720000,
    "difficulty": "easy",
    "duration": 10,
    "excerpt": "Implement a function that finds the maximum element based on the specified criteria",
    "featured": false,
    "format": "javascript",
    "frameworkDefault": null,
    "frameworks": [],
    "href": "/questions/javascript/max-by",
    "importance": "low",
    "languages": [
      "js",
      "ts"
    ],
    "nextQuestions": [],
    "premium": true,
    "published": false,
    "ranking": 100,
    "similarQuestions": [
      "group-by",
      "min-by"
    ],
    "slug": "max-by",
    "subtitle": null,
    "title": "Max By",
    "topics": []
  },
  "skeleton": {
    "js": "/**\n * @param {Array} array The array to iterate over.\n * @param {Function|string} iteratee The iteratee invoked per element.\n * @returns {*} Returns the maximum value.\n */\nexport default function maxBy(array, iteratee) {\n  throw 'Not implemented!';\n}",
    "ts": "export default function maxBy(\n  array: Array<any>,\n  iteratee: Function | string,\n): any {\n  throw 'Not implemented!';\n}"
  },
  "solution": "var Component=(()=>{var f=Object.create;var o=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var y=Object.getOwnPropertyNames;var x=Object.getPrototypeOf,v=Object.prototype.hasOwnProperty;var g=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),F=(t,e)=>{for(var n in e)o(t,n,{get:e[n],enumerable:!0})},c=(t,e,n,u)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let a of y(e))!v.call(t,a)&&a!==n&&o(t,a,{get:()=>e[a],enumerable:!(u=p(e,a))||u.enumerable});return t};var j=(t,e,n)=>(n=t!=null?f(x(t)):{},c(e||!t||!t.__esModule?o(n,\"default\",{value:t,enumerable:!0}):n,t)),B=t=>c(o({},\"__esModule\",{value:!0}),t);var l=g((X,i)=>{i.exports=_jsx_runtime});var D={};F(D,{default:()=>M});var r=j(l());var s=MDXCodeBlock;var d=`/**\n * @param {Array} array The array to iterate over.\n * @param {Function|string} iteratee The iteratee invoked per element.\n * @returns {*} Returns the maximum value.\n */\nexport default function maxBy(array, iteratee) {\n  let result, computed;\n\n  // Convert string iteratee into function.\n  const iterateeFunc =\n    typeof iteratee === 'function' ? iteratee : (value) => value[iteratee];\n\n  // Iterate through array to find the maximum \\`result\\`.\n  for (const value of array) {\n    const current = iterateeFunc(value);\n    if (current != null && (current > computed || computed === undefined)) {\n      computed = current; // Store the calculated value of the current \\`result\\`.\n      result = value;\n    }\n  }\n  return result;\n}\n`;var m=`export default function maxBy(\n  array: Array<any>,\n  iteratee: Function | string,\n): any {\n  let result: any, computed: any;\n\n  // Convert string iteratee into function.\n  const iterateeFunc: Function =\n    typeof iteratee === 'function' ? iteratee : (value: any) => value[iteratee];\n\n  // Iterate through array to find the maximum \\`result\\`.\n  for (const value of array) {\n    const current: any = iterateeFunc(value);\n    if (current != null && (current > computed || computed === undefined)) {\n      computed = current; // Store the calculated value of the current \\`result\\`.\n      result = value;\n    }\n  }\n  return result;\n}\n`;function h(t){let e=Object.assign({h2:\"h2\",p:\"p\",code:\"code\",ul:\"ul\",li:\"li\",a:\"a\"},t.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.h2,{children:\"Solution\"}),`\n`,(0,r.jsxs)(e.p,{children:[\"Here's a solution that finds the maximum element in \",(0,r.jsx)(e.code,{children:\"array\"}),\" based on a given \",(0,r.jsx)(e.code,{children:\"iteratee\"}),\", using \",(0,r.jsx)(e.code,{children:\"result\"}),\" for the element and \",(0,r.jsx)(e.code,{children:\"computed\"}),\" for its value comparison.\"]}),`\n`,(0,r.jsx)(s,{languages:{jsx:d,tsx:m}}),`\n`,(0,r.jsx)(e.h2,{children:\"Edge Cases\"}),`\n`,(0,r.jsxs)(e.p,{children:[\"To handle mixed data types, the \",(0,r.jsx)(e.code,{children:\"iteratee\"}),\" function must be able to process them by either converting the elements to a common type or process them separately.\"]}),`\n`,(0,r.jsx)(e.h2,{children:\"Resources\"}),`\n`,(0,r.jsxs)(e.ul,{children:[`\n`,(0,r.jsx)(e.li,{children:(0,r.jsxs)(e.a,{href:\"https://lodash.com/docs/#maxBy\",children:[\"Lodash \",(0,r.jsx)(e.code,{children:\"_.maxBy\"})]})}),`\n`]})]})}function b(t={}){let{wrapper:e}=t.components||{};return e?(0,r.jsx)(e,Object.assign({},t,{children:(0,r.jsx)(h,t)})):h(t)}var M=b;return B(D);})();\n;return Component;",
  "workspace": {
    "main": "/src/max-by.ts",
    "run": "/src/max-by.run.test.ts",
    "submit": "/src/max-by.submit.test.ts"
  }
}