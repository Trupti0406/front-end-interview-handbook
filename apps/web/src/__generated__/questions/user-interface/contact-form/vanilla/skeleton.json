{
  "sandpack": {
    "dependencies": {},
    "entry": "/src/index.js",
    "environment": "parcel",
    "main": "/src/index.js",
    "visibleFiles": [
      "/index.html",
      "/src/styles.css"
    ],
    "files": {
      "/index.html": {
        "code": "<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width, initial-scale=1.0\" />\n  </head>\n  <body>\n    <form>\n      <input type=\"text\" />\n    </form>\n    <!-- You can ignore this file, it is only used by GFE to\n      intercept the form submission event. -->\n    <script src=\"src/index.js\"></script>\n  </body>\n</html>\n"
      },
      "/src/index.js": {
        "code": "import './styles.css';\n\n(() => {\n  const $form = document.querySelector('form');\n  $form.addEventListener('submit', async (event) => {\n    event.preventDefault();\n\n    try {\n      const formData = new FormData($form);\n      const response = await fetch(\n        // TODO: Change to URL from env.\n        'https://www.greatfrontend.com/api/questions/contact-form',\n        {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            name: formData.get('name'),\n            email: formData.get('email'),\n            message: formData.get('message'),\n          }),\n        },\n      );\n\n      const text = await response.text();\n      alert(text);\n    } catch (_) {\n      alert('Error submitting form!');\n    }\n  });\n})();\n"
      },
      "/src/styles.css": {
        "code": "body {\n  font-family: sans-serif;\n}\n"
      }
    }
  },
  "writeup": "var Component=(()=>{var g=Object.create;var s=Object.defineProperty;var b=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var x=Object.getPrototypeOf,w=Object.prototype.hasOwnProperty;var y=(i,e)=>()=>(e||i((e={exports:{}}).exports,e),e.exports),_=(i,e)=>{for(var t in e)s(i,t,{get:e[t],enumerable:!0})},c=(i,e,t,a)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let o of p(e))!w.call(i,o)&&o!==t&&s(i,o,{get:()=>e[o],enumerable:!(a=b(e,o))||a.enumerable});return i};var d=(i,e,t)=>(t=i!=null?g(x(i)):{},c(e||!i||!i.__esModule?s(t,\"default\",{value:i,enumerable:!0}):t,i)),j=i=>c(s({},\"__esModule\",{value:!0}),i);var r=y((S,h)=>{h.exports=_jsx_runtime});var q={};_(q,{default:()=>k});var l=d(r());var n=d(r());function u(i){let e=Object.assign({p:\"p\",h2:\"h2\",ul:\"ul\",li:\"li\",code:\"code\",strong:\"strong\"},i.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.p,{children:'Building forms is a common task in Front End. In this exercise, we will build a basic \"Contact Us\" form, commonly seen on marketing websites for visitors to ask questions or provide feedback.'}),`\n`,(0,n.jsx)(e.h2,{children:\"Requirements\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[\"The form should contain the following elements:\",`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:\"Name field\"}),`\n`,(0,n.jsx)(e.li,{children:\"Email field\"}),`\n`,(0,n.jsxs)(e.li,{children:[\"Message field. Since the message can be long, using a \",(0,n.jsx)(e.code,{children:\"<textarea>\"}),\" will be more suitable.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[\"Submit button\",`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:'Contains the text \"Send\".'}),`\n`,(0,n.jsx)(e.li,{children:\"Clicking on the submit button submits the form.\"}),`\n`]}),`\n`]}),`\n`]}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[\"The form and submission should be implemented entirely in HTML. \",(0,n.jsx)(e.strong,{children:\"No JavaScript should be used for this question\"}),\".\"]}),`\n`,(0,n.jsx)(e.li,{children:\"There is no need to do any client-side validation on the fields. Validation will be done on the server side.\"}),`\n`]}),`\n`,(0,n.jsx)(e.h2,{children:\"Submission API\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"Upon submission, \",(0,n.jsx)(e.code,{children:\"POST\"}),\" the form data to \",(0,n.jsx)(e.code,{children:\"https://www.greatfrontend.com/api/questions/contact-form\"}),\" with the following fields in the \",(0,n.jsx)(e.strong,{children:\"request body\"}),\": \",(0,n.jsx)(e.code,{children:\"name\"}),\", \",(0,n.jsx)(e.code,{children:\"email\"}),\", \",(0,n.jsx)(e.code,{children:\"message\"}),\".\"]}),`\n`,(0,n.jsx)(e.p,{children:\"If all the form fields are correctly filled up, you will see an alert containing a success message. Congratulations!\"}),`\n`,(0,n.jsx)(e.h2,{children:\"Notes\"}),`\n`,(0,n.jsx)(e.p,{children:\"This question is only available in Vanilla JS because the focus is on only HTML.\"})]})}function C(i={}){let{wrapper:e}=i.components||{};return e?(0,n.jsx)(e,Object.assign({},i,{children:(0,n.jsx)(u,i)})):u(i)}var m=C;function f(i){return(0,l.jsx)(m,{})}function M(i={}){let{wrapper:e}=i.components||{};return e?(0,l.jsx)(e,Object.assign({},i,{children:(0,l.jsx)(f,i)})):f(i)}var k=M;return j(q);})();\n;return Component;"
}