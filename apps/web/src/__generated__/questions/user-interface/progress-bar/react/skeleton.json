{
  "sandpack": {
    "dependencies": {
      "react": "^18.2.0",
      "react-dom": "^18.2.0",
      "react-scripts": "^4.0.0"
    },
    "entry": "/index.js",
    "environment": "create-react-app",
    "main": "/App.js",
    "visibleFiles": [
      "/App.js",
      "/ProgressBar.js",
      "/styles.css"
    ],
    "files": {
      "/App.js": {
        "code": "import ProgressBar from './ProgressBar';\n\nimport './styles.css';\n\nexport default function App() {\n  return (\n    <div>\n      <ProgressBar />\n    </div>\n  );\n}\n"
      },
      "/index.js": {
        "code": "import React, { StrictMode } from 'react';\nimport { createRoot } from 'react-dom/client';\n\nimport App from './App';\n\nconst root = createRoot(document.getElementById('root'));\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n);\n"
      },
      "/ProgressBar.js": {
        "code": "export default function ProgressBar() {\n  return <div className=\"progress\"></div>;\n}\n"
      },
      "/public/index.html": {
        "code": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width, initial-scale=1.0\" />\n  </head>\n  <body>\n    <div id=\"root\"></div>\n  </body>\n</html>\n"
      },
      "/styles.css": {
        "code": "body {\n  font-family: sans-serif;\n}\n\n.progress {\n  background-color: rgb(233, 236, 239);\n  border: 1px solid #c5c5c5;\n  border-radius: 8px;\n  height: 20px;\n}\n"
      }
    }
  },
  "writeup": "var Component=(()=>{var g=Object.create;var a=Object.defineProperty;var f=Object.getOwnPropertyDescriptor;var b=Object.getOwnPropertyNames;var x=Object.getPrototypeOf,j=Object.prototype.hasOwnProperty;var _=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports),w=(n,e)=>{for(var o in e)a(n,o,{get:e[o],enumerable:!0})},l=(n,e,o,c)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let s of b(e))!j.call(n,s)&&s!==o&&a(n,s,{get:()=>e[s],enumerable:!(c=f(e,s))||c.enumerable});return n};var m=(n,e,o)=>(o=n!=null?g(x(n)):{},l(e||!n||!n.__esModule?a(o,\"default\",{value:n,enumerable:!0}):o,n)),y=n=>l(a({},\"__esModule\",{value:!0}),n);var i=_((F,p)=>{p.exports=_jsx_runtime});var q={};w(q,{default:()=>B});var t=m(i());var r=m(i());function h(n){let e=Object.assign({p:\"p\",img:\"img\",h2:\"h2\",ul:\"ul\",li:\"li\",code:\"code\"},n.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.p,{children:\"Implement a progress bar component which shows the completion progress by filling the bar proportionately to the progress (a number between 0-100, inclusive).\"}),`\n`,(0,r.jsx)(e.p,{children:(0,r.jsx)(e.img,{src:\"/img/questions/progress-bar/progress-bar-example.png\",alt:\"Progress Bar Example\"})}),`\n`,(0,r.jsx)(e.h2,{children:\"Requirements\"}),`\n`,(0,r.jsxs)(e.ul,{children:[`\n`,(0,r.jsxs)(e.li,{children:[\"The filled bar can be of any background color. The example uses \",(0,r.jsx)(e.code,{children:\"#c5c5c5\"}),\".\"]}),`\n`,(0,r.jsx)(e.li,{children:\"The completion % is shown in the center of the filled bar.\"}),`\n`]})]})}function D(n={}){let{wrapper:e}=n.components||{};return e?(0,r.jsx)(e,Object.assign({},n,{children:(0,r.jsx)(h,n)})):h(n)}var u=D;function d(n){let e=Object.assign({p:\"p\",code:\"code\"},n.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(u,{}),`\n`,(0,t.jsxs)(e.p,{children:[\"A \",(0,t.jsx)(e.code,{children:\"ProgressBar.js\"}),\" skeleton component has been created for you. You are free to decide the props of \",(0,t.jsx)(e.code,{children:\"<ProgressBar />\"}),\".\"]})]})}function M(n={}){let{wrapper:e}=n.components||{};return e?(0,t.jsx)(e,Object.assign({},n,{children:(0,t.jsx)(d,n)})):d(n)}var B=M;return y(q);})();\n;return Component;"
}