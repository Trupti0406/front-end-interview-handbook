{
  "sandpack": {
    "dependencies": {
      "react": "^18.2.0",
      "react-dom": "^18.2.0",
      "react-scripts": "^4.0.0"
    },
    "entry": "/index.js",
    "environment": "create-react-app",
    "main": "/App.js",
    "visibleFiles": [
      "/src/App.js",
      "/src/styles.css"
    ],
    "activeFile": "/src/App.js",
    "files": {
      "/package.json": {
        "code": "{\n  \"name\": \"@gfe-questions/tic-tac-toe-ii-react-skeleton\",\n  \"version\": \"0.0.1\",\n  \"private\": true,\n  \"dependencies\": {\n    \"react\": \"18.2.0\",\n    \"react-dom\": \"18.2.0\",\n    \"react-scripts\": \"5.0.1\"\n  },\n  \"scripts\": {\n    \"start\": \"react-scripts start\",\n    \"build\": \"react-scripts build\",\n    \"test\": \"react-scripts test\",\n    \"eject\": \"react-scripts eject\"\n  }\n}"
      },
      "/public/index.html": {
        "code": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width, initial-scale=1.0\" />\n  </head>\n  <body>\n    <div id=\"root\"></div>\n  </body>\n</html>\n"
      },
      "/src/App.js": {
        "code": "import './styles.css';\n\nexport default function App() {\n  return <div>Hello World</div>;\n}\n"
      },
      "/src/index.js": {
        "code": "import React, { StrictMode } from 'react';\nimport { createRoot } from 'react-dom/client';\n\nimport App from './App';\n\nconst root = createRoot(document.getElementById('root'));\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n);\n"
      },
      "/src/styles.css": {
        "code": "body {\n  font-family: sans-serif;\n}\n"
      }
    }
  },
  "writeup": "var Component=(()=>{var p=Object.create;var r=Object.defineProperty;var f=Object.getOwnPropertyDescriptor;var w=Object.getOwnPropertyNames;var x=Object.getPrototypeOf,y=Object.prototype.hasOwnProperty;var b=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),k=(t,e)=>{for(var i in e)r(t,i,{get:e[i],enumerable:!0})},l=(t,e,i,s)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let a of w(e))!y.call(t,a)&&a!==i&&r(t,a,{get:()=>e[a],enumerable:!(s=f(e,a))||s.enumerable});return t};var h=(t,e,i)=>(i=t!=null?p(x(t)):{},l(e||!t||!t.__esModule?r(i,\"default\",{value:t,enumerable:!0}):i,t)),j=t=>l(r({},\"__esModule\",{value:!0}),t);var c=b((v,d)=>{d.exports=_jsx_runtime});var T={};k(T,{default:()=>N});var o=h(c());var n=h(c());function m(t){let e=Object.assign({p:\"p\",strong:\"strong\",a:\"a\",blockquote:\"blockquote\",em:\"em\",img:\"img\",h2:\"h2\",ul:\"ul\",li:\"li\"},t.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.strong,{children:\"Note:\"}),\" This is an advanced version of \",(0,n.jsx)(e.a,{href:\"/questions/user-interface/tic-tac-toe\",children:\"Tic-tac-toe\"}),\", you should complete that question first before attempting this question.\"]}),`\n`,(0,n.jsxs)(e.blockquote,{children:[`\n`,(0,n.jsx)(e.p,{children:\"Tic-tac-toe is a game for two players who take turns making space in a three-by-three grid with X or O. The player who succeeds in playing three of their marks in a horizontal, vertical, or diagonal row is the winner.\"}),`\n`]}),`\n`,(0,n.jsx)(e.p,{children:(0,n.jsxs)(e.em,{children:[\"Source: \",(0,n.jsx)(e.a,{href:\"https://en.wikipedia.org/wiki/Tic-tac-toe\",children:\"Wikipedia\"})]})}),`\n`,(0,n.jsx)(e.p,{children:\"Traditionally, tic-tac-toe uses a 3 x 3 grid. In this problem, build an advanced version of a tic-tac-toe game that has N x N cells on the board and needs M marks in a horizontal, vertical, or diagonal row to win.\"}),`\n`,(0,n.jsx)(e.p,{children:\"The following diagram shows an example game where N = 5 and M = 4.\"}),`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.img,{src:\"/img/questions/tic-tac-toe-ii/tic-tac-toe-ii-example.png\",alt:\"N x N Tic-tac-toe Example\"})}),`\n`,(0,n.jsx)(e.h2,{children:\"Requirements\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:\"Players can take turns to place an X or a O on an N x N board.\"}),`\n`,(0,n.jsx)(e.li,{children:\"A player wins if M of their marks are in a horizontal, vertical, or diagonal row.\"}),`\n`,(0,n.jsx)(e.li,{children:\"Display the current game status at the top: whose turn it is, winner (if any), or draw.\"}),`\n`,(0,n.jsx)(e.li,{children:'Add a \"Reset\" button to allow the game to be restarted at any time.'}),`\n`]}),`\n`,(0,n.jsxs)(e.p,{children:[\"If you aren't familiar with the game, try out \",(0,n.jsx)(e.a,{href:\"https://www.google.com/search?q=tic-tac-toe\",children:\"playing tic-tac-toe on Google\"}),\".\"]})]})}function q(t={}){let{wrapper:e}=t.components||{};return e?(0,n.jsx)(e,Object.assign({},t,{children:(0,n.jsx)(m,t)})):m(t)}var u=q;function g(t){return(0,o.jsx)(u,{})}function M(t={}){let{wrapper:e}=t.components||{};return e?(0,o.jsx)(e,Object.assign({},t,{children:(0,o.jsx)(g,t)})):g(t)}var N=M;return j(T);})();\n;return Component;"
}