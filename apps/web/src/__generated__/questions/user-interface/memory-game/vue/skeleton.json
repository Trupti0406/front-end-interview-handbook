{
  "author": "willnguyen1312",
  "files": {
    "/package.json": {
      "code": "{\n  \"name\": \"@gfe-questions/memory-game-vue-skeleton\",\n  \"author\": \"willnguyen1312\",\n  \"version\": \"0.0.1\",\n  \"main\": \"/src/main.js\",\n  \"scripts\": {\n    \"serve\": \"vue-cli-service serve\",\n    \"build\": \"vue-cli-service build\"\n  },\n  \"dependencies\": {\n    \"core-js\": \"3.32.2\",\n    \"vue\": \"3.3.4\"\n  },\n  \"devDependencies\": {\n    \"@vue/cli-plugin-babel\": \"5.0.8\",\n    \"@vue/cli-service\": \"5.0.8\"\n  }\n}\n"
    },
    "/public/index.html": {
      "code": "<!doctype html>\n<html>\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width,initial-scale=1.0\" />\n    <title>Vue</title>\n  </head>\n  <body>\n    <div id=\"app\"></div>\n    <!-- Built files will be auto injected -->\n  </body>\n</html>\n"
    },
    "/src/App.vue": {
      "code": "<script setup>\nimport { ref } from 'vue';\nconst msg = ref('world');\n</script>\n\n<template>\n  <h1>Hello {{ msg }}</h1>\n</template>\n"
    },
    "/src/main.js": {
      "code": "import { createApp } from 'vue';\nimport App from './App.vue';\n\nimport './styles.css';\n\ncreateApp(App).mount('#app');\n"
    },
    "/src/styles.css": {
      "code": "body {\n  font-family: sans-serif;\n}\n"
    }
  },
  "workspace": {
    "visibleFiles": [
      "/src/App.vue"
    ],
    "activeFile": "/src/App.vue",
    "environment": "vue-cli"
  },
  "writeup": "var Component=(()=>{var f=Object.create;var i=Object.defineProperty;var g=Object.getOwnPropertyDescriptor;var y=Object.getOwnPropertyNames;var w=Object.getPrototypeOf,x=Object.prototype.hasOwnProperty;var j=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),b=(t,e)=>{for(var n in e)i(t,n,{get:e[n],enumerable:!0})},c=(t,e,n,o)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let r of y(e))!x.call(t,r)&&r!==n&&i(t,r,{get:()=>e[r],enumerable:!(o=g(e,r))||o.enumerable});return t};var d=(t,e,n)=>(n=t!=null?f(w(t)):{},c(e||!t||!t.__esModule?i(n,\"default\",{value:t,enumerable:!0}):n,t)),_=t=>c(i({},\"__esModule\",{value:!0}),t);var l=j((X,m)=>{m.exports=_jsx_runtime});var k={};b(k,{default:()=>M});var s=d(l());var a=d(l());function h(t){let e=Object.assign({p:\"p\",img:\"img\",h2:\"h2\",ul:\"ul\",li:\"li\"},t.components);return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.p,{children:\"Build a memory game where the player needs to match pairs of cards.\"}),`\n`,(0,a.jsx)(e.p,{children:(0,a.jsx)(e.img,{src:\"/img/questions/memory-game/memory-game-example.png\",alt:\"Memory game example\"})}),`\n`,(0,a.jsx)(e.h2,{children:\"Requirements\"}),`\n`,(0,a.jsxs)(e.ul,{children:[`\n`,(0,a.jsx)(e.li,{children:\"Display a grid of faced-down cards on the screen, with each card representing a different item or image. You can use emojis as the image, a list of emojis has been provided.\"}),`\n`,(0,a.jsx)(e.li,{children:\"The grid should consist of an equal number of cards to make pairs.\"}),`\n`,(0,a.jsx)(e.li,{children:\"When a player clicks on a card, it should flip over and reveal its image.\"}),`\n`,(0,a.jsx)(e.li,{children:\"Allow the player to select two cards at a time.\"}),`\n`,(0,a.jsx)(e.li,{children:\"If the two selected cards have the same image, it's a match and they should remain face-up.\"}),`\n`,(0,a.jsxs)(e.li,{children:[\"If the two selected cards have different images and the player\",`\n`,(0,a.jsxs)(e.ul,{children:[`\n`,(0,a.jsx)(e.li,{children:\"Selects other cards, the two selected cards should flip back.\"}),`\n`,(0,a.jsx)(e.li,{children:\"Do nothing, the two selected cards should flip back facedown after a short delay.\"}),`\n`]}),`\n`]}),`\n`,(0,a.jsx)(e.li,{children:'When all pairs have been successfully matched, end the game and display a \"Play again\" button.'}),`\n`]})]})}function v(t={}){let{wrapper:e}=t.components||{};return e?(0,a.jsx)(e,Object.assign({},t,{children:(0,a.jsx)(h,t)})):h(t)}var u=v;function p(t){return(0,s.jsx)(u,{})}function D(t={}){let{wrapper:e}=t.components||{};return e?(0,s.jsx)(e,Object.assign({},t,{children:(0,s.jsx)(p,t)})):p(t)}var M=D;return _(k);})();\n;return Component;"
}