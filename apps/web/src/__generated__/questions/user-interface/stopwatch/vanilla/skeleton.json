{
  "sandpack": {
    "dependencies": {},
    "entry": "/src/index.js",
    "environment": "parcel",
    "main": "/src/index.js",
    "visibleFiles": [
      "/index.html",
      "/src/index.js",
      "/src/styles.css"
    ],
    "files": {
      "/index.html": {
        "code": "<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width, initial-scale=1.0\" />\n  </head>\n  <body>\n    <script src=\"src/index.js\"></script>\n  </body>\n</html>\n"
      },
      "/src/index.js": {
        "code": "import './styles.css';\n\n// Write your JavaScript here.\n"
      },
      "/src/styles.css": {
        "code": "body {\n  font-family: sans-serif;\n}\n"
      }
    }
  },
  "writeup": "var Component=(()=>{var w=Object.create;var r=Object.defineProperty;var f=Object.getOwnPropertyDescriptor;var g=Object.getOwnPropertyNames;var x=Object.getPrototypeOf,j=Object.prototype.hasOwnProperty;var b=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),y=(e,t)=>{for(var o in t)r(e,o,{get:t[o],enumerable:!0})},h=(e,t,o,c)=>{if(t&&typeof t==\"object\"||typeof t==\"function\")for(let i of g(t))!j.call(e,i)&&i!==o&&r(e,i,{get:()=>t[i],enumerable:!(c=f(t,i))||c.enumerable});return e};var l=(e,t,o)=>(o=e!=null?w(x(e)):{},h(t||!e||!e.__esModule?r(o,\"default\",{value:e,enumerable:!0}):o,e)),_=e=>h(r({},\"__esModule\",{value:!0}),e);var a=b((X,u)=>{u.exports=_jsx_runtime});var C={};y(C,{default:()=>M});var s=l(a());var n=l(a());function d(e){let t=Object.assign({p:\"p\",h2:\"h2\",ul:\"ul\",li:\"li\",a:\"a\"},e.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.p,{children:'Build a stopwatch widget which can measure how much time has passed. It shows the current timer and has two buttons underneath: \"Start/Stop\" and \"Reset\".'}),`\n`,(0,n.jsx)(t.h2,{children:\"Requirements\"}),`\n`,(0,n.jsxs)(t.ul,{children:[`\n`,(0,n.jsx)(t.li,{children:\"Start/Stop Button: Starts/stops the timer depending on whether the timer is running.\"}),`\n`,(0,n.jsx)(t.li,{children:\"Reset: Resets the timer to 0 and stops the timer.\"}),`\n`,(0,n.jsxs)(t.li,{children:[\"The timer shows the number of seconds elapsed, down to the millisecond.\",`\n`,(0,n.jsxs)(t.ul,{children:[`\n`,(0,n.jsx)(t.li,{children:\"Clicking on the timer should start/stop the timer. The Start/Stop button's label should update accordingly as well.\"}),`\n`,(0,n.jsx)(t.li,{children:\"It'd be a nice optional addition to format the time to display in hh:mm:ss:ms format.\"}),`\n`]}),`\n`]}),`\n`]}),`\n`,(0,n.jsxs)(t.p,{children:[\"You are free to exercise your creativity to style the appearance of the stopwatch. You can try out \",(0,n.jsx)(t.a,{href:\"https://www.google.com/search?q=stopwatch\",children:\"Google's stopwatch widget\"}),\" for inspiration and an example.\"]})]})}function S(e={}){let{wrapper:t}=e.components||{};return t?(0,n.jsx)(t,Object.assign({},e,{children:(0,n.jsx)(d,e)})):d(e)}var m=S;function p(e){return(0,s.jsx)(m,{})}function D(e={}){let{wrapper:t}=e.components||{};return t?(0,s.jsx)(t,Object.assign({},e,{children:(0,s.jsx)(p,e)})):p(e)}var M=D;return _(C);})();\n;return Component;"
}