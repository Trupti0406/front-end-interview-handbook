{
  "description": null,
  "format": "quiz",
  "metadata": {
    "author": null,
    "companies": [],
    "created": 1630800000,
    "difficulty": "hard",
    "duration": 5,
    "excerpt": null,
    "featured": true,
    "format": "quiz",
    "frameworkDefault": null,
    "frameworks": [],
    "href": "/questions/quiz/what-is-the-extent-of-your-experience-with-promises-andor-their-polyfills",
    "importance": "low",
    "languages": [],
    "nextQuestions": [],
    "premium": false,
    "published": true,
    "ranking": 999,
    "similarQuestions": [],
    "slug": "what-is-the-extent-of-your-experience-with-promises-andor-their-polyfills",
    "subtitle": null,
    "title": "Qual é a extensão da sua experiência com Promises e/ou seus polyfills?",
    "topics": [
      "javascript"
    ]
  },
  "solution": "var Component=(()=>{var c=Object.create;var a=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var f=Object.getPrototypeOf,x=Object.prototype.hasOwnProperty;var j=(e,o)=>()=>(o||e((o={exports:{}}).exports,o),o.exports),v=(e,o)=>{for(var r in o)a(e,r,{get:o[r],enumerable:!0})},i=(e,o,r,t)=>{if(o&&typeof o==\"object\"||typeof o==\"function\")for(let n of p(o))!x.call(e,n)&&n!==r&&a(e,n,{get:()=>o[n],enumerable:!(t=u(o,n))||t.enumerable});return e};var h=(e,o,r)=>(r=e!=null?c(f(e)):{},i(o||!e||!e.__esModule?a(r,\"default\",{value:e,enumerable:!0}):r,e)),g=e=>i(a({},\"__esModule\",{value:!0}),e);var l=j((O,m)=>{m.exports=_jsx_runtime});var P={};v(P,{default:()=>y,frontmatter:()=>_});var s=h(l()),_={title:\"Qual \\xE9 a extens\\xE3o da sua experi\\xEAncia com Promises e/ou seus polyfills?\"};function d(e){let o=Object.assign({p:\"p\",code:\"code\"},e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(o.p,{children:\"Eu tenho conhecimento pr\\xE1tico sobre Promises e seus polyfills. Uma promise \\xE9 um objeto que pode produzir um \\xFAnico valor em algum momento futuro: seja um valor resolvido ou uma raz\\xE3o pela qual n\\xE3o foi resolvido (por exemplo, ocorreu um erro de rede). Uma promise pode estar em um dos 3 estados poss\\xEDveis: resolvida, rejeitada ou pendente. Usu\\xE1rios de Promise podem anexar callbacks para lidar com o valor resolvido ou o motivo da rejei\\xE7\\xE3o.\"}),`\n`,(0,s.jsxs)(o.p,{children:[\"Alguns polyfills comuns s\\xE3o \",(0,s.jsx)(o.code,{children:\"$.deferred\"}),\", Q e Bluebird, mas nem todos eles est\\xE3o em conformidade com a especifica\\xE7\\xE3o. O ES2015 suporta Promises nativamente e geralmente n\\xE3o s\\xE3o necess\\xE1rios polyfills nos dias de hoje.\"]})]})}function b(e={}){let{wrapper:o}=e.components||{};return o?(0,s.jsx)(o,Object.assign({},e,{children:(0,s.jsx)(d,e)})):d(e)}var y=b;return g(P);})();\n;return Component;"
}