{
  "description": null,
  "format": "quiz",
  "metadata": {
    "author": null,
    "companies": [],
    "created": 1630800000,
    "difficulty": "easy",
    "duration": 5,
    "excerpt": null,
    "featured": false,
    "format": "quiz",
    "frameworkDefault": null,
    "frameworks": [],
    "href": "/questions/quiz/how-do-you-cancel-a-fetch-request",
    "importance": "low",
    "languages": [],
    "nextQuestions": [],
    "premium": false,
    "published": true,
    "ranking": 999,
    "similarQuestions": [],
    "slug": "how-do-you-cancel-a-fetch-request",
    "subtitle": null,
    "title": "How do you cancel a `fetch` request?",
    "topics": [
      "javascript"
    ]
  },
  "solution": "var Component=(()=>{var i=Object.create;var l=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var g=Object.getOwnPropertyNames;var b=Object.getPrototypeOf,m=Object.prototype.hasOwnProperty;var u=(r,e)=>()=>(e||r((e={exports:{}}).exports,e),e.exports),f=(r,e)=>{for(var o in e)l(r,o,{get:e[o],enumerable:!0})},h=(r,e,o,c)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let t of g(e))!m.call(r,t)&&t!==o&&l(r,t,{get:()=>e[t],enumerable:!(c=p(e,t))||c.enumerable});return r};var A=(r,e,o)=>(o=r!=null?i(b(r)):{},h(e||!r||!r.__esModule?l(o,\"default\",{value:r,enumerable:!0}):o,r)),j=r=>h(l({},\"__esModule\",{value:!0}),r);var a=u((N,s)=>{s.exports=_jsx_runtime});var q={};f(q,{default:()=>F,frontmatter:()=>x});var n=A(a()),x={title:\"How do you cancel a `fetch` request?\"};function d(r){let e=Object.assign({h2:\"h2\",p:\"p\",code:\"code\",pre:\"pre\",hr:\"hr\",h3:\"h3\",ol:\"ol\",li:\"li\",strong:\"strong\",ul:\"ul\",a:\"a\"},r.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.h2,{children:\"TL;DR\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"To cancel a \",(0,n.jsx)(e.code,{children:\"fetch\"}),\" request, you can use the \",(0,n.jsx)(e.code,{children:\"AbortController\"}),\" API. Create an instance of \",(0,n.jsx)(e.code,{children:\"AbortController\"}),\", pass its \",(0,n.jsx)(e.code,{children:\"signal\"}),\" property to the \",(0,n.jsx)(e.code,{children:\"fetch\"}),\" request, and call the \",(0,n.jsx)(e.code,{children:\"abort\"}),\" method on the controller to cancel the request.\"]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-js\",children:`const controller = new AbortController();\nconst signal = controller.signal;\n\nfetch('https://example.com', { signal })\n  .then((response) => response.json())\n  .then((data) => console.log(data))\n  .catch((err) => {\n    if (err.name === 'AbortError') {\n      console.log('Fetch aborted');\n    } else {\n      console.error('Fetch error:', err);\n    }\n  });\n\n// To cancel the request\ncontroller.abort();\n`})}),`\n`,(0,n.jsx)(e.hr,{}),`\n`,(0,n.jsxs)(e.h2,{children:[\"How do you cancel a \",(0,n.jsx)(e.code,{children:\"fetch\"}),\" request?\"]}),`\n`,(0,n.jsxs)(e.h3,{children:[\"Using the \",(0,n.jsx)(e.code,{children:\"AbortController\"}),\" API\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"The \",(0,n.jsx)(e.code,{children:\"AbortController\"}),\" API provides a way to abort web requests such as \",(0,n.jsx)(e.code,{children:\"fetch\"}),\". Here's a step-by-step guide on how to use it:\"]}),`\n`,(0,n.jsxs)(e.ol,{children:[`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsxs)(e.strong,{children:[\"Create an instance of \",(0,n.jsx)(e.code,{children:\"AbortController\"})]}),\":\"]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-js\",children:`const controller = new AbortController();\n`})}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsxs)(e.strong,{children:[\"Get the \",(0,n.jsx)(e.code,{children:\"signal\"}),\" property from the controller\"]}),\":\"]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-js\",children:`const signal = controller.signal;\n`})}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsxs)(e.strong,{children:[\"Pass the \",(0,n.jsx)(e.code,{children:\"signal\"}),\" to the \",(0,n.jsx)(e.code,{children:\"fetch\"}),\" request\"]}),\":\"]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-js\",children:`fetch('https://example.com', { signal })\n  .then((response) => response.json())\n  .then((data) => console.log(data))\n  .catch((err) => {\n    if (err.name === 'AbortError') {\n      console.log('Fetch aborted');\n    } else {\n      console.error('Fetch error:', err);\n    }\n  });\n`})}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsxs)(e.strong,{children:[\"Call the \",(0,n.jsx)(e.code,{children:\"abort\"}),\" method to cancel the request\"]}),\":\"]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-js\",children:`controller.abort();\n`})}),`\n`]}),`\n`]}),`\n`,(0,n.jsx)(e.h3,{children:\"Handling the abort error\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"When a fetch request is aborted, it throws an error with the name \",(0,n.jsx)(e.code,{children:\"AbortError\"}),\". You can handle this error in the \",(0,n.jsx)(e.code,{children:\"catch\"}),\" block of the promise chain:\"]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-js\",children:`fetch('https://example.com', { signal })\n  .then((response) => response.json())\n  .then((data) => console.log(data))\n  .catch((err) => {\n    if (err.name === 'AbortError') {\n      console.log('Fetch aborted');\n    } else {\n      console.error('Fetch error:', err);\n    }\n  });\n`})}),`\n`,(0,n.jsx)(e.h3,{children:\"Example\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"Here is a complete example that demonstrates how to cancel a \",(0,n.jsx)(e.code,{children:\"fetch\"}),\" request:\"]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-js\",children:`const controller = new AbortController();\nconst signal = controller.signal;\n\nfetch('https://example.com', { signal })\n  .then((response) => response.json())\n  .then((data) => console.log(data))\n  .catch((err) => {\n    if (err.name === 'AbortError') {\n      console.log('Fetch aborted');\n    } else {\n      console.error('Fetch error:', err);\n    }\n  });\n\n// To cancel the request\ncontroller.abort();\n`})}),`\n`,(0,n.jsx)(e.h2,{children:\"Further reading\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"https://developer.mozilla.org/en-US/docs/Web/API/AbortController\",children:\"MDN Web Docs: AbortController\"})}),`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API\",children:\"MDN Web Docs: Fetch API\"})}),`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"https://developer.mozilla.org/en-US/docs/Web/API/AbortSignal\",children:\"MDN Web Docs: AbortSignal\"})}),`\n`]})]})}function C(r={}){let{wrapper:e}=r.components||{};return e?(0,n.jsx)(e,Object.assign({},r,{children:(0,n.jsx)(d,r)})):d(r)}var F=C;return j(q);})();\n;return Component;"
}