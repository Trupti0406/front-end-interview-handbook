{
  "description": null,
  "format": "quiz",
  "metadata": {
    "author": null,
    "companies": [
      "bytedance"
    ],
    "created": 1630800000,
    "difficulty": "medium",
    "duration": 5,
    "excerpt": null,
    "featured": true,
    "format": "quiz",
    "frameworkDefault": null,
    "frameworks": [],
    "href": "/questions/quiz/describe-the-difference-between-a-cookie-sessionstorage-and-localstorage",
    "importance": "high",
    "languages": [],
    "nextQuestions": [],
    "premium": false,
    "published": true,
    "ranking": 2,
    "similarQuestions": [],
    "slug": "describe-the-difference-between-a-cookie-sessionstorage-and-localstorage",
    "title": "Describe the difference between a cookie, `sessionStorage` and `localStorage`.",
    "subtitle": null,
    "topics": [
      "html",
      "javascript"
    ]
  },
  "solution": "var Component=(()=>{var h=Object.create;var o=Object.defineProperty;var b=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var m=Object.getPrototypeOf,p=Object.prototype.hasOwnProperty;var g=(r,e)=>()=>(e||r((e={exports:{}}).exports,e),e.exports),y=(r,e)=>{for(var i in e)o(r,i,{get:e[i],enumerable:!0})},d=(r,e,i,s)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let n of u(e))!p.call(r,n)&&n!==i&&o(r,n,{get:()=>e[n],enumerable:!(s=b(e,n))||s.enumerable});return r};var w=(r,e,i)=>(i=r!=null?h(m(r)):{},d(e||!r||!r.__esModule?o(i,\"default\",{value:r,enumerable:!0}):i,r)),f=r=>d(o({},\"__esModule\",{value:!0}),r);var l=g((j,a)=>{a.exports=_jsx_runtime});var C={};y(C,{default:()=>x,frontmatter:()=>v});var t=w(l()),v={title:\"Describe the difference between a cookie, `sessionStorage` and `localStorage`.\"};function c(r){let e=Object.assign({p:\"p\",h2:\"h2\",code:\"code\",ul:\"ul\",li:\"li\",table:\"table\",thead:\"thead\",tr:\"tr\",th:\"th\",tbody:\"tbody\",td:\"td\",a:\"a\"},r.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.p,{children:\"Local storage is useful for storing data that the user will need to access later, such as offline data, because it stores the data in the browser and the system. This data will persist even if the user closes and reopens the browser and is accessible by other sites.\"}),`\n`,(0,t.jsx)(e.p,{children:\"Session storage is a great way to improve the performance of your web applications. It stores data locally on the browser but is specific to (and only accessible by) the respective site/browser tab and is only available while the user is on the site/tab. This is a more secure storage method due to the restrictive access and promotes better site performance due to reduced data transfer between server and client.\"}),`\n`,(0,t.jsx)(e.p,{children:\"Cookies are a good choice for storing data that should not be persisted for a long time, such as session IDs. Cookies allow you to set an expiry time at which point it would be deleted. Cookies can only be smaller sized data compared to the other two storage methods.\"}),`\n`,(0,t.jsx)(e.h2,{children:\"Similarities\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"Cookies, \",(0,t.jsx)(e.code,{children:\"localStorage\"}),\", and \",(0,t.jsx)(e.code,{children:\"sessionStorage\"}),\", are all:\"]}),`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsx)(e.li,{children:\"Storage mechanisms on the client side. This means the clients can read and modify the values.\"}),`\n`,(0,t.jsx)(e.li,{children:\"Key-value based storage.\"}),`\n`,(0,t.jsxs)(e.li,{children:[\"They are only able to store values as strings. Objects will have to be serialized into a string (\",(0,t.jsx)(e.code,{children:\"JSON.stringify()\"}),\") in order to be stored.\"]}),`\n`]}),`\n`,(0,t.jsx)(e.h2,{children:\"Differences\"}),`\n`,(0,t.jsxs)(e.table,{children:[(0,t.jsx)(e.thead,{children:(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.th,{children:\"Property\"}),(0,t.jsx)(e.th,{children:\"Cookie\"}),(0,t.jsx)(e.th,{children:(0,t.jsx)(e.code,{children:\"localStorage\"})}),(0,t.jsx)(e.th,{children:(0,t.jsx)(e.code,{children:\"sessionStorage\"})})]})}),(0,t.jsxs)(e.tbody,{children:[(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:\"Initiator\"}),(0,t.jsxs)(e.td,{children:[\"Client or server. Server can use \",(0,t.jsx)(e.code,{children:\"Set-Cookie\"}),\" header\"]}),(0,t.jsx)(e.td,{children:\"Client\"}),(0,t.jsx)(e.td,{children:\"Client\"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:\"Expiry\"}),(0,t.jsx)(e.td,{children:\"Manually set\"}),(0,t.jsx)(e.td,{children:\"Forever\"}),(0,t.jsx)(e.td,{children:\"On tab close\"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:\"Persistent across browser sessions\"}),(0,t.jsx)(e.td,{children:\"Depends on whether expiration is set\"}),(0,t.jsx)(e.td,{children:\"Yes\"}),(0,t.jsx)(e.td,{children:\"No\"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:\"Sent to server with every HTTP request\"}),(0,t.jsxs)(e.td,{children:[\"Cookies are automatically being sent via \",(0,t.jsx)(e.code,{children:\"Cookie\"}),\" header\"]}),(0,t.jsx)(e.td,{children:\"No\"}),(0,t.jsx)(e.td,{children:\"No\"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:\"Capacity (per domain)\"}),(0,t.jsx)(e.td,{children:\"4kb\"}),(0,t.jsx)(e.td,{children:\"5MB\"}),(0,t.jsx)(e.td,{children:\"5MB\"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:\"Access\"}),(0,t.jsx)(e.td,{children:\"Any window\"}),(0,t.jsx)(e.td,{children:\"Any window\"}),(0,t.jsx)(e.td,{children:\"Same tab\"})]})]})]}),`\n`,(0,t.jsxs)(e.p,{children:[\"There are also other client-side storage mechanisms like \",(0,t.jsx)(e.a,{href:\"https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API\",children:\"IndexedDB\"}),\" which is more powerful than the above-mentioned technologies but more complicated to use.\"]})]})}function S(r={}){let{wrapper:e}=r.components||{};return e?(0,t.jsx)(e,Object.assign({},r,{children:(0,t.jsx)(c,r)})):c(r)}var x=S;return f(C);})();\n;return Component;"
}