{
  "files": {
    "/jsconfig.json": {
      "code": "{\n  \"compilerOptions\": {\n    \"baseUrl\": \".\"\n  },\n  \"include\": [\"src\"]\n}\n"
    },
    "/package.json": {
      "code": "{\n  \"name\": \"@gfe-challenges/product-reviews-solution\",\n  \"version\": \"0.0.1\",\n  \"dependencies\": {\n    \"clsx\": \"^2.1.1\",\n    \"react-icons\": \"^5.2.1\",\n    \"react-router-dom\": \"^6.23.1\",\n    \"usehooks-ts\": \"^3.1.0\",\n    \"react\": \"^18.3.1\",\n    \"react-dom\": \"^18.3.1\",\n    \"react-scripts\": \"5.0.1\"\n  },\n  \"scripts\": {\n    \"start\": \"react-scripts start\",\n    \"build\": \"react-scripts build\",\n    \"test\": \"react-scripts test\",\n    \"eject\": \"react-scripts eject\"\n  }\n}\n"
    },
    "/public/index.html": {
      "code": "<!doctype html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n    <meta name=\"theme-color\" content=\"#000000\" />\n    <meta\n      name=\"description\"\n      content=\"Web site created using create-react-app\" />\n    <title>Product Reviews</title>\n  </head>\n  <body>\n    <noscript>You need to enable JavaScript to run this app.</noscript>\n    <div id=\"root\"></div>\n  </body>\n</html>\n"
    },
    "/src/App.js": {
      "code": "import clsx from 'clsx';\n\nimport Modal from 'src/components/ui/Modal';\nimport Reviews from 'src/components/Reviews';\nimport ProductReviewsContextProvider from 'src/components/Reviews/ProductReviewsContext';\n\nfunction App() {\n  const isModalOpen = true;\n\n  return (\n    <main className=\"mx-auto min-h-screen max-w-[1440px] p-4\">\n      <div\n        className={clsx(\n          'min-h-[calc(100vh_-_32px)] rounded-md bg-white',\n          'shadow-sm md:shadow-md lg:shadow-lg',\n        )}>\n        <Modal isOpen={isModalOpen} onClose={() => {}}>\n          <ProductReviewsContextProvider>\n            <Reviews />\n          </ProductReviewsContextProvider>\n        </Modal>\n      </div>\n    </main>\n  );\n}\n\nexport default App;\n"
    },
    "/src/components/Reviews/index.js": {
      "code": "import Reviews from './Reviews';\n\nexport default Reviews;\n"
    },
    "/src/components/Reviews/OverallRating.jsx": {
      "code": "import clsx from 'clsx';\nimport Rating from '../ui/Rating';\nimport ProgressBar from '../ui/ProgressBar/ProgressBar';\nimport Button from '../ui/Button';\nimport { useProductReviewsContext } from './ProductReviewsContext';\n\nconst OverallRating = () => {\n  const { aggregateRating, onRatingSelect, selectedRating } =\n    useProductReviewsContext();\n  const hasReviews = !!aggregateRating.total;\n\n  const ratingData = [\n    {\n      name: 'Excellent',\n      color: '#16A34A',\n      value: aggregateRating.counts.find((item) => item.rating === 5).count,\n      rating: 5,\n    },\n    {\n      name: 'Good',\n      color: '#22C55E',\n      value: aggregateRating.counts.find((item) => item.rating === 4).count,\n      rating: 4,\n    },\n    {\n      name: 'Average',\n      color: '#FDE047',\n      value: aggregateRating.counts.find((item) => item.rating === 3).count,\n      rating: 3,\n    },\n    {\n      name: 'Below Average',\n      color: '#EAB308',\n      value: aggregateRating.counts.find((item) => item.rating === 2).count,\n      rating: 2,\n    },\n    {\n      name: 'Poor',\n      color: '#FACC15',\n      value: aggregateRating.counts.find((item) => item.rating === 1).count,\n      rating: 1,\n    },\n  ];\n  return (\n    <div className={clsx('flex flex-col gap-6')}>\n      <div className=\"flex flex-col gap-2\">\n        <div className=\"text-xl font-semibold text-neutral-900\">\n          Overall Rating\n        </div>\n        <div className=\"flex items-center gap-2\">\n          <span className=\"text-base font-semibold text-neutral-900\">\n            {aggregateRating.rating}\n          </span>\n          <Rating value={4.5} className=\"gap-2\" />\n          {hasReviews && (\n            <span className=\"text-nowrap text-sm text-neutral-600\">\n              Based on {aggregateRating.total} reviews\n            </span>\n          )}\n        </div>\n      </div>\n\n      <fieldset className={clsx('flex flex-col gap-4', 'py-4')}>\n        <legend id=\"rating-filter\" className=\"sr-only\">\n          Filter by Rating\n        </legend>\n        {ratingData.map(({ name, color, value, rating }) => {\n          const ratingPercentage =\n            aggregateRating.total === 0\n              ? 0\n              : Math.floor((value / aggregateRating.total) * 100);\n\n          return (\n            <button\n              className={clsx(\n                'flex items-center gap-2 self-stretch',\n                'text-neutral-600 disabled:text-neutral-400',\n                'cursor-pointer disabled:pointer-events-none',\n              )}\n              key={rating}\n              disabled={!hasReviews}\n              aria-pressed={selectedRating === rating ? 'true' : 'false'}\n              aria-label={`Filter by ${rating} stars`}\n              onClick={() => onRatingSelect(rating)}>\n              <span\n                className={clsx(\n                  'w-[120px]',\n                  'px-0.5',\n                  'text-left font-medium',\n                )}>\n                {name}\n              </span>\n              <ProgressBar value={ratingPercentage} color={color} />\n              <span className=\"w-[42px] text-right\">{ratingPercentage}%</span>\n            </button>\n          );\n        })}\n      </fieldset>\n\n      <div className=\"flex justify-center gap-6\">\n        {selectedRating && (\n          <div className=\"flex-1\">\n            <Button\n              label=\"Clear Filter\"\n              variant=\"tertiary\"\n              size=\"xl\"\n              className=\"w-full\"\n              onClick={() => onRatingSelect(null)}\n            />\n          </div>\n        )}\n        <div className={clsx(selectedRating ? 'flex-1' : 'w-[153px]')}>\n          <Button\n            label=\"Write a review\"\n            variant=\"secondary\"\n            size=\"xl\"\n            className=\"w-full\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default OverallRating;\n"
    },
    "/src/components/Reviews/ProductReviewsContext.jsx": {
      "code": "import { useMediaQuery } from 'usehooks-ts';\nimport {\n  createContext,\n  useContext,\n  useState,\n  useEffect,\n  useCallback,\n  useMemo,\n} from 'react';\n\nconst ProductReviewsContext = createContext();\n\nexport const useProductReviewsContext = () => useContext(ProductReviewsContext);\n\nconst ProductReviewsContextProvider = ({ children }) => {\n  const isDesktopView = useMediaQuery('(min-width: 1024px)');\n  const [reviews, setReviews] = useState([]);\n  const [isInitialLoading, setIsInitialLoading] = useState(true);\n  const [isFetchingMore, setIsFetchingMore] = useState(false);\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pagination, setPagination] = useState({\n    hasMore: false,\n    total: 0,\n  });\n  const [aggregateRating, setAggregateRating] = useState(null);\n  const [selectedRating, setSelectedRating] = useState(null);\n  const limit = isDesktopView ? 12 : 10;\n\n  const getReviews = useCallback(\n    async (initialFetching = false) => {\n      if (initialFetching) {\n        setIsInitialLoading(true);\n      } else {\n        setIsFetchingMore(true);\n      }\n\n      const data = await fetch(\n        `https://www.greatfrontend.com/api/projects/challenges/e-commerce/products/voyager-hoodie/reviews?page=${currentPage}&per_page=${limit}${\n          selectedRating ? `&rating=${selectedRating}` : ''\n        }`,\n      );\n      const result = await data.json();\n      if (result) {\n        setReviews(\n          currentPage === 1 ? result.data : (prev) => [...prev, ...result.data],\n        );\n        setAggregateRating(result.aggregate);\n        setPagination({\n          hasMore: result.pagination.has_more,\n          total: result.pagination.total,\n        });\n        setCurrentPage(result.pagination.page);\n      }\n      setIsInitialLoading(false);\n      setIsFetchingMore(false);\n    },\n    [currentPage, limit, selectedRating],\n  );\n\n  useEffect(() => {\n    getReviews(isInitialLoading);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentPage, selectedRating]);\n\n  const loadMoreReviews = useCallback(() => {\n    if (pagination.hasMore) {\n      setCurrentPage((prev) => prev + 1);\n    }\n  }, [pagination.hasMore]);\n\n  const onRatingSelect = useCallback((value) => {\n    setSelectedRating(value);\n    setCurrentPage(1);\n  }, []);\n\n  const value = useMemo(() => {\n    return {\n      reviews,\n      pagination,\n      isInitialLoading,\n      isFetchingMore,\n      currentPage,\n      aggregateRating,\n      selectedRating,\n      loadMoreReviews,\n      onRatingSelect,\n    };\n  }, [\n    reviews,\n    pagination,\n    isInitialLoading,\n    isFetchingMore,\n    currentPage,\n    aggregateRating,\n    selectedRating,\n    loadMoreReviews,\n    onRatingSelect,\n  ]);\n\n  return (\n    <ProductReviewsContext.Provider value={value}>\n      {children}\n    </ProductReviewsContext.Provider>\n  );\n};\n\nexport default ProductReviewsContextProvider;\n"
    },
    "/src/components/Reviews/Reviews.jsx": {
      "code": "import clsx from 'clsx';\n\nimport OverallRating from './OverallRating';\nimport ReviewsList from './ReviewsList';\n\nimport { useProductReviewsContext } from './ProductReviewsContext';\n\nconst Reviews = () => {\n  const { isInitialLoading, reviews } = useProductReviewsContext();\n\n  return (\n    <div\n      className={clsx(\n        'h-[calc(100vh_-_232px)]',\n        'flex flex-col gap-10 lg:flex-row lg:gap-8',\n      )}>\n      {isInitialLoading || !reviews ? (\n        <div className=\"flex h-full w-full items-center justify-center\">\n          Loading...\n        </div>\n      ) : (\n        <>\n          <div className={clsx('w-full self-stretch lg:w-96', 'px-6 md:px-8')}>\n            <OverallRating />\n          </div>\n          <div\n            className={clsx(\n              'w-full flex-1',\n              'px-4 md:px-8 lg:pl-0 lg:pr-8',\n              'lg:overflow-y-auto',\n            )}>\n            <ReviewsList />\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n"
    },
    "/src/components/Reviews/ReviewsList.jsx": {
      "code": "import clsx from 'clsx';\nimport { RiChatSmile3Line } from 'react-icons/ri';\n\nimport Avatar from '../ui/Avatar';\nimport Rating from '../ui/Rating';\nimport Button from '../ui/Button';\n\nimport { useProductReviewsContext } from './ProductReviewsContext';\n\nimport { formatDate } from 'src/utils';\n\nconst ReviewsList = () => {\n  const { reviews, pagination, loadMoreReviews, isFetchingMore, currentPage } =\n    useProductReviewsContext();\n  const moreReviewsCount = pagination.total - reviews.length;\n\n  if (reviews.length === 0) {\n    return (\n      <div class=\"flex h-full flex-col items-center justify-center gap-5\">\n        <div\n          class={clsx(\n            'size-12 rounded-full bg-white shadow',\n            'flex items-center justify-center',\n            'text-indigo-700',\n          )}>\n          <RiChatSmile3Line className=\"size-6\" />\n        </div>\n        <div\n          class={clsx(\n            \"gap-2', 'text-neutral-900 flex flex-col items-center text-center\",\n          )}>\n          <span class=\"text-xl font-medium\">No reviews yet!</span>\n          <span>Be the first to review this product</span>\n        </div>\n      </div>\n    );\n  }\n\n  if (currentPage === 1 && isFetchingMore) {\n    return (\n      <div className=\"flex h-full flex-col items-center justify-center gap-5\">\n        Loading...\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"flex flex-col gap-12 pb-6\">\n      <div className=\"flex flex-col gap-6 md:gap-8\">\n        {reviews.map((review) => (\n          <div\n            key={review.user.user_id + review.created_at}\n            className={clsx('flex flex-col gap-4', 'text-neutral-600')}>\n            <div className=\"flex items-center gap-4\">\n              <Avatar src={review.user.avatar_url} name={review.user.name} />\n              <div className=\"flex grow flex-col gap-1\">\n                <div className=\"flex items-center justify-between\">\n                  <h4 className=\"text-base font-semibold text-neutral-900\">\n                    {review.user.name}\n                  </h4>\n                  <span className=\"text-nowrap text-xs\">\n                    {formatDate(new Date(review.created_at))}\n                  </span>\n                </div>\n                <Rating value={review.rating} />\n              </div>\n            </div>\n            {review.content && <p>{review.content}</p>}\n          </div>\n        ))}\n      </div>\n      {pagination.hasMore && (\n        <Button\n          label={`See ${moreReviewsCount} more reviews`}\n          variant=\"secondary\"\n          size=\"lg\"\n          onClick={loadMoreReviews}\n          isDisabled={isFetchingMore}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default ReviewsList;\n"
    },
    "/src/components/ui/Avatar/Avatar.jsx": {
      "code": "import clsx from 'clsx';\n\nimport { getNameInitials } from 'src/utils';\n\nconst Avatar = ({ src, name, className }) => {\n  const nameInitials = name ? getNameInitials(name) : '';\n\n  const commonClasses = clsx('size-12 shrink-0 rounded-full', className);\n  return src ? (\n    <img\n      src={src}\n      alt={`${name}'s avatar`}\n      loading=\"lazy\"\n      className={clsx('object-cover', commonClasses)}\n    />\n  ) : (\n    <div\n      className={clsx(\n        'bg-gray-200',\n        'text-center text-xl font-medium text-neutral-600',\n        'flex items-center justify-center',\n        commonClasses,\n      )}>\n      {nameInitials}\n    </div>\n  );\n};\n\nexport default Avatar;\n"
    },
    "/src/components/ui/Avatar/index.js": {
      "code": "import Avatar from './Avatar';\n\nexport default Avatar;\n"
    },
    "/src/components/ui/Button/Button.jsx": {
      "code": "import clsx from 'clsx';\n\nconst paddingClasses = {\n  md: 'px-3.5 py-2.5',\n  lg: 'px-4 py-2.5',\n  xl: 'px-5 py-3',\n  '2xl': 'px-6 py-4',\n};\n\n// We need this because secondary button has border\nconst secondaryVariantPaddingClasses = {\n  md: 'px-[13px] py-[9px]',\n  lg: 'px-[15px] py-[9px]',\n  xl: 'px-[19px] py-[11px]',\n  '2xl': 'px-[23px] py-[15px]',\n};\n\nconst fontSizeClasses = {\n  md: 'text-sm',\n  lg: 'text-base',\n  xl: 'text-base',\n  '2xl': 'text-lg',\n};\n\nconst spacingClasses = {\n  md: 'gap-x-1.5',\n  lg: 'gap-x-2',\n  xl: 'gap-x-2',\n  '2xl': 'gap-x-3',\n};\n\nconst heightClasses = {\n  md: 'h-10',\n  lg: 'h-11',\n  xl: 'h-12',\n  '2xl': 'h-15',\n};\n\nconst iconOnlySizeClasses = {\n  md: 'size-10',\n  lg: 'size-11',\n  xl: 'size-12',\n  '2xl': 'size-14',\n};\n\nconst iconSizeClasses = {\n  md: 'size-5',\n  lg: 'size-5',\n  xl: 'size-5',\n  '2xl': 'size-6',\n};\n\nconst variantClasses = {\n  primary: clsx(\n    'border-none',\n    'bg-indigo-700',\n    'shadow-custom',\n    'text-white',\n    'hover:bg-indigo-800 focus:bg-indigo-800',\n  ),\n  secondary: clsx(\n    'border border-neutral-200',\n    'bg-white',\n    'shadow-custom',\n    'text-neutral-900',\n    'hover:bg-neutral-50 focus:bg-neutral-50',\n  ),\n  tertiary: clsx(\n    'border-none',\n    'text-indigo-700',\n    'hover:bg-neutral-50 focus:bg-neutral-50',\n  ),\n  danger: clsx(\n    'border-none',\n    'bg-red-600',\n    'text-white',\n    'hover:bg-red-700 focus:bg-red-700 focus:outline-none focus-visible:ring-4 focus-visible:ring-red-600/[.12]',\n  ),\n};\n\nconst variantDisabledClasses = {\n  primary: clsx(\n    'disabled:bg-neutral-100',\n    'disabled:text-neutral-400',\n    'disabled:shadow-none',\n  ),\n  secondary: clsx(\n    'disabled:bg-neutral-100',\n    'disabled:text-neutral-400',\n    'disabled:shadow-none',\n  ),\n  tertiary: clsx('disabled:bg-none', 'disabled:text-neutral-400'),\n  danger: clsx('disabled:bg-none', 'disabled:text-neutral-400'),\n};\n\nconst Button = ({\n  label,\n  className,\n  isDisabled,\n  startIcon: StartIcon,\n  endIcon: EndIcon,\n  isLabelHidden,\n  size = 'md',\n  variant = 'primary',\n  iconClassName,\n  href,\n  ...props\n}) => {\n  const commonClasses = clsx(\n    'inline-flex items-center justify-center rounded font-medium outline-none cursor-pointer',\n    'focus:outline-none focus-visible:ring-4 focus-visible:ring-indigo-600/[.12]',\n    'transition-colors',\n    'text-nowrap',\n  );\n\n  const children = isLabelHidden ? (\n    (\n      <StartIcon\n        className={clsx('shrink-0', iconSizeClasses[size], iconClassName)}\n        aria-hidden=\"true\"\n      />\n    ) || (\n      <EndIcon\n        className={clsx('shrink-0', iconSizeClasses[size], iconClassName)}\n        aria-hidden=\"true\"\n      />\n    )\n  ) : (\n    <>\n      {StartIcon && (\n        <StartIcon\n          className={clsx('size-6 shrink-0', iconClassName)}\n          aria-hidden=\"true\"\n        />\n      )}\n      {label}\n      {EndIcon && (\n        <EndIcon\n          className={clsx('size-6 shrink-0', iconClassName)}\n          aria-hidden=\"true\"\n        />\n      )}\n    </>\n  );\n\n  return (\n    <button\n      className={clsx(\n        commonClasses,\n        heightClasses[size],\n        variant === 'secondary'\n          ? secondaryVariantPaddingClasses[size]\n          : paddingClasses[size],\n        fontSizeClasses[size],\n        spacingClasses[size],\n        isLabelHidden && iconOnlySizeClasses[size],\n        variantClasses[variant],\n        variantDisabledClasses[variant],\n        isDisabled && 'pointer-events-none',\n        className,\n      )}\n      disabled={isDisabled}\n      {...props}>\n      {children}\n    </button>\n  );\n};\n\nexport default Button;\n"
    },
    "/src/components/ui/Button/index.js": {
      "code": "import Button from './Button';\n\nexport default Button;\n"
    },
    "/src/components/ui/Modal/index.js": {
      "code": "import Modal from './Modal';\n\nexport default Modal;\n"
    },
    "/src/components/ui/Modal/Modal.jsx": {
      "code": "import clsx from 'clsx';\nimport { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { RiCloseLine } from 'react-icons/ri';\n\nconst Modal = ({ isOpen, onClose, children }) => {\n  useEffect(() => {\n    if (isOpen) {\n      document.body.style.overflow = 'hidden';\n    } else {\n      document.body.style.overflow = 'auto';\n    }\n    return () => {\n      document.body.style.overflow = 'auto';\n    };\n  }, [isOpen]);\n\n  if (!isOpen) return null;\n\n  return createPortal(\n    <div\n      className={clsx(\n        'z-modal fixed  inset-0',\n        'bg-neutral-950 bg-opacity-70',\n        'flex items-center justify-center',\n        'py-20',\n      )}\n      role=\"dialog\"\n      aria-modal=\"true\">\n      <div\n        className={clsx(\n          'rounded-lg bg-white',\n          'w-full max-w-[343px] md:max-w-[522px] lg:max-w-[1008px]',\n        )}>\n        <div\n          className={clsx(\n            'flex flex-col items-end justify-center gap-4 self-stretch',\n            'p-6 lg:px-8',\n          )}>\n          <button\n            aria-label=\"Close modal\"\n            className=\"text-xl font-semibold text-black\"\n            onClick={onClose}>\n            <RiCloseLine className=\"size-6\" />\n          </button>\n        </div>\n        <div className={clsx('max-h-[calc(100vh_-_160px)]', 'overflow-y-auto')}>\n          {children}\n        </div>\n      </div>\n    </div>,\n    document.body,\n  );\n};\n\nexport default Modal;\n"
    },
    "/src/components/ui/ProgressBar/index.js": {
      "code": "import Progress from './ProgressBar';\n\nexport default Progress;\n"
    },
    "/src/components/ui/ProgressBar/ProgressBar.jsx": {
      "code": "import clsx from 'clsx';\n\nconst ProgressBar = ({ value, color, className }) => {\n  return (\n    <div\n      role=\"progressbar\"\n      aria-valuenow={value}\n      aria-valuemin=\"0\"\n      aria-valuemax={100}\n      className={clsx('h-2 grow rounded-lg bg-gray-200', className)}>\n      <div\n        className=\"h-full rounded-lg\"\n        style={{\n          width: `${value}%`,\n          backgroundColor: color || 'bg-orange-500',\n        }}\n      />\n    </div>\n  );\n};\n\nexport default ProgressBar;\n"
    },
    "/src/components/ui/Rating/index.js": {
      "code": "import StarRating from './Rating';\n\nexport default StarRating;\n"
    },
    "/src/components/ui/Rating/Rating.jsx": {
      "code": "import { useState } from 'react';\nimport clsx from 'clsx';\nimport Star from './Star';\n\nconst Rating = ({ value, max = 5, onChange, className }) => {\n  const [hoveredIndex, setHoveredIndex] = useState(null);\n\n  const readOnlyMode = !onChange;\n\n  return (\n    <div className={clsx('flex items-center gap-1', className)}>\n      {Array.from({ length: max }).map((_, index) => (\n        <span\n          key={index}\n          tabIndex={readOnlyMode ? -1 : 0}\n          onMouseEnter={() => !readOnlyMode && setHoveredIndex(index)}\n          onMouseLeave={() => !readOnlyMode && setHoveredIndex(null)}\n          className={clsx(!readOnlyMode && 'cursor-pointer')}\n          onClick={() => onChange?.(index + 1)}>\n          <Star\n            filled={\n              hoveredIndex != null ? index <= hoveredIndex : value >= index + 1\n            }\n            halfFilled={value < index + 1 && value > index}\n          />\n        </span>\n      ))}\n    </div>\n  );\n};\n\nexport default Rating;\n"
    },
    "/src/components/ui/Rating/Star.jsx": {
      "code": "const Star = ({ filled, halfFilled }) => {\n  return filled ? (\n    <svg\n      width=\"20\"\n      height=\"20\"\n      viewBox=\"0 0 20 20\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\">\n      <g clipPath=\"url(#clip0_28_1325)\">\n        <path\n          d=\"M9.53834 1.60996C9.70914 1.19932 10.2909 1.19932 10.4617 1.60996L12.5278 6.57744C12.5998 6.75056 12.7626 6.86885 12.9495 6.88383L18.3123 7.31376C18.7556 7.3493 18.9354 7.90256 18.5976 8.19189L14.5117 11.6919C14.3693 11.8139 14.3071 12.0053 14.3506 12.1876L15.5989 17.4208C15.7021 17.8534 15.2315 18.1954 14.8519 17.9635L10.2606 15.1592C10.1006 15.0615 9.89938 15.0615 9.73937 15.1592L5.14806 17.9635C4.76851 18.1954 4.29788 17.8534 4.40108 17.4208L5.64939 12.1876C5.69289 12.0053 5.6307 11.8139 5.48831 11.6919L1.40241 8.19189C1.06464 7.90256 1.24441 7.3493 1.68773 7.31376L7.05054 6.88383C7.23744 6.86885 7.40024 6.75056 7.47225 6.57744L9.53834 1.60996Z\"\n          fill=\"#FACC15\"\n        />\n      </g>\n      <defs>\n        <clipPath id=\"clip0_28_1325\">\n          <rect width=\"20\" height=\"20\" fill=\"white\" />\n        </clipPath>\n      </defs>\n    </svg>\n  ) : halfFilled ? (\n    <svg\n      width=\"20\"\n      height=\"20\"\n      viewBox=\"0 0 20 20\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\">\n      <g clipPath=\"url(#clip0_3052_704)\">\n        <path\n          d=\"M9.53834 1.60996C9.70914 1.19932 10.2909 1.19932 10.4617 1.60996L12.5278 6.57744C12.5998 6.75056 12.7626 6.86885 12.9495 6.88383L18.3123 7.31376C18.7556 7.3493 18.9354 7.90256 18.5976 8.19189L14.5117 11.6919C14.3693 11.8139 14.3071 12.0053 14.3506 12.1876L15.5989 17.4208C15.7021 17.8534 15.2315 18.1954 14.8519 17.9635L10.2606 15.1592C10.1006 15.0615 9.89938 15.0615 9.73937 15.1592L5.14806 17.9635C4.76851 18.1954 4.29788 17.8534 4.40108 17.4208L5.64939 12.1876C5.69289 12.0053 5.6307 11.8139 5.48831 11.6919L1.40241 8.19189C1.06464 7.90256 1.24441 7.3493 1.68773 7.31376L7.05054 6.88383C7.23744 6.86885 7.40024 6.75056 7.47225 6.57744L9.53834 1.60996Z\"\n          fill=\"#E5E7EB\"\n        />\n        <g clipPath=\"url(#clip1_3052_704)\">\n          <path\n            d=\"M9.53834 1.60996C9.70914 1.19932 10.2909 1.19932 10.4617 1.60996L12.5278 6.57744C12.5998 6.75056 12.7626 6.86885 12.9495 6.88383L18.3123 7.31376C18.7556 7.3493 18.9354 7.90256 18.5976 8.19189L14.5117 11.6919C14.3693 11.8139 14.3071 12.0053 14.3506 12.1876L15.5989 17.4208C15.7021 17.8534 15.2315 18.1954 14.8519 17.9635L10.2606 15.1592C10.1006 15.0615 9.89938 15.0615 9.73937 15.1592L5.14806 17.9635C4.76851 18.1954 4.29788 17.8534 4.40108 17.4208L5.64939 12.1876C5.69289 12.0053 5.6307 11.8139 5.48831 11.6919L1.40241 8.19189C1.06464 7.90256 1.24441 7.3493 1.68773 7.31376L7.05054 6.88383C7.23744 6.86885 7.40024 6.75056 7.47225 6.57744L9.53834 1.60996Z\"\n            fill=\"#FACC15\"\n          />\n        </g>\n      </g>\n      <defs>\n        <clipPath id=\"clip0_3052_704\">\n          <rect width=\"20\" height=\"20\" fill=\"white\" />\n        </clipPath>\n        <clipPath id=\"clip1_3052_704\">\n          <rect width=\"10\" height=\"20\" fill=\"white\" />\n        </clipPath>\n      </defs>\n    </svg>\n  ) : (\n    <svg\n      width=\"20\"\n      height=\"20\"\n      viewBox=\"0 0 20 20\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\">\n      <g clipPath=\"url(#clip0_3052_707)\">\n        <path\n          d=\"M9.53834 1.60996C9.70914 1.19932 10.2909 1.19932 10.4617 1.60996L12.5278 6.57744C12.5998 6.75056 12.7626 6.86885 12.9495 6.88383L18.3123 7.31376C18.7556 7.3493 18.9354 7.90256 18.5976 8.19189L14.5117 11.6919C14.3693 11.8139 14.3071 12.0053 14.3506 12.1876L15.5989 17.4208C15.7021 17.8534 15.2315 18.1954 14.8519 17.9635L10.2606 15.1592C10.1006 15.0615 9.89938 15.0615 9.73937 15.1592L5.14806 17.9635C4.76851 18.1954 4.29788 17.8534 4.40108 17.4208L5.64939 12.1876C5.69289 12.0053 5.6307 11.8139 5.48831 11.6919L1.40241 8.19189C1.06464 7.90256 1.24441 7.3493 1.68773 7.31376L7.05054 6.88383C7.23744 6.86885 7.40024 6.75056 7.47225 6.57744L9.53834 1.60996Z\"\n          fill=\"#E5E7EB\"\n        />\n      </g>\n      <defs>\n        <clipPath id=\"clip0_3052_707\">\n          <rect width=\"20\" height=\"20\" fill=\"white\" />\n        </clipPath>\n      </defs>\n    </svg>\n  );\n};\n\nexport default Star;\n"
    },
    "/src/index.css": {
      "code": "@import url('https://fonts.googleapis.com/css2?family=Noto+Sans:ital,wght@0,100..900;1,100..900&display=swap');\n\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\nbody {\n  font-family:\n    'Noto Sans',\n    system-ui,\n    -apple-system,\n    BlinkMacSystemFont,\n    'Segoe UI',\n    Roboto,\n    Oxygen,\n    Ubuntu,\n    Cantarell,\n    'Open Sans',\n    'Helvetica Neue',\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-rendering: optimizeLegibility;\n  background: linear-gradient(147.52deg, #f9fafb 8.89%, #d2d6db 100.48%);\n}\n\n/* Custom box shadow */\n.shadow-custom {\n  box-shadow:\n    0px 1px 2px 0 rgb(0 0 0 / 0.06),\n    0px 1px 3px 0 rgb(0 0 0 / 0.1);\n}\n\n/* Custom z-index */\n.z-modal {\n  z-index: 1055;\n}\n"
    },
    "/src/index.js": {
      "code": "import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n);\n"
    },
    "/src/utils.js": {
      "code": "export function getNameInitials(name) {\n  // Extract first and last name initials using regular expressions\n  const initials = name.match(/\\b\\w/g) || [];\n\n  // Return the initials\n  return (\n    (initials[0] ?? '') +\n    (initials.length - 1 === 0 ? '' : initials[initials.length - 1] ?? '')\n  ).toUpperCase();\n}\n\nexport function formatDate(date) {\n  return date.toLocaleDateString('en-US', {\n    month: 'long',\n    day: 'numeric',\n    year: 'numeric',\n  });\n}\n"
    }
  },
  "workspace": {
    "visibleFiles": [
      "/src/App.js",
      "/src/components/Reviews/Reviews.jsx",
      "/src/index.css"
    ],
    "activeFile": "/src/App.js",
    "environment": "create-react-app",
    "externalResources": [
      "https://cdn.tailwindcss.com"
    ]
  }
}