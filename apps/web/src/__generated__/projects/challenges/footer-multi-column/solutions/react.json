{
  "files": {
    "/package.json": {
      "code": "{\n  \"name\": \"@gfe-challenges/footer-multi-column-solution\",\n  \"version\": \"0.0.1\",\n  \"dependencies\": {\n    \"clsx\": \"^2.1.1\",\n    \"react-icons\": \"^5.2.1\",\n    \"react-router-dom\": \"^6.23.1\",\n    \"react\": \"^18.3.1\",\n    \"react-dom\": \"^18.3.1\",\n    \"react-scripts\": \"5.0.1\"\n  },\n  \"scripts\": {\n    \"start\": \"react-scripts start\",\n    \"build\": \"react-scripts build\",\n    \"test\": \"react-scripts test\",\n    \"eject\": \"react-scripts eject\"\n  }\n}\n"
    },
    "/public/index.html": {
      "code": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n    <meta name=\"theme-color\" content=\"#000000\" />\n    <meta\n      name=\"description\"\n      content=\"Web site created using create-react-app\"\n    />\n    <title>Footer Multi Column</title>\n  </head>\n  <body>\n    <noscript>You need to enable JavaScript to run this app.</noscript>\n    <div id=\"root\"></div>\n  </body>\n</html>\n"
    },
    "/src/App.js": {
      "code": "import clsx from 'clsx';\n\nimport Footer from './components/Footer';\nimport Toast from './components/ui/Toast';\nimport { useToastContext } from './context/ToastContext';\n\nfunction App() {\n  const { toast } = useToastContext();\n\n  return (\n    <main className=\"min-h-screen p-4\">\n      {toast.show && <Toast type={toast.type} message={toast.message} />}\n      <div\n        className={clsx(\n          'min-h-[calc(100vh_-_32px)] rounded-md bg-white',\n          'shadow-sm md:shadow-md lg:shadow-lg',\n          'flex items-center',\n        )}>\n        <section className={clsx('w-full', 'md:py-[116px] lg:py-[65px]')}>\n          <Footer />\n        </section>\n      </div>\n    </main>\n  );\n}\n\nexport default App;\n"
    },
    "/src/components/Footer/Footer.jsx": {
      "code": "import clsx from 'clsx';\nimport {\n  RiFacebookBoxLine,\n  RiGithubLine,\n  RiInstagramLine,\n  RiTwitterXLine,\n  RiYoutubeLine,\n} from 'react-icons/ri';\n\nimport Link from '../ui/Link';\nimport NewsletterForm from './NewsletterForm';\n\nconst shopCategories = [\n  {\n    title: 'Unisex',\n    href: '#',\n  },\n  {\n    title: 'Women',\n    href: '#',\n  },\n  {\n    title: 'Men',\n    href: '#',\n  },\n];\n\nconst shopCollections = [\n  {\n    title: 'Latest arrivals',\n    href: '#',\n  },\n  {\n    title: 'Urban Oasis',\n    href: '#',\n  },\n  {\n    title: 'Cozy Comfort',\n    href: '#',\n  },\n  {\n    title: 'Fresh Fusion',\n    href: '#',\n  },\n];\n\nconst footerSocials = [\n  {\n    icon: RiYoutubeLine,\n    url: 'https://youtube.com',\n    name: \"Link to Stylenest's youtube profile\",\n  },\n  {\n    icon: RiInstagramLine,\n    url: 'https://instagram.com',\n    name: \"Link to Stylenest's instagram profile\",\n  },\n  {\n    icon: RiFacebookBoxLine,\n    url: 'https://facebook.com',\n    name: \"Link to Stylenest's facebook profile\",\n  },\n  {\n    icon: RiGithubLine,\n    url: 'https://github.com',\n    name: \"Link to Stylenest's github profile\",\n  },\n  {\n    icon: RiTwitterXLine,\n    url: 'https://twitter.com',\n    name: \"Link to Stylenest's twitter profile\",\n  },\n];\n\nconst Footer = () => {\n  return (\n    <footer\n      className={clsx(\n        'mx-auto w-full max-w-[1216px] px-4 xl:px-0',\n        'flex flex-col gap-12 md:gap-16',\n        'py-12 md:py-16 lg:py-24',\n      )}>\n      <div className=\"grid grid-cols-4 gap-x-4 md:grid-cols-6 md:gap-x-8 lg:grid-cols-12 lg:gap-y-[66px]\">\n        <div\n          className={clsx(\n            'flex flex-col gap-2',\n            'col-span-4 md:col-span-6 lg:col-span-8',\n          )}>\n          <div className=\"text-xl font-semibold text-neutral-900\">\n            Join our newsletter\n          </div>\n          <div className=\"text-neutral-600\">\n            Weâ€™ll send you a nice letter once per week. No spam.\n          </div>\n        </div>\n\n        <div className=\"col-span-4 mt-8 md:col-span-6 md:mt-5 lg:col-span-4 lg:mt-0\">\n          <NewsletterForm />\n        </div>\n\n        <div\n          className={clsx(\n            'flex flex-col gap-6 md:gap-8',\n            'col-span-4 mt-12 md:col-span-3 md:mt-16 lg:col-span-4 lg:mt-0',\n          )}>\n          <div>\n            <img\n              src=\"https://vaqybtnqyonvlwtskzmv.supabase.co/storage/v1/object/public/e-commerce-track-images/logo.svg\"\n              alt=\"Stylenest's Logo\"\n              className=\"block h-8 w-auto\"\n            />\n          </div>\n          <div className=\"text-neutral-600\">\n            Craft stunning style journeys that weave more joy into every thread.\n          </div>\n        </div>\n\n        <div className=\"col-span-3 hidden md:block lg:hidden\" />\n\n        <div\n          className={clsx(\n            'flex flex-col gap-4',\n            'col-span-4 mt-8 md:col-span-3 md:mt-12 lg:col-start-7 lg:mt-0',\n          )}>\n          <div className=\"text-sm text-neutral-500\">SHOP CATEGORIES</div>\n          <div className=\"flex flex-col gap-3\">\n            {shopCategories.map((category) => (\n              <Link to={category.href} key={category.title} variant=\"gray\">\n                {category.title}\n              </Link>\n            ))}\n          </div>\n        </div>\n\n        <div\n          className={clsx(\n            'flex flex-col gap-4',\n            'col-span-4 mt-8 md:col-span-3 md:mt-12 lg:mt-0',\n          )}>\n          <div className=\"text-sm text-neutral-500\">SHOP COLLECTIONS</div>\n          <div className=\"flex flex-col gap-3\">\n            {shopCollections.map((collection) => (\n              <Link to={collection.href} key={collection.title} variant=\"gray\">\n                {collection.title}\n              </Link>\n            ))}\n          </div>\n        </div>\n      </div>\n\n      <div\n        className={clsx(\n          'flex flex-col gap-8 md:flex-row md:items-center lg:justify-between',\n          'border-t border-neutral-200 pt-[31px]',\n        )}>\n        <div className=\"text-neutral-500\">\n          &copy; {new Date().getFullYear()} StyleNest, Inc. All rights reserved.\n        </div>\n        <div className=\"flex gap-6\">\n          {footerSocials.map(({ icon: Icon, url, name }) => (\n            <Link\n              key={name}\n              to={url}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"!px-0 !text-neutral-400\">\n              <Icon className=\"size-6\" aria-hidden=\"true\" />\n            </Link>\n          ))}\n        </div>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n"
    },
    "/src/components/Footer/index.js": {
      "code": "import Footer from './Footer';\n\nexport default Footer;\n"
    },
    "/src/components/Footer/NewsletterForm.jsx": {
      "code": "import { useState } from 'react';\nimport Button from '../ui/Button';\nimport TextInput from '../ui/TextInput';\nimport { useToast } from '../../context/ToastContext';\n\nconst EMAIL_REGEX = /^[^@]+@[^@]+\\.[^@]+$/;\n\nconst NewsletterForm = () => {\n  const toast = useToast();\n\n  const [email, setEmail] = useState('');\n  const [submitting, setSubmitting] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n\n    if (!email.match(EMAIL_REGEX)) {\n      setErrorMessage('Please enter a valid email address.');\n      return;\n    } else if (!email) {\n      setErrorMessage('Email address is required.');\n      return;\n    } else {\n      setErrorMessage('');\n    }\n\n    setSubmitting(true);\n\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        email,\n      }), // Send the data in JSON format\n    };\n\n    // Make the request\n    const res = await fetch(\n      'https://www.greatfrontend.com/api/projects/challenges/newsletter',\n      requestOptions,\n    );\n    const result = await res.json();\n\n    if (result) {\n      setEmail('');\n      if (result.message) {\n        toast.success(result.message);\n      } else if (result.error) {\n        toast.error(result.error);\n      }\n    }\n    setSubmitting(false);\n  };\n\n  return (\n    <form\n      onSubmit={onSubmit}\n      className=\"flex w-full flex-col gap-4 md:flex-row\">\n      <TextInput\n        placeholder=\"Enter your email\"\n        errorMessage={errorMessage}\n        onChange={(value) => setEmail(value)}\n        value={email}\n        required\n      />\n      <Button label=\"Subscribe\" type=\"submit\" isDisabled={submitting} />\n    </form>\n  );\n};\n\nexport default NewsletterForm;\n"
    },
    "/src/components/ui/Button/Button.jsx": {
      "code": "import clsx from 'clsx';\n\nimport Link from '../Link';\n\nconst paddingClasses = {\n  md: 'px-3.5 py-2.5',\n  lg: 'px-4 py-2.5',\n  xl: 'px-5 py-3',\n  '2xl': 'px-6 py-4',\n};\n\n// We need this because secondary button has border\nconst secondaryVariantPaddingClasses = {\n  md: 'px-[13px] py-[9px]',\n  lg: 'px-[15px] py-[9px]',\n  xl: 'px-[19px] py-[11px]',\n  '2xl': 'px-[23px] py-[15px]',\n};\n\nconst fontSizeClasses = {\n  md: 'text-sm',\n  lg: 'text-base',\n  xl: 'text-base',\n  '2xl': 'text-lg',\n};\n\nconst spacingClasses = {\n  md: 'gap-x-1.5',\n  lg: 'gap-x-2',\n  xl: 'gap-x-2',\n  '2xl': 'gap-x-3',\n};\n\nconst heightClasses = {\n  md: 'h-10',\n  lg: 'h-11',\n  xl: 'h-12',\n  '2xl': 'h-15',\n};\n\nconst iconOnlySizeClasses = {\n  md: 'size-10',\n  lg: 'size-11',\n  xl: 'size-12',\n  '2xl': 'size-14',\n};\n\nconst iconSizeClasses = {\n  md: 'size-5',\n  lg: 'size-5',\n  xl: 'size-5',\n  '2xl': 'size-6',\n};\n\nconst variantClasses = {\n  primary: clsx(\n    'bg-indigo-700',\n    'shadow-custom',\n    'text-white',\n    'hover:bg-indigo-800 focus:bg-indigo-800',\n  ),\n  secondary: clsx(\n    'border border-neutral-200',\n    'bg-white',\n    'shadow-custom',\n    'text-neutral-900',\n    'hover:bg-neutral-50 focus:bg-neutral-50',\n  ),\n  tertiary: clsx('text-indigo-700', 'hover:bg-neutral-50 focus:bg-neutral-50'),\n  danger: clsx(\n    'bg-red-600',\n    'text-white',\n    'hover:bg-red-700 focus:bg-red-700 focus:outline-none focus-visible:ring-4 focus-visible:ring-red-600/[.12]',\n  ),\n};\n\nconst variantDisabledClasses = {\n  primary: clsx(\n    'disabled:bg-neutral-100',\n    'disabled:text-neutral-400',\n    'disabled:shadow-none',\n  ),\n  secondary: clsx(\n    'disabled:bg-neutral-100',\n    'disabled:text-neutral-400',\n    'disabled:shadow-none',\n  ),\n  tertiary: clsx('disabled:bg-none', 'disabled:text-neutral-400'),\n  danger: clsx('disabled:bg-none', 'disabled:text-neutral-400'),\n};\n\nconst Button = ({\n  label,\n  className,\n  isDisabled,\n  startIcon: StartIcon,\n  endIcon: EndIcon,\n  isLabelHidden,\n  size = 'md',\n  variant = 'primary',\n  iconClassName,\n  href,\n  ...props\n}) => {\n  const commonClasses = clsx(\n    'inline-flex items-center justify-center rounded font-medium outine-none border-none cursor-pointer',\n    'focus:outline-none focus-visible:ring-4 focus-visible:ring-indigo-600/[.12]',\n    'transition-colors',\n    'text-nowrap',\n  );\n\n  if (href) {\n    return (\n      <Link\n        to={href}\n        variant={variant}\n        disabled={isDisabled}\n        className={clsx(commonClasses, spacingClasses[size], className)}\n        {...props}>\n        {StartIcon && (\n          <StartIcon\n            className={clsx('size-6 shrink-0', iconClassName)}\n            aria-hidden=\"true\"\n          />\n        )}\n        {label}\n        {EndIcon && (\n          <EndIcon\n            className={clsx('size-6 shrink-0', iconClassName)}\n            aria-hidden=\"true\"\n          />\n        )}\n      </Link>\n    );\n  }\n\n  const children = isLabelHidden ? (\n    (\n      <StartIcon\n        className={clsx('shrink-0', iconSizeClasses[size], iconClassName)}\n        aria-hidden=\"true\"\n      />\n    ) || (\n      <EndIcon\n        className={clsx('shrink-0', iconSizeClasses[size], iconClassName)}\n        aria-hidden=\"true\"\n      />\n    )\n  ) : (\n    <>\n      {StartIcon && (\n        <StartIcon\n          className={clsx('size-6 shrink-0', iconClassName)}\n          aria-hidden=\"true\"\n        />\n      )}\n      {label}\n      {EndIcon && (\n        <EndIcon\n          className={clsx('size-6 shrink-0', iconClassName)}\n          aria-hidden=\"true\"\n        />\n      )}\n    </>\n  );\n\n  return (\n    <button\n      className={clsx(\n        commonClasses,\n        heightClasses[size],\n        variant === 'secondary'\n          ? secondaryVariantPaddingClasses[size]\n          : paddingClasses[size],\n        fontSizeClasses[size],\n        spacingClasses[size],\n        isLabelHidden && iconOnlySizeClasses[size],\n        variantClasses[variant],\n        variantDisabledClasses[variant],\n        isDisabled && 'pointer-events-none',\n        className,\n      )}\n      disabled={isDisabled}\n      {...props}>\n      {children}\n    </button>\n  );\n};\n\nexport default Button;\n"
    },
    "/src/components/ui/Button/index.js": {
      "code": "import Button from './Button';\n\nexport default Button;\n"
    },
    "/src/components/ui/Link/index.js": {
      "code": "import Link from './Link';\n\nexport default Link;\n"
    },
    "/src/components/ui/Link/Link.jsx": {
      "code": "import clsx from 'clsx';\nimport { Link as RouterLink } from 'react-router-dom';\n\nconst linkVariantClasses = {\n  primary: clsx(\n    'text-indigo-700',\n    'hover:text-indigo-800 focus:text-indigo-800',\n    'rounded focus:outline-none focus-visible:ring-4 focus-visible:ring-indigo-600/[.12]',\n  ),\n  gray: clsx(\n    'text-neutral-600',\n    'hover:text-neutral-900 focus:text-neutral-900',\n    'rounded focus:outline-none focus-visible:ring-4 focus-visible:ring-indigo-600/[.12]',\n  ),\n};\n\nconst Link = ({\n  children,\n  disabled,\n  className,\n  variant = 'primary',\n  ...props\n}) => {\n  return (\n    <RouterLink\n      {...props}\n      className={clsx(\n        'rounded px-0.5 font-medium',\n        linkVariantClasses[variant],\n        {\n          'pointer-events-none text-neutral-400': disabled,\n        },\n        className,\n      )}>\n      {children}\n    </RouterLink>\n  );\n};\n\nexport default Link;\n"
    },
    "/src/components/ui/TextInput/index.js": {
      "code": "import TextInput from './TextInput';\n\nexport default TextInput;\n"
    },
    "/src/components/ui/TextInput/TextInput.jsx": {
      "code": "import clsx from 'clsx';\nimport { useId } from 'react';\n\nconst TextInput = ({\n  label,\n  placeholder,\n  value,\n  onChange,\n  type,\n  id: idParam,\n  required,\n  isDisabled,\n  errorMessage,\n  hintMessage,\n  startIcon: StartIcon,\n  endIcon: EndIcon,\n  startIconClassName,\n  endIconClassName,\n}) => {\n  const generateId = useId();\n  const id = idParam ?? generateId;\n  const hasError = !!errorMessage;\n\n  const messageId = useId();\n\n  const hasBottomSection = !!errorMessage || !!hintMessage;\n\n  return (\n    <div className={clsx('flex w-full flex-col gap-1.5', 'relative')}>\n      {label && (\n        <label\n          className={clsx('text-sm font-medium text-neutral-700')}\n          htmlFor={id}>\n          {label}\n        </label>\n      )}\n      <div className=\"relative\">\n        {StartIcon && (\n          <div className=\"pointer-events-none absolute inset-y-0 left-0 flex items-center pl-3.5\">\n            <StartIcon\n              aria-hidden=\"true\"\n              className={clsx('text-neutral-400', 'size-5', startIconClassName)}\n            />\n          </div>\n        )}\n\n        <input\n          id={id}\n          aria-describedby={hasError ? messageId : undefined}\n          aria-invalid={hasError ? true : undefined}\n          type={type}\n          placeholder={placeholder}\n          value={value}\n          onChange={(event) => onChange(event.target.value, event)}\n          required={required}\n          disabled={isDisabled}\n          className={clsx(\n            'block w-full',\n            'px-[13px] py-[9px]',\n            'outline:none',\n            'border border-neutral-200 disabled:border-neutral-100',\n            'bg-neutral-50',\n            'rounded',\n            'text-sm text-neutral-900 placeholder:text-neutral-500 disabled:text-neutral-400 disabled:placeholder:text-neutral-400',\n            'focus:outline-none',\n            'focus:border-indigo-600 focus:ring-4 focus:ring-indigo-600/[.12] focus:ring-offset-0',\n            hasError && 'focus:border-red-600 focus:ring-red-600/[.12]',\n            'disabled:pointer-events-none',\n            StartIcon && 'pl-[41px]',\n            EndIcon && 'pr-[38px]',\n          )}\n        />\n\n        {EndIcon && (\n          <div className=\"pointer-events-none absolute inset-y-0 right-0 flex items-center pr-3.5\">\n            <EndIcon\n              aria-hidden=\"true\"\n              className={clsx('text-neutral-400', 'size-4', endIconClassName)}\n            />\n          </div>\n        )}\n      </div>\n\n      {hasBottomSection && (\n        <div\n          id={messageId}\n          className={clsx(\n            'text-sm text-neutral-500',\n            hasError && 'text-red-600',\n          )}>\n          {errorMessage || hintMessage}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TextInput;\n"
    },
    "/src/components/ui/Toast/index.js": {
      "code": "import Toast from './Toast';\n\nexport default Toast;\n"
    },
    "/src/components/ui/Toast/Toast.jsx": {
      "code": "import clsx from 'clsx';\nimport React from 'react';\n\nconst Toast = ({ type, message }) => {\n  const badge = (\n    <div\n      className={clsx(\n        'flex items-center',\n        'px-2.5 py-0.5',\n        'h-6',\n        'bg-white',\n        'shadow',\n        'rounded-full',\n        'text-sm',\n        type === 'error' && 'text-red-800',\n        type === 'success' && 'text-green-700',\n      )}>\n      {type === 'error' ? 'Error' : 'Success'}\n    </div>\n  );\n\n  return (\n    <div className={clsx('z-toast fixed inset-0 top-10')}>\n      <div\n        className={clsx(\n          'mx-4 md:mx-auto md:w-max',\n          'flex items-center gap-3',\n          'p-1 pr-2.5',\n          'rounded-full',\n          'text-sm font-medium',\n          type === 'success' && 'bg-green-50 text-green-700',\n          type === 'error' && 'bg-red-50 text-red-600',\n        )}>\n        {badge}\n        <span>{message}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default Toast;\n"
    },
    "/src/context/ToastContext.jsx": {
      "code": "import {\n  createContext,\n  useCallback,\n  useContext,\n  useMemo,\n  useState,\n} from 'react';\n\nconst ToastContext = createContext({\n  toast: {\n    show: false,\n    type: '',\n    message: '',\n  },\n  showToast: () => {},\n});\n\nexport const useToast = () => {\n  const { showToast } = useContext(ToastContext);\n\n  const error = (message) => showToast('error', message);\n  const success = (message) => showToast('success', message);\n\n  return { error, success };\n};\n\nexport const useToastContext = () => useContext(ToastContext);\n\nconst ToastContextProvider = ({ children }) => {\n  const [toast, setToast] = useState({\n    show: false,\n    type: '',\n    message: '',\n  });\n\n  const showToast = useCallback((type, message) => {\n    setToast({\n      show: true,\n      type,\n      message,\n    });\n    setTimeout(() => {\n      setToast({\n        show: false,\n        type: '',\n        message: '',\n      });\n    }, 10000);\n  }, []);\n\n  const value = useMemo(() => {\n    return {\n      toast,\n      showToast,\n    };\n  }, [toast, showToast]);\n\n  return (\n    <ToastContext.Provider value={value}>{children}</ToastContext.Provider>\n  );\n};\n\nexport default ToastContextProvider;\n"
    },
    "/src/index.css": {
      "code": "@import url('https://fonts.googleapis.com/css2?family=Noto+Sans:ital,wght@0,100..900;1,100..900&display=swap');\n\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\nbody {\n  font-family:\n    'Noto Sans',\n    system-ui,\n    -apple-system,\n    BlinkMacSystemFont,\n    'Segoe UI',\n    Roboto,\n    Oxygen,\n    Ubuntu,\n    Cantarell,\n    'Open Sans',\n    'Helvetica Neue',\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-rendering: optimizeLegibility;\n  background: linear-gradient(147.52deg, #f9fafb 8.89%, #d2d6db 100.48%);\n}\n\n/* Custom z-index */\n.z-toast {\n  z-index: 1090;\n}\n\n/* Custom box shadow */\n.shadow-custom {\n  box-shadow:\n    0px 1px 2px 0 rgb(0 0 0 / 0.06),\n    0px 1px 3px 0 rgb(0 0 0 / 0.1);\n}\n"
    },
    "/src/index.js": {
      "code": "import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\n\nimport ToastContextProvider from './context/ToastContext';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <Router>\n      <ToastContextProvider>\n        <App />\n      </ToastContextProvider>\n    </Router>\n  </React.StrictMode>,\n);\n"
    }
  },
  "workspace": {
    "visibleFiles": [
      "/src/App.js",
      "/src/index.css",
      "/src/components/Footer/Footer.jsx"
    ],
    "activeFile": "/src/App.js",
    "environment": "create-react-app",
    "externalResources": [
      "https://cdn.tailwindcss.com"
    ]
  }
}