{
  "files": {
    "/index.css": {
      "code": "@import url('https://fonts.googleapis.com/css2?family=Noto+Sans:ital,wght@0,100..900;1,100..900&display=swap');\n\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\nbody {\n  font-family:\n    'Noto Sans',\n    system-ui,\n    -apple-system,\n    BlinkMacSystemFont,\n    'Segoe UI',\n    Roboto,\n    Oxygen,\n    Ubuntu,\n    Cantarell,\n    'Open Sans',\n    'Helvetica Neue',\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-rendering: optimizeLegibility;\n  background: linear-gradient(147.52deg, #f9fafb 8.89%, #d2d6db 100.48%);\n}\n\n/* Custom z-index */\n.z-sticky {\n  z-index: 1020;\n}\n.z-fixed {\n  z-index: 1030;\n}\n.z-dropdown {\n  z-index: 1000;\n}\n.z-modal {\n  z-index: 1055;\n}\n.z-toast {\n  z-index: 1090;\n}\n\n/* Custom animations and keyframes */\n@keyframes slideout {\n  from {\n    transform: translateX(-100%);\n  }\n  to {\n    transform: translateX(0%);\n  }\n}\n\n.animate-slideout {\n  animation: slideout 0.4s ease-out;\n}\n\n/* Custom box shadow */\n.shadow-custom {\n  box-shadow:\n    0px 1px 2px 0 rgb(0 0 0 / 0.06),\n    0px 1px 3px 0 rgb(0 0 0 / 0.1);\n}\n\n/* Custom background */\n.bg-collection {\n  background: linear-gradient(\n    60deg,\n    rgba(0, 0, 0, 0.4) -9.37%,\n    rgba(0, 0, 0, 0.132) 100%\n  );\n}\n.bg-collection-hover {\n  background: linear-gradient(\n    360deg,\n    rgba(0, 0, 0, 0.6) -9.37%,\n    rgba(0, 0, 0, 0.198) 100%\n  );\n}\n"
    },
    "/jsconfig.json": {
      "code": "{\n  \"compilerOptions\": {\n    \"baseUrl\": \".\"\n  },\n  \"include\": [\"src\"]\n}\n"
    },
    "/package.json": {
      "code": "{\n  \"name\": \"@gfe-challenges/storefront-page-solution\",\n  \"version\": \"0.0.1\",\n  \"dependencies\": {\n    \"clsx\": \"^2.1.1\",\n    \"react-icons\": \"^5.2.1\",\n    \"react-router-dom\": \"^6.23.1\",\n    \"usehooks-ts\": \"^3.1.0\",\n    \"react\": \"^18.3.1\",\n    \"react-dom\": \"^18.3.1\",\n    \"react-scripts\": \"5.0.1\"\n  },\n  \"scripts\": {\n    \"start\": \"react-scripts start\",\n    \"build\": \"react-scripts build\",\n    \"test\": \"react-scripts test\",\n    \"eject\": \"react-scripts eject\"\n  }\n}\n"
    },
    "/public/index.html": {
      "code": "<!doctype html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n    <meta name=\"theme-color\" content=\"#000000\" />\n    <meta\n      name=\"description\"\n      content=\"Web site created using create-react-app\" />\n    <title>StyleNest's Storefront</title>\n  </head>\n  <body>\n    <noscript>You need to enable JavaScript to run this app.</noscript>\n    <div id=\"root\"></div>\n  </body>\n</html>\n"
    },
    "/src/App.js": {
      "code": "import { Route, Routes } from 'react-router-dom';\n\nimport Layout from './Layout';\nimport ProductListingPage from 'src/pages/ProductListing';\nimport ProductDetailPage from './pages/ProductDetail';\n\nimport ToastContextProvider from './context/ToastContext';\nimport LatestArrivalsPage from './pages/LatestArrivals';\nimport CartContextProvider from './context/CartContext';\nimport StorefrontPage from './pages/Storefront';\n\nfunction App() {\n  return (\n    <ToastContextProvider>\n      <CartContextProvider>\n        <Routes>\n          <Route path=\"/\" element={<Layout />}>\n            <Route path=\"/\" element={<StorefrontPage />} />\n            <Route path=\"/products\" element={<ProductListingPage />} />\n            <Route path=\"/latest\" element={<LatestArrivalsPage />} />\n            <Route\n              path=\"/products/:productId\"\n              element={<ProductDetailPage />}\n            />\n          </Route>\n        </Routes>\n      </CartContextProvider>\n    </ToastContextProvider>\n  );\n}\n\nexport default App;\n"
    },
    "/src/components/CartButton/CartButton.jsx": {
      "code": "import clsx from 'clsx';\nimport { RiShoppingBag3Line } from 'react-icons/ri';\nimport { Link as RouterLink } from 'react-router-dom';\n\nimport { useCartContext } from 'src/context/CartContext';\n\nconst CartButton = ({ disabled }) => {\n  const { cartItems } = useCartContext();\n  const count = cartItems.length;\n\n  return (\n    <RouterLink\n      aria-label=\"Cart button\"\n      className={clsx(\n        'relative rounded text-neutral-600',\n        'focus:outline-none focus-visible:ring-4 focus-visible:ring-indigo-600/[.12]',\n        {\n          'pointer-events-none text-neutral-400': disabled,\n        },\n      )}>\n      <RiShoppingBag3Line className=\"size-6\" aria-hidden=\"true\" />\n\n      {count > 0 && (\n        <div\n          className={clsx(\n            'absolute -right-1.5 -top-1.5 h-[18px] w-[18px] rounded-full text-center text-xs font-semibold',\n            'flex items-center justify-center',\n            {\n              'bg-indigo-700 text-white': !disabled,\n              'bg-neutral-100 text-neutral-400': disabled,\n            },\n          )}>\n          {count}\n        </div>\n      )}\n    </RouterLink>\n  );\n};\n\nexport default CartButton;\n"
    },
    "/src/components/CartButton/index.js": {
      "code": "import CartButton from './CartButton';\n\nexport default CartButton;\n"
    },
    "/src/components/CartControl/CartControl.jsx": {
      "code": "import clsx from 'clsx';\nimport { RiAddFill, RiSubtractFill } from 'react-icons/ri';\n\nimport Tooltip from '../ui/Tooltip';\n\nconst CartControl = ({ quantity, decrement, increment, availableStock }) => {\n  const disabledDecrement = quantity === 1;\n  const disabledIncrement = quantity >= availableStock;\n\n  return (\n    <div\n      className={clsx(\n        'h-9 w-[125px]',\n        'flex items-center justify-center gap-3',\n        'px-[5px] py-0.5',\n        'rounded-md border border-neutral-200 bg-neutral-50',\n      )}\n      role=\"group\"\n      aria-label=\"Product Quantity control\">\n      <button\n        type=\"button\"\n        className={clsx(\n          'flex items-center justify-center rounded',\n          'text-neutral-600 disabled:text-neutral-400',\n          'cursor-pointer disabled:pointer-events-none',\n        )}\n        disabled={disabledDecrement}\n        onClick={decrement}\n        aria-label=\"Decrease quantity\">\n        <RiSubtractFill className=\"size-5 shrink-0 p-0.5\" />\n      </button>\n      <span\n        className=\"flex-1 text-center text-sm font-medium text-neutral-600\"\n        aria-live=\"polite\">\n        {quantity}\n      </span>\n      <Tooltip content=\"Insufficient stock\" show={disabledIncrement}>\n        <button\n          type=\"button\"\n          className={clsx(\n            'flex items-center justify-center rounded',\n            'text-neutral-600 disabled:text-neutral-400',\n            'cursor-pointer disabled:pointer-events-none',\n          )}\n          disabled={disabledIncrement}\n          onClick={increment}\n          aria-label=\"Increase quantity\">\n          <RiAddFill className=\"size-5 shrink-0 p-0.5\" />\n        </button>\n      </Tooltip>\n    </div>\n  );\n};\n\nexport default CartControl;\n"
    },
    "/src/components/CartControl/index.js": {
      "code": "import CartControl from './CartControl';\n\nexport default CartControl;\n"
    },
    "/src/components/CollectionCard/CollectionCard.jsx": {
      "code": "import clsx from 'clsx';\nimport { useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nimport Link from 'src/components/ui/Link';\n\nconst variantClasses = {\n  primary: clsx('max-w-[594px] h-[580px]'),\n  secondary: clsx('max-w-[594px] h-[337px] md:h-[276px]'),\n};\n\nconst CollectionCard = ({\n  imageUrl,\n  name,\n  description,\n  id,\n  variant = 'primary',\n}) => {\n  const navigate = useNavigate();\n\n  const redirectUrl = `/products?collectionId=${id}`;\n\n  const handleKeyDown = useCallback(\n    (event) => {\n      if (event.key === 'Enter') {\n        navigate(redirectUrl);\n      }\n    },\n    [navigate, redirectUrl],\n  );\n\n  return (\n    <div\n      className={clsx(\n        'relative',\n        'group',\n        'overflow-hidden rounded-lg',\n        'focus:outline-none focus-visible:ring-4 focus-visible:ring-indigo-600/[.12]',\n      )}\n      onKeyDown={handleKeyDown}\n      tabIndex={0}>\n      <img\n        loading=\"lazy\"\n        src={imageUrl}\n        alt={`${name}'s banner`}\n        className={clsx('w-full object-cover', variantClasses[variant])}\n      />\n      <Link\n        tabIndex={-1}\n        to={redirectUrl}\n        variant=\"unstyled\"\n        className=\"bg-collection hover:bg-collection-hover absolute inset-0 transition-all duration-300\">\n        <div\n          className={clsx(\n            'absolute inset-x-4 bottom-4',\n            'flex flex-col',\n            'text-white',\n          )}>\n          <span className=\"text-sm\">{name}</span>\n          <span className=\"text-lg font-medium\">{description}</span>\n        </div>\n      </Link>\n    </div>\n  );\n};\n\nexport default CollectionCard;\n"
    },
    "/src/components/CollectionCard/index.js": {
      "code": "import CollectionCard from './CollectionCard';\n\nexport default CollectionCard;\n"
    },
    "/src/components/Footer/Footer.jsx": {
      "code": "import clsx from 'clsx';\nimport {\n  RiFacebookBoxLine,\n  RiGithubLine,\n  RiInstagramLine,\n  RiTwitterXLine,\n  RiYoutubeLine,\n} from 'react-icons/ri';\n\nimport Link from '../ui/Link';\nimport NewsletterForm from './NewsletterForm';\nimport { CATEGORY_OPTIONS, COLLECTIONS_OPTIONS } from 'src/constants';\n\nconst footerSocials = [\n  {\n    icon: RiYoutubeLine,\n    url: 'https://youtube.com',\n    name: \"Link to Stylenest's youtube profile\",\n  },\n  {\n    icon: RiInstagramLine,\n    url: 'https://instagram.com',\n    name: \"Link to Stylenest's instagram profile\",\n  },\n  {\n    icon: RiFacebookBoxLine,\n    url: 'https://facebook.com',\n    name: \"Link to Stylenest's facebook profile\",\n  },\n  {\n    icon: RiGithubLine,\n    url: 'https://github.com',\n    name: \"Link to Stylenest's github profile\",\n  },\n  {\n    icon: RiTwitterXLine,\n    url: 'https://twitter.com',\n    name: \"Link to Stylenest's twitter profile\",\n  },\n];\n\nconst Footer = () => {\n  return (\n    <footer\n      className={clsx(\n        '',\n        'flex flex-col gap-12 md:gap-16',\n        'px-4 py-12 md:py-16 lg:p-24',\n      )}>\n      <div className=\"grid grid-cols-4 gap-x-4 md:grid-cols-6 md:gap-x-8 lg:grid-cols-12 lg:gap-y-[66px]\">\n        <div\n          className={clsx(\n            'flex flex-col gap-2',\n            'col-span-4 md:col-span-6 lg:col-span-8',\n          )}>\n          <div className=\"text-xl font-semibold text-neutral-900\">\n            Join our newsletter\n          </div>\n          <div className=\"text-neutral-600\">\n            We’ll send you a nice letter once per week. No spam.\n          </div>\n        </div>\n\n        <div className=\"col-span-4 mt-8 md:col-span-6 md:mt-5 lg:col-span-4 lg:mt-0\">\n          <NewsletterForm />\n        </div>\n\n        <div\n          className={clsx(\n            'flex flex-col gap-6 md:gap-8',\n            'col-span-4 mt-12 md:col-span-3 md:mt-16 lg:col-span-4 lg:mt-0',\n          )}>\n          <div>\n            <img\n              src=\"https://vaqybtnqyonvlwtskzmv.supabase.co/storage/v1/object/public/e-commerce-track-images/logo.svg\"\n              alt=\"Stylenest's Logo\"\n              className=\"block h-8 w-auto\"\n            />\n          </div>\n          <div className=\"text-neutral-600\">\n            Craft stunning style journeys that weave more joy into every thread.\n          </div>\n        </div>\n\n        <div className=\"col-span-3 hidden md:block lg:hidden\" />\n\n        <div\n          className={clsx(\n            'flex flex-col gap-4',\n            'col-span-4 mt-8 md:col-span-3 md:mt-12 lg:col-start-7 lg:mt-0',\n          )}>\n          <div className=\"text-sm text-neutral-500\">SHOP CATEGORIES</div>\n          <div className=\"flex flex-col gap-3\">\n            {CATEGORY_OPTIONS.items.map((category) => (\n              <Link to={category.href} key={category.name} variant=\"gray\">\n                {category.name}\n              </Link>\n            ))}\n          </div>\n        </div>\n\n        <div\n          className={clsx(\n            'flex flex-col gap-4',\n            'col-span-4 mt-8 md:col-span-3 md:mt-12 lg:mt-0',\n          )}>\n          <div className=\"text-sm text-neutral-500\">SHOP COLLECTIONS</div>\n          <div className=\"flex flex-col gap-3\">\n            {COLLECTIONS_OPTIONS.items.map((collection) => (\n              <Link to={collection.href} key={collection.name} variant=\"gray\">\n                {collection.name}\n              </Link>\n            ))}\n          </div>\n        </div>\n      </div>\n\n      <div\n        className={clsx(\n          'flex flex-col gap-8 md:flex-row md:items-center lg:justify-between',\n          'border-t border-neutral-200 pt-[31px]',\n        )}>\n        <div className=\"text-neutral-500\">\n          &copy; {new Date().getFullYear()} StyleNest, Inc. All rights reserved.\n        </div>\n        <div className=\"flex gap-6\">\n          {footerSocials.map(({ icon: Icon, url, name }) => (\n            <Link\n              key={name}\n              to={url}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"!px-0 !text-neutral-400\">\n              <Icon className=\"size-6\" aria-hidden=\"true\" />\n            </Link>\n          ))}\n        </div>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n"
    },
    "/src/components/Footer/index.js": {
      "code": "import Footer from './Footer';\n\nexport default Footer;\n"
    },
    "/src/components/Footer/NewsletterForm.jsx": {
      "code": "import { useState } from 'react';\n\nimport Button from 'src/components/ui/Button';\nimport TextInput from 'src/components/ui/TextInput';\n\nimport { useToast } from 'src/context/ToastContext';\n\nconst EMAIL_REGEX = /^[^@]+@[^@]+\\.[^@]+$/;\n\nconst NewsletterForm = () => {\n  const toast = useToast();\n\n  const [email, setEmail] = useState('');\n  const [submitting, setSubmitting] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n\n    if (!email.match(EMAIL_REGEX)) {\n      setErrorMessage('Please enter a valid email address.');\n      return;\n    } else if (!email) {\n      setErrorMessage('Email address is required.');\n      return;\n    } else {\n      setErrorMessage('');\n    }\n\n    setSubmitting(true);\n\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        email,\n      }), // Send the data in JSON format\n    };\n\n    // Make the request\n    const res = await fetch(\n      'https://www.greatfrontend.com/api/projects/challenges/newsletter',\n      requestOptions,\n    );\n    const result = await res.json();\n\n    if (result) {\n      setEmail('');\n      if (result.message) {\n        toast.success(result.message);\n      } else if (result.error) {\n        toast.error(result.error);\n      }\n    }\n    setSubmitting(false);\n  };\n\n  return (\n    <form\n      onSubmit={onSubmit}\n      className=\"flex w-full flex-col gap-4 md:flex-row\">\n      <TextInput\n        placeholder=\"Enter your email\"\n        errorMessage={errorMessage}\n        onChange={(value) => setEmail(value)}\n        value={email}\n        required\n      />\n      <Button label=\"Subscribe\" type=\"submit\" isDisabled={submitting} />\n    </form>\n  );\n};\n\nexport default NewsletterForm;\n"
    },
    "/src/components/Navbar/index.js": {
      "code": "import Navbar from './Navbar';\n\nexport default Navbar;\n"
    },
    "/src/components/Navbar/MobileNavMenu.jsx": {
      "code": "import { useState } from 'react';\nimport clsx from 'clsx';\nimport { createPortal } from 'react-dom';\nimport { RiCloseLine, RiMenuLine } from 'react-icons/ri';\n\nimport Link from 'src/components/ui/Link';\n\nconst MobileNavMenu = ({ links }) => {\n  const [openMenu, setOpenMenu] = useState(false);\n\n  return (\n    <>\n      <button\n        onClick={() => setOpenMenu(!openMenu)}\n        aria-label=\"Open mobile menu\"\n        aria-expanded={openMenu ? 'true' : 'false'}\n        aria-controls=\"nav-slideout-menu\"\n        type=\"button\"\n        className={clsx(\n          'block rounded text-neutral-600 lg:hidden',\n          'focus:outline-none focus-visible:ring-4 focus-visible:ring-indigo-600/[.12]',\n        )}>\n        <RiMenuLine className=\"size-5\" aria-hidden=\"true\" />\n      </button>\n\n      {/* Mobile nav menu */}\n      {openMenu &&\n        createPortal(\n          <nav\n            id=\"nav-slideout-menu\"\n            className={clsx(\n              'z-fixed fixed inset-0 max-w-[400px] bg-white px-4 py-6 lg:hidden',\n              'flex flex-col gap-6',\n              'animate-slideout',\n            )}>\n            <div className=\"flex items-center justify-between\">\n              <img\n                src=\"https://vaqybtnqyonvlwtskzmv.supabase.co/storage/v1/object/public/e-commerce-track-images/logo.svg\"\n                alt=\"Logo\"\n              />\n              <button\n                onClick={() => setOpenMenu(false)}\n                aria-label=\"Close mobile menu\"\n                type=\"button\"\n                className={clsx(\n                  'rounded text-neutral-600',\n                  'focus:outline-none focus-visible:ring-4 focus-visible:ring-indigo-600/[.12]',\n                )}>\n                <RiCloseLine className=\"size-5\" />\n              </button>\n            </div>\n            <div className=\"flex flex-col gap-2\">\n              {links.map((link) => (\n                <Link\n                  to={link.href}\n                  onClick={() => setOpenMenu(false)}\n                  className=\"px-3 py-2 text-sm\"\n                  variant=\"gray\"\n                  type=\"nav\">\n                  {link.name}\n                </Link>\n              ))}\n            </div>\n          </nav>,\n          document.body,\n        )}\n    </>\n  );\n};\n\nexport default MobileNavMenu;\n"
    },
    "/src/components/Navbar/Navbar.jsx": {
      "code": "import clsx from 'clsx';\n\nimport Link from 'src/components/ui/Link';\nimport CartButton from 'src/components/CartButton';\nimport MobileNavMenu from 'src/components/Navbar/MobileNavMenu';\n\nconst links = [\n  {\n    name: 'Shop all',\n    href: '/products',\n  },\n  {\n    name: 'Latest arrivals',\n    href: '/latest',\n  },\n];\n\nconst Navbar = ({ className }) => {\n  return (\n    <div\n      className={clsx(\n        'z-sticky sticky top-0',\n        'mx-auto max-w-[1216px]',\n        'h-[68px] lg:h-14',\n        'px-4 py-3 md:px-8 xl:px-0',\n        'flex items-center justify-between gap-4 lg:gap-[103px]',\n        className,\n      )}>\n      <Link variant=\"unstyled\" to=\"/\">\n        <img\n          src=\"https://vaqybtnqyonvlwtskzmv.supabase.co/storage/v1/object/public/e-commerce-track-images/logo.svg\"\n          alt=\"Stylenest's Logo\"\n        />\n      </Link>\n      <nav className={clsx('hidden flex-1 gap-8', 'lg:flex')}>\n        {links.map((link) => (\n          <Link to={link.href} variant=\"gray\" type=\"nav\" end>\n            {link.name}\n          </Link>\n        ))}\n      </nav>\n      <div className=\"flex items-center gap-4\">\n        <CartButton />\n        <MobileNavMenu links={links} />\n      </div>\n    </div>\n  );\n};\n\nexport default Navbar;\n"
    },
    "/src/components/ProductCard/index.js": {
      "code": "import ProductCard from './ProductCard';\n\nexport default ProductCard;\n"
    },
    "/src/components/ProductCard/ProductCard.jsx": {
      "code": "import clsx from 'clsx';\nimport { useCallback, useMemo } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nimport Link from 'src/components/ui/Link';\nimport ColorSwatches from 'src/components/ui/ColorSwatches';\n\nimport { COLORS } from 'src/constants';\n\nimport { getUnavailableColors } from 'src/pages/ProductDetail/utils';\n\nconst ProductCard = ({ product }) => {\n  const navigate = useNavigate();\n  const { images, name, inventory, colors } = product;\n  const { discount_percentage, sale_price, list_price, color } = inventory[0];\n\n  const hasDiscount = !!discount_percentage;\n\n  const unavailableColors = useMemo(\n    () => getUnavailableColors(product),\n    [product],\n  );\n\n  const redirectUrl = `/products/${product.product_id}`;\n\n  const handleKeyDown = useCallback(\n    (event) => {\n      if (event.key === 'Enter') {\n        navigate(redirectUrl);\n      }\n    },\n    [navigate, redirectUrl],\n  );\n\n  return (\n    <div\n      tabIndex={0}\n      onKeyDown={handleKeyDown}\n      className={clsx(\n        'relative w-full',\n        'group',\n        'flex flex-col gap-4',\n        'rounded-lg',\n        'outline-none',\n        'focus:ring-4 focus:ring-indigo-600/[.12]',\n      )}>\n      <img\n        src={images[0].image_url}\n        alt={`${name}'s product preview`}\n        loading=\"lazy\"\n        className={clsx(\n          'h-[225px] w-full rounded-lg object-cover md:h-[300px]',\n        )}\n      />\n      <div className={clsx('flex flex-col', 'min-h-[152px]')}>\n        <span className=\"mb-0.5 text-xs text-neutral-600\">\n          {COLORS[color]?.label}\n        </span>\n        <Link\n          to={redirectUrl}\n          tabIndex={-1}\n          variant=\"unstyled\"\n          className={clsx(\n            'text-lg font-medium text-neutral-900',\n            'group-hover:text-indigo-700',\n          )}>\n          <span aria-hidden={true} className=\"absolute inset-0\" />\n          {name}\n        </Link>\n        <div className=\"mt-3 flex items-center gap-2\">\n          <span className=\"text-lg text-neutral-500\">\n            ${hasDiscount ? sale_price : list_price}\n          </span>\n          {hasDiscount && (\n            <span className=\"text-xs text-neutral-600 line-through\">\n              ${list_price}\n            </span>\n          )}\n        </div>\n        <div className=\"mt-3 flex flex-wrap gap-1\">\n          {colors.map((color) => (\n            <ColorSwatches\n              key={color}\n              color={COLORS[color].value}\n              size=\"sm\"\n              outOfStock={unavailableColors.includes(color)}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProductCard;\n"
    },
    "/src/components/ProductGridSection/index.js": {
      "code": "import ProductGridSection from './ProductGridSection';\n\nexport default ProductGridSection;\n"
    },
    "/src/components/ProductGridSection/ProductGridSection.jsx": {
      "code": "import clsx from 'clsx';\nimport ProductCard from 'src/components/ProductCard';\n\nconst ProductGridSection = ({ products }) => {\n  return (\n    <div className=\"grid grid-cols-4 gap-x-4 gap-y-8 md:grid-cols-6 md:gap-x-8 lg:grid-cols-12\">\n      {products.map((product) => (\n        <div\n          key={product.product_id}\n          className={clsx('col-span-4 md:col-span-3')}>\n          <ProductCard product={product} />\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default ProductGridSection;\n"
    },
    "/src/components/ProductSpecificationSection/index.js": {
      "code": "import ProductSpecificationSection from './ProductSpecificationSection';\n\nexport default ProductSpecificationSection;\n"
    },
    "/src/components/ProductSpecificationSection/ProductSpecificationSection.jsx": {
      "code": "import clsx from 'clsx';\nimport { useState } from 'react';\nimport {\n  RiColorFilterLine,\n  RiHandHeartLine,\n  RiInfinityFill,\n  RiPaintLine,\n  RiPlantLine,\n  RiPriceTag2Line,\n  RiRainbowLine,\n  RiRecycleLine,\n  RiScales2Line,\n  RiShapesLine,\n  RiShieldStarLine,\n  RiShirtLine,\n  RiStackLine,\n  RiTShirtLine,\n  RiWaterFlashLine,\n  RiWindyLine,\n} from 'react-icons/ri';\n\nimport Tabs from '../ui/Tabs';\n\nconst TABS = [\n  { label: 'Sustainability', value: 'sustainability' },\n  { label: 'Comfort', value: 'comfort' },\n  { label: 'Durability', value: 'durability' },\n  { label: 'Versatility', value: 'versatility' },\n];\n\nconst specifications = [\n  {\n    value: 'sustainability',\n    title: 'Eco-Friendly Choice',\n    description:\n      'With our sustainable approach, we curate clothing that makes a statement of care—care for the planet, and for the art of fashion.',\n    img: {\n      desktop:\n        'https://vaqybtnqyonvlwtskzmv.supabase.co/storage/v1/object/public/e-commerce-track-images/product-specifications-section/yellow-desktop.jpg',\n      tablet:\n        'https://vaqybtnqyonvlwtskzmv.supabase.co/storage/v1/object/public/e-commerce-track-images/product-specifications-section/yellow-tablet.jpg',\n      mobile:\n        'https://vaqybtnqyonvlwtskzmv.supabase.co/storage/v1/object/public/e-commerce-track-images/product-specifications-section/yellow-mobile.jpg',\n    },\n    items: [\n      {\n        label: 'Recycled Materials',\n        icon: RiRecycleLine,\n      },\n      {\n        label: 'Low Impact Dye',\n        icon: RiPaintLine,\n      },\n      {\n        label: 'Carbon Neutral',\n        icon: RiPlantLine,\n      },\n      {\n        label: 'Water Conservation',\n        icon: RiWaterFlashLine,\n      },\n    ],\n  },\n  {\n    value: 'comfort',\n    title: 'Uncompromised Comfort',\n    description:\n      'Our garments are a sanctuary of softness, tailored to drape gracefully and allow for freedom of movement.',\n    img: {\n      desktop:\n        'https://vaqybtnqyonvlwtskzmv.supabase.co/storage/v1/object/public/e-commerce-track-images/product-specifications-section/black-desktop.jpg',\n      tablet:\n        'https://vaqybtnqyonvlwtskzmv.supabase.co/storage/v1/object/public/e-commerce-track-images/product-specifications-section/black-tablet.jpg',\n      mobile:\n        'https://vaqybtnqyonvlwtskzmv.supabase.co/storage/v1/object/public/e-commerce-track-images/product-specifications-section/black-mobile.jpg',\n    },\n    items: [\n      {\n        label: 'Ergonomic Fits',\n        icon: RiTShirtLine,\n      },\n      {\n        label: 'Soft-to-the-Touch Fabrics',\n        icon: RiHandHeartLine,\n      },\n      {\n        label: 'Breathable Weaves',\n        icon: RiWindyLine,\n      },\n      {\n        label: 'Thoughtful Design',\n        icon: RiColorFilterLine,\n      },\n    ],\n  },\n  {\n    value: 'durability',\n    title: 'Built to Last',\n    description:\n      'Here’s to apparel that you can trust to look as good as new, wear after wear, year after year.',\n    img: {\n      desktop:\n        'https://vaqybtnqyonvlwtskzmv.supabase.co/storage/v1/object/public/e-commerce-track-images/product-specifications-section/chair-desktop.jpg',\n      tablet:\n        'https://vaqybtnqyonvlwtskzmv.supabase.co/storage/v1/object/public/e-commerce-track-images/product-specifications-section/chair-tablet.jpg',\n      mobile:\n        'https://vaqybtnqyonvlwtskzmv.supabase.co/storage/v1/object/public/e-commerce-track-images/product-specifications-section/chair-mobile.jpg',\n    },\n    items: [\n      {\n        label: 'Reinforced Construction',\n        icon: RiStackLine,\n      },\n      {\n        label: 'Quality Control',\n        icon: RiScales2Line,\n      },\n      {\n        label: 'Material Resilience',\n        icon: RiShieldStarLine,\n      },\n      {\n        label: 'Warranty and Repair',\n        icon: RiPriceTag2Line,\n      },\n    ],\n  },\n  {\n    value: 'versatility',\n    title: 'Versatile by Design',\n    description:\n      'Our pieces are a celebration of versatility, offering a range of styles that are as perfect for a business meeting as they are for a casual brunch. ',\n    img: {\n      desktop:\n        'https://vaqybtnqyonvlwtskzmv.supabase.co/storage/v1/object/public/e-commerce-track-images/product-specifications-section/clothes-desktop.jpg',\n      tablet:\n        'https://vaqybtnqyonvlwtskzmv.supabase.co/storage/v1/object/public/e-commerce-track-images/product-specifications-section/clothes-tablet.jpg',\n      mobile:\n        'https://vaqybtnqyonvlwtskzmv.supabase.co/storage/v1/object/public/e-commerce-track-images/product-specifications-section/clothes-mobile.jpg',\n    },\n    items: [\n      {\n        label: 'Adaptive Styles',\n        icon: RiRainbowLine,\n      },\n      {\n        label: 'Functional Fashion',\n        icon: RiShirtLine,\n      },\n      {\n        label: 'Timeless Aesthetics',\n        icon: RiInfinityFill,\n      },\n      {\n        label: 'Mix-and-Match Potential',\n        icon: RiShapesLine,\n      },\n    ],\n  },\n];\n\nconst ProductSpecificationSection = () => {\n  const [selectedSpecification, setSelectedSpecification] =\n    useState('sustainability');\n\n  const data = specifications.find(\n    (specification) => specification.value === selectedSpecification,\n  );\n\n  return (\n    <section\n      className={clsx(\n        'px-4 py-12 md:py-16 lg:px-28 lg:py-24',\n        'flex flex-col gap-16',\n      )}>\n      <div className=\"flex flex-col gap-6\">\n        <h2 className=\"text-3xl font-semibold text-neutral-900 md:text-5xl\">\n          Discover timeless elegance\n        </h2>\n        <p className=\"text-lg text-neutral-600\">\n          Step into a world where quality meets quintessential charm with our\n          collection. Every thread weaves a promise of unparalleled quality,\n          ensuring that each garment is not just a part of your wardrobe, but a\n          piece of art. Here's the essence of what makes our apparel the\n          hallmark for those with an eye for excellence and a heart for the\n          environment.\n        </p>\n      </div>\n\n      <div className=\"flex flex-col gap-8\">\n        <Tabs\n          label=\"Select specification\"\n          value={selectedSpecification}\n          tabs={TABS}\n          onSelect={setSelectedSpecification}\n        />\n        <div className=\"flex flex-col gap-8 lg:flex-row\">\n          <picture className=\"shrink-0\">\n            <source srcSet={data.img.desktop} media=\"(min-width: 1024px)\" />\n            <source srcSet={data.img.tablet} media=\"(min-width: 768px)\" />\n            <img\n              loading=\"lazy\"\n              src={data.img.mobile}\n              className={clsx(\n                'h-[180px] md:h-96 lg:h-64',\n                'w-full lg:w-[367px]',\n                'rounded-lg object-cover',\n              )}\n              alt={`${selectedSpecification}'s banner`}\n            />\n          </picture>\n\n          <div className=\"flex flex-col gap-8\">\n            <div className=\"flex flex-col gap-2\">\n              <h3 className=\"text-2xl font-medium text-neutral-900\">\n                {data.title}\n              </h3>\n              <p className=\" text-neutral-600\">{data.description}</p>\n            </div>\n            <div\n              className={clsx(\n                'flex flex-wrap',\n                'gap-4 md:gap-x-12 md:gap-y-8 lg:gap-8',\n              )}>\n              {data.items.map(({ label, icon: Icon }) => (\n                <div\n                  className=\"flex w-full items-center gap-2 md:w-80 md:gap-4 lg:w-[282px]\"\n                  key={label}>\n                  <div\n                    className={clsx(\n                      'size-12 rounded-full bg-white shadow',\n                      'flex items-center justify-center',\n                      'shrink-0',\n                    )}>\n                    <Icon className=\"size-6 text-indigo-700\" />\n                  </div>\n                  <span className=\"text-neutral-600\">{label}</span>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default ProductSpecificationSection;\n"
    },
    "/src/components/ScrollToTop/index.js": {
      "code": "import ScrollToTop from './ScrollToTop';\n\nexport default ScrollToTop;\n"
    },
    "/src/components/ScrollToTop/ScrollToTop.jsx": {
      "code": "import { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}\n"
    },
    "/src/components/ui/Accordion/Accordion.jsx": {
      "code": "import clsx from 'clsx';\nimport { useState, useRef, createContext, useContext } from 'react';\nimport { RiAddCircleLine, RiIndeterminateCircleLine } from 'react-icons/ri';\n\nconst AccordionItemContext = createContext();\n\nconst AccordionItem = ({ children, id }) => {\n  const [isOpen, setIsOpen] = useState(true);\n\n  return (\n    <div>\n      <AccordionItemContext.Provider value={{ id, isOpen, setIsOpen }}>\n        {children}\n      </AccordionItemContext.Provider>\n    </div>\n  );\n};\n\nconst AccordionTrigger = ({ children }) => {\n  const { id, isOpen, setIsOpen } = useContext(AccordionItemContext);\n  const Icon = isOpen ? RiIndeterminateCircleLine : RiAddCircleLine;\n  return (\n    <button\n      className={clsx(\n        'w-full',\n        'flex items-center justify-between gap-6',\n        'focus:outline-none focus-visible:ring-4 focus-visible:ring-indigo-600/[.12]',\n        'text-left text-lg font-medium text-neutral-900',\n      )}\n      onClick={() => setIsOpen(!isOpen)}\n      aria-expanded={isOpen}\n      aria-controls={`accordion-content-${id}`}\n      id={`accordion-header-${id}`}>\n      <span>{children}</span>\n      <Icon className=\"size-6 text-neutral-400\" />\n    </button>\n  );\n};\n\nconst AccordionContent = ({ children }) => {\n  const contentRef = useRef(null);\n  const { id, isOpen } = useContext(AccordionItemContext);\n\n  return (\n    <div\n      id={`accordion-content-${id}`}\n      role=\"region\"\n      aria-labelledby={`accordion-header-${id}`}\n      className={clsx(\n        'transition-max-height overflow-hidden duration-300',\n        'pr-12',\n        isOpen && 'mt-2',\n      )}\n      style={{\n        maxHeight: isOpen ? `${contentRef.current?.scrollHeight}px` : '0',\n      }}\n      ref={contentRef}>\n      {children}\n    </div>\n  );\n};\n\nconst Accordion = ({ children }) => {\n  return (\n    <div className=\"w-full\">\n      {children.map((item, index) => (\n        <div key={item.props.id}>\n          {item}\n          {index !== children.length - 1 && (\n            <div className=\"mb-[23px] mt-8 h-[1px] bg-neutral-200\" />\n          )}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent };\n"
    },
    "/src/components/ui/Accordion/index.js": {
      "code": "import * as Accordion from './Accordion';\n\nexport * from './Accordion';\nexport default Accordion;\n"
    },
    "/src/components/ui/Badge/Badge.jsx": {
      "code": "import clsx from 'clsx';\n\nconst sizeClasses = {\n  sm: clsx('h-5', 'py px-[5px]', 'text-xs'),\n  md: clsx('h-6', 'py px-[7px]', 'text-sm'),\n  lg: clsx('h-7', 'py-[3px] px-[9px]', 'text-sm'),\n};\n\nconst variantClasses = {\n  neutral: clsx('bg-gray-50', 'border-neutral-200', 'text-neutral-600'),\n  danger: clsx('bg-red-50', 'border-red-200', 'text-red-600'),\n  warning: clsx('bg-amber-50', 'border-amber-200', 'text-amber-700'),\n  success: clsx('bg-green-50', 'border-green-200', 'text-green-700'),\n  brand: clsx('bg-indigo-50', 'border-indigo-200', 'text-indigo-700'),\n};\n\nconst Badge = ({ label, size = 'md', variant = 'neutral', className }) => {\n  const commonClasses = clsx('rounded-full text-center border');\n  return (\n    <div\n      className={clsx(\n        commonClasses,\n        sizeClasses[size],\n        variantClasses[variant],\n        className,\n      )}>\n      {label}\n    </div>\n  );\n};\n\nexport default Badge;\n"
    },
    "/src/components/ui/Badge/index.js": {
      "code": "import Badge from './Badge';\n\nexport default Badge;\n"
    },
    "/src/components/ui/Button/Button.jsx": {
      "code": "import clsx from 'clsx';\n\nimport Link from '../Link';\n\nconst paddingClasses = {\n  md: 'px-3.5 py-2.5',\n  lg: 'px-4 py-2.5',\n  xl: 'px-5 py-3',\n  '2xl': 'px-6 py-4',\n};\n\n// We need this because secondary button has border\nconst secondaryVariantPaddingClasses = {\n  md: 'px-[13px] py-[9px]',\n  lg: 'px-[15px] py-[9px]',\n  xl: 'px-[19px] py-[11px]',\n  '2xl': 'px-[23px] py-[15px]',\n};\n\nconst fontSizeClasses = {\n  md: 'text-sm',\n  lg: 'text-base',\n  xl: 'text-base',\n  '2xl': 'text-lg',\n};\n\nconst spacingClasses = {\n  md: 'gap-x-1.5',\n  lg: 'gap-x-2',\n  xl: 'gap-x-2',\n  '2xl': 'gap-x-3',\n};\n\nconst heightClasses = {\n  md: 'h-10',\n  lg: 'h-11',\n  xl: 'h-12',\n  '2xl': 'h-15',\n};\n\nconst iconOnlySizeClasses = {\n  md: 'size-10',\n  lg: 'size-11',\n  xl: 'size-12',\n  '2xl': 'size-14',\n};\n\nconst iconSizeClasses = {\n  md: 'size-5',\n  lg: 'size-5',\n  xl: 'size-5',\n  '2xl': 'size-6',\n};\n\nconst variantClasses = {\n  primary: clsx(\n    'border-none',\n    'bg-indigo-700',\n    'shadow-custom',\n    'text-white',\n    'hover:bg-indigo-800 focus:bg-indigo-800',\n  ),\n  secondary: clsx(\n    'border border-neutral-200',\n    'bg-white',\n    'shadow-custom',\n    'text-neutral-900',\n    'hover:bg-neutral-50 focus:bg-neutral-50',\n  ),\n  tertiary: clsx(\n    'border-none',\n    'text-indigo-700',\n    'hover:bg-neutral-50 focus:bg-neutral-50',\n  ),\n  danger: clsx(\n    'border-none',\n    'bg-red-600',\n    'text-white',\n    'hover:bg-red-700 focus:bg-red-700 focus:outline-none focus-visible:ring-4 focus-visible:ring-red-600/[.12]',\n  ),\n  link: clsx(\n    'text-indigo-700',\n    'hover:text-indigo-800 focus:text-indigo-800',\n    'rounded focus:outline-none focus-visible:ring-4 focus-visible:ring-indigo-600/[.12]',\n  ),\n};\n\nconst variantDisabledClasses = {\n  primary: clsx(\n    'disabled:bg-neutral-100',\n    'disabled:text-neutral-400',\n    'disabled:shadow-none',\n  ),\n  secondary: clsx(\n    'disabled:bg-neutral-100',\n    'disabled:text-neutral-400',\n    'disabled:shadow-none',\n  ),\n  tertiary: clsx('disabled:bg-none', 'disabled:text-neutral-400'),\n  danger: clsx('disabled:bg-none', 'disabled:text-neutral-400'),\n  link: clsx('disabled:text-neutral-400'),\n};\n\nconst Button = ({\n  label,\n  className,\n  isDisabled,\n  startIcon: StartIcon,\n  endIcon: EndIcon,\n  isLabelHidden,\n  size = 'md',\n  variant = 'primary',\n  iconClassName,\n  href,\n  ...props\n}) => {\n  const commonClasses = clsx(\n    'inline-flex items-center justify-center rounded font-medium outline-none cursor-pointer',\n    'focus:outline-none focus-visible:ring-4 focus-visible:ring-indigo-600/[.12]',\n    'transition-colors',\n    'text-nowrap',\n    variant !== 'link' && heightClasses[size],\n    variant !== 'link' &&\n      (variant === 'secondary'\n        ? secondaryVariantPaddingClasses[size]\n        : paddingClasses[size]),\n    fontSizeClasses[size],\n    spacingClasses[size],\n    isLabelHidden && iconOnlySizeClasses[size],\n    variantClasses[variant],\n    variantDisabledClasses[variant],\n    isDisabled && 'pointer-events-none',\n  );\n\n  if (href) {\n    return (\n      <Link\n        to={href}\n        variant=\"unstyled\"\n        disabled={isDisabled}\n        className={clsx(commonClasses, className)}\n        {...props}>\n        {StartIcon && (\n          <StartIcon\n            className={clsx('size-5 shrink-0 p-0.5', iconClassName)}\n            aria-hidden=\"true\"\n          />\n        )}\n        {label}\n        {EndIcon && (\n          <EndIcon\n            className={clsx('size-5 shrink-0 p-0.5', iconClassName)}\n            aria-hidden=\"true\"\n          />\n        )}\n      </Link>\n    );\n  }\n\n  const children = isLabelHidden ? (\n    (\n      <StartIcon\n        className={clsx('shrink-0', iconSizeClasses[size], iconClassName)}\n        aria-hidden=\"true\"\n      />\n    ) || (\n      <EndIcon\n        className={clsx('shrink-0', iconSizeClasses[size], iconClassName)}\n        aria-hidden=\"true\"\n      />\n    )\n  ) : (\n    <>\n      {StartIcon && (\n        <StartIcon\n          className={clsx('size-5 shrink-0 p-0.5', iconClassName)}\n          aria-hidden=\"true\"\n        />\n      )}\n      {label}\n      {EndIcon && (\n        <EndIcon\n          className={clsx('size-5 shrink-0 p-0.5', iconClassName)}\n          aria-hidden=\"true\"\n        />\n      )}\n    </>\n  );\n\n  return (\n    <button\n      className={clsx(commonClasses, className)}\n      disabled={isDisabled}\n      {...props}>\n      {children}\n    </button>\n  );\n};\n\nexport default Button;\n"
    },
    "/src/components/ui/Button/index.js": {
      "code": "import Button from './Button';\n\nexport default Button;\n"
    },
    "/src/components/ui/CheckboxInput/CheckboxInput.jsx": {
      "code": "import { useId } from 'react';\nimport clsx from 'clsx';\n\nconst CheckboxInput = ({ value, defaultValue, disabled, label, onChange }) => {\n  const id = useId();\n\n  return (\n    <div className=\"flex items-center gap-3\">\n      <div className=\"flex size-6 items-center justify-center\">\n        <input\n          checked={value}\n          className={clsx(\n            'size-4',\n            'rounded',\n            'text-indigo-600',\n            'border border-neutral-300',\n            'bg-transparent',\n            ['disabled:!bg-neutral-200', 'disabled:cursor-not-allowed'],\n            'focus:border-indigo-600 focus:outline-none focus:ring-4 focus:ring-indigo-600/[.12] focus:ring-offset-0',\n          )}\n          defaultChecked={defaultValue}\n          disabled={disabled}\n          id={id}\n          type=\"checkbox\"\n          onChange={(event) => {\n            if (!onChange) {\n              return;\n            }\n\n            onChange(event.target.checked, event);\n          }}\n        />\n      </div>\n      <label\n        htmlFor={id}\n        className={clsx(\n          'block',\n          disabled ? 'text-neutral-400' : 'text-neutral-600',\n        )}>\n        {label}\n      </label>\n    </div>\n  );\n};\n\nexport default CheckboxInput;\n"
    },
    "/src/components/ui/CheckboxInput/index.js": {
      "code": "import CheckboxInput from './CheckboxInput';\n\nexport default CheckboxInput;\n"
    },
    "/src/components/ui/ColorSwatches/ColorSwatches.jsx": {
      "code": "import clsx from 'clsx';\n\nconst outerSizeClasses = {\n  md: 'size-[56.67px]',\n  sm: 'size-6',\n};\n\nconst innerSizeClasses = {\n  md: 'size-[38px]',\n  sm: 'size-4',\n};\n\nconst ringSizeClasses = {\n  md: 'focus:ring-[9.33px]',\n  sm: 'focus:ring-4',\n};\n\nconst strokeLineClasses = {\n  md: 'h-0.5 w-11',\n  sm: 'h-px w-5',\n};\n\nconst ColorSwatches = ({\n  color,\n  selected,\n  onClick,\n  outOfStock,\n  size = 'md',\n  type = 'radio',\n}) => {\n  const readOnly = !onClick || outOfStock;\n\n  return (\n    <label\n      key={color}\n      aria-label={color}\n      className={clsx(\n        'flex items-center justify-center',\n        'rounded-full',\n        outerSizeClasses[size],\n        readOnly ? 'pointer-events-none' : 'cursor-pointer',\n      )}>\n      <input\n        type={type}\n        name=\"color-choice\"\n        value={color}\n        checked={selected}\n        className=\"sr-only\"\n        onChange={() => {\n          if (!onClick) {\n            return;\n          }\n          onClick(color);\n        }}\n        tabIndex={-1}\n        disabled={outOfStock}\n      />\n      <div\n        aria-hidden=\"true\"\n        className={clsx(\n          'relative',\n          'flex items-center justify-center',\n          'rounded-full',\n          innerSizeClasses[size],\n          color === '#fff' && 'border border-neutral-200',\n          selected\n            ? 'border-2 border-white outline outline-1 outline-indigo-600'\n            : !readOnly && [\n                'hover:border-2 hover:border-indigo-200',\n                'focus:border-none focus:outline-none focus:ring-indigo-600/[.12]',\n                ringSizeClasses[size],\n              ],\n        )}\n        style={{ backgroundColor: color }}\n        tabIndex={selected || outOfStock || readOnly ? -1 : 0}\n        onKeyDown={(e) => {\n          if (e.key === 'Enter' || e.key === ' ') {\n            onClick(color);\n          }\n        }}>\n        {selected && !outOfStock && (\n          <svg\n            width=\"28\"\n            height=\"28\"\n            viewBox=\"0 0 28 28\"\n            fill=\"none\"\n            className={clsx(color === '#fff' ? 'fill-black' : 'fill-white')}\n            xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M11.6673 17.6993L22.3918 6.97485L24.0417 8.62477L11.6673 20.9991L4.24268 13.5745L5.89259 11.9246L11.6673 17.6993Z\" />\n          </svg>\n        )}\n        {outOfStock && (\n          <div\n            className={clsx(\n              'absolute -rotate-45 bg-neutral-600',\n              strokeLineClasses[size],\n            )}\n          />\n        )}\n      </div>\n    </label>\n  );\n};\n\nexport default ColorSwatches;\n"
    },
    "/src/components/ui/ColorSwatches/index.js": {
      "code": "import ColorSwatches from './ColorSwatches';\n\nexport default ColorSwatches;\n"
    },
    "/src/components/ui/Dropdown/Dropdown.jsx": {
      "code": "import clsx from 'clsx';\nimport {\n  createContext,\n  useContext,\n  useEffect,\n  useId,\n  useRef,\n  useState,\n} from 'react';\nimport { RiArrowDownSLine } from 'react-icons/ri';\n\nimport Button from '../Button';\n\nconst DropdownContext = createContext();\n\nconst DropdownItem = ({ children, isSelected, onSelect }) => {\n  const { setIsOpen, isOpen } = useContext(DropdownContext);\n  const handleOptionClick = () => {\n    setIsOpen(false);\n    if (onSelect) {\n      onSelect();\n    }\n  };\n\n  return (\n    <div\n      onClick={handleOptionClick}\n      className={clsx(\n        'block text-sm',\n        'cursor-pointer',\n        'rounded',\n        'hover:bg-neutral-50',\n        'border-none outline-none',\n        'focus:ring focus:ring-indigo-200',\n        'p-2',\n        isSelected ? 'font-medium text-indigo-700' : 'text-neutral-600',\n      )}\n      role=\"menuitem\"\n      tabIndex={isOpen ? 0 : -1}\n      id=\"menu-item-0\">\n      {children}\n    </div>\n  );\n};\n\nconst Dropdown = ({ children }) => {\n  const id = useId();\n  const [isOpen, setIsOpen] = useState(false);\n  const dropdownRef = useRef(null);\n\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n        setIsOpen(false);\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n\n  return (\n    <div className=\"relative inline-block text-left\" ref={dropdownRef}>\n      <div>\n        <Button\n          type=\"button\"\n          label=\"Sort by\"\n          onClick={() => setIsOpen(!isOpen)}\n          id={id}\n          aria-expanded=\"true\"\n          aria-haspopup=\"true\"\n          variant=\"secondary\"\n          endIcon={RiArrowDownSLine}\n        />\n      </div>\n\n      <div\n        className={clsx(\n          'z-dropdown max-h-50 absolute right-0 mt-2 w-56 origin-top-right',\n          'border border-[#e6e6e6]',\n          'rounded-lg bg-white shadow-lg',\n          'origin-top transform transition duration-300 ease-in-out',\n          isOpen ? 'scale-y-100 opacity-100' : 'scale-y-0 opacity-0',\n        )}\n        role=\"menu\"\n        aria-orientation=\"vertical\"\n        aria-labelledby={id}\n        tabIndex={-1}>\n        <div className=\"flex flex-col gap-2 p-2\" role=\"none\">\n          <DropdownContext.Provider value={{ isOpen, setIsOpen }}>\n            {children}\n          </DropdownContext.Provider>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport { Dropdown, DropdownItem };\n"
    },
    "/src/components/ui/Dropdown/index.js": {
      "code": "import * as Dropdown from './Dropdown';\n\nexport * from './Dropdown';\nexport default Dropdown;\n"
    },
    "/src/components/ui/Link/index.js": {
      "code": "import Link from './Link';\n\nexport default Link;\n"
    },
    "/src/components/ui/Link/Link.jsx": {
      "code": "import clsx from 'clsx';\nimport { NavLink, Link as RouterLink } from 'react-router-dom';\n\nconst linkVariantClasses = {\n  primary: clsx(\n    'text-indigo-700',\n    'hover:text-indigo-800 focus:text-indigo-800',\n    'rounded focus:outline-none focus-visible:ring-4 focus-visible:ring-indigo-600/[.12]',\n    'px-0.5',\n  ),\n  gray: clsx(\n    'text-neutral-600',\n    'hover:text-neutral-900 focus:text-neutral-900',\n    'rounded focus:outline-none focus-visible:ring-4 focus-visible:ring-indigo-600/[.12]',\n    'px-0.5',\n  ),\n  unstyled: '',\n};\n\nconst activeLinkClasses = {\n  primary: 'text-indigo-800',\n  gray: 'text-neutral-900',\n  unstyled: '',\n};\n\nconst Link = ({\n  children,\n  disabled,\n  className,\n  type = 'default',\n  variant = 'primary',\n  ...props\n}) => {\n  const commonClassName = clsx(\n    'font-medium rounded',\n    linkVariantClasses[variant],\n    {\n      'pointer-events-none text-neutral-400': disabled,\n    },\n    className,\n  );\n\n  if (type === 'nav') {\n    return (\n      <NavLink\n        {...props}\n        className={({ isActive }) =>\n          clsx(commonClassName, isActive && activeLinkClasses[variant])\n        }>\n        {children}\n      </NavLink>\n    );\n  }\n  return (\n    <RouterLink {...props} className={clsx(commonClassName)}>\n      {children}\n    </RouterLink>\n  );\n};\n\nexport default Link;\n"
    },
    "/src/components/ui/Rating/index.js": {
      "code": "import StarRating from './Rating';\n\nexport default StarRating;\n"
    },
    "/src/components/ui/Rating/Rating.jsx": {
      "code": "import { useState } from 'react';\nimport clsx from 'clsx';\n\nimport Star from './Star';\n\nconst Rating = ({ value, max = 5, onChange, selected, showHover }) => {\n  const [hoveredIndex, setHoveredIndex] = useState(null);\n\n  const readOnlyMode = !onChange;\n\n  return (\n    <div className=\"star-rating group flex items-center gap-1\">\n      {Array.from({ length: max }).map((_, index) => (\n        <span\n          key={index}\n          tabIndex={readOnlyMode ? -1 : 0}\n          onMouseEnter={() => !readOnlyMode && setHoveredIndex(index)}\n          onMouseLeave={() => !readOnlyMode && setHoveredIndex(null)}\n          className={clsx(\n            !readOnlyMode && 'cursor-pointer',\n            selected ? 'text-yellow-500' : 'text-yellow-400',\n          )}\n          onClick={() => onChange?.(index + 1)}>\n          <Star\n            filled={\n              hoveredIndex != null ? index <= hoveredIndex : value >= index + 1\n            }\n            halfFilled={value < index + 1 && value > index}\n            className={clsx(showHover && 'group-hover:stroke-indigo-200')}\n          />\n        </span>\n      ))}\n    </div>\n  );\n};\n\nexport default Rating;\n"
    },
    "/src/components/ui/Rating/Star.jsx": {
      "code": "import clsx from 'clsx';\n\nconst Star = ({ filled, halfFilled, className }) => {\n  return filled ? (\n    <svg\n      width=\"20\"\n      height=\"20\"\n      viewBox=\"0 0 20 20\"\n      fill=\"none\"\n      className={clsx('fill-current stroke-current', className)}\n      xmlns=\"http://www.w3.org/2000/svg\">\n      <path\n        className=\"star-icon\"\n        d=\"M9 0.80198L11.0661 5.76946C11.2101 6.11569 11.5357 6.35226 11.9095 6.38223L17.2723 6.81216L13.1864 10.3122C12.9016 10.5561 12.7773 10.9389 12.8643 11.3037L14.1126 16.5368L9.52125 13.7325C9.20124 13.537 8.79876 13.537 8.47874 13.7325L3.88743 16.5368L5.13574 11.3037C5.22275 10.9389 5.09838 10.5561 4.81359 10.3122L0.727691 6.81216L6.0905 6.38223C6.46429 6.35226 6.7899 6.11569 6.93391 5.76946L9 0.80198Z\"\n      />\n    </svg>\n  ) : halfFilled ? (\n    <svg\n      width=\"20\"\n      height=\"20\"\n      viewBox=\"0 0 20 20\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\">\n      <g clipPath=\"url(#clip0_3052_704)\">\n        <path\n          d=\"M9.53834 1.60996C9.70914 1.19932 10.2909 1.19932 10.4617 1.60996L12.5278 6.57744C12.5998 6.75056 12.7626 6.86885 12.9495 6.88383L18.3123 7.31376C18.7556 7.3493 18.9354 7.90256 18.5976 8.19189L14.5117 11.6919C14.3693 11.8139 14.3071 12.0053 14.3506 12.1876L15.5989 17.4208C15.7021 17.8534 15.2315 18.1954 14.8519 17.9635L10.2606 15.1592C10.1006 15.0615 9.89938 15.0615 9.73937 15.1592L5.14806 17.9635C4.76851 18.1954 4.29788 17.8534 4.40108 17.4208L5.64939 12.1876C5.69289 12.0053 5.6307 11.8139 5.48831 11.6919L1.40241 8.19189C1.06464 7.90256 1.24441 7.3493 1.68773 7.31376L7.05054 6.88383C7.23744 6.86885 7.40024 6.75056 7.47225 6.57744L9.53834 1.60996Z\"\n          fill=\"#E5E7EB\"\n        />\n        <g clipPath=\"url(#clip1_3052_704)\">\n          <path\n            d=\"M9.53834 1.60996C9.70914 1.19932 10.2909 1.19932 10.4617 1.60996L12.5278 6.57744C12.5998 6.75056 12.7626 6.86885 12.9495 6.88383L18.3123 7.31376C18.7556 7.3493 18.9354 7.90256 18.5976 8.19189L14.5117 11.6919C14.3693 11.8139 14.3071 12.0053 14.3506 12.1876L15.5989 17.4208C15.7021 17.8534 15.2315 18.1954 14.8519 17.9635L10.2606 15.1592C10.1006 15.0615 9.89938 15.0615 9.73937 15.1592L5.14806 17.9635C4.76851 18.1954 4.29788 17.8534 4.40108 17.4208L5.64939 12.1876C5.69289 12.0053 5.6307 11.8139 5.48831 11.6919L1.40241 8.19189C1.06464 7.90256 1.24441 7.3493 1.68773 7.31376L7.05054 6.88383C7.23744 6.86885 7.40024 6.75056 7.47225 6.57744L9.53834 1.60996Z\"\n            fill=\"#FACC15\"\n          />\n        </g>\n      </g>\n      <defs>\n        <clipPath id=\"clip0_3052_704\">\n          <rect width=\"20\" height=\"20\" fill=\"white\" />\n        </clipPath>\n        <clipPath id=\"clip1_3052_704\">\n          <rect width=\"10\" height=\"20\" fill=\"white\" />\n        </clipPath>\n      </defs>\n    </svg>\n  ) : (\n    <svg\n      width=\"20\"\n      height=\"20\"\n      viewBox=\"0 0 20 20\"\n      fill=\"none\"\n      className={clsx('fill-gray-200 stroke-gray-200', className)}\n      xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M9 0.80198L11.0661 5.76946C11.2101 6.11569 11.5357 6.35226 11.9095 6.38223L17.2723 6.81216L13.1864 10.3122C12.9016 10.5561 12.7773 10.9389 12.8643 11.3037L14.1126 16.5368L9.52125 13.7325C9.20124 13.537 8.79876 13.537 8.47874 13.7325L3.88743 16.5368L5.13574 11.3037C5.22275 10.9389 5.09838 10.5561 4.81359 10.3122L0.727691 6.81216L6.0905 6.38223C6.46429 6.35226 6.7899 6.11569 6.93391 5.76946L9 0.80198Z\" />\n    </svg>\n  );\n};\n\nexport default Star;\n"
    },
    "/src/components/ui/SlideOut/index.js": {
      "code": "import SlideOut from './SlideOut';\n\nexport default SlideOut;\n"
    },
    "/src/components/ui/SlideOut/SlideOut.jsx": {
      "code": "import { createPortal } from 'react-dom';\nimport clsx from 'clsx';\nimport { RiCloseLine } from 'react-icons/ri';\nimport { useEffect } from 'react';\n\nconst SlideOut = ({\n  children,\n  isShown,\n  trigger,\n  title,\n  onClose,\n  className,\n}) => {\n  useEffect(() => {\n    if (isShown) {\n      document.body.style.overflow = 'hidden';\n    } else {\n      document.body.style.overflow = 'auto';\n    }\n    return () => {\n      document.body.style.overflow = 'auto';\n    };\n  }, [isShown]);\n\n  return (\n    <>\n      {trigger}\n\n      {isShown &&\n        createPortal(\n          <div\n            className={clsx(\n              'z-modal fixed  inset-0 lg:hidden',\n              'bg-neutral-950 bg-opacity-70',\n              'flex items-center justify-center',\n            )}\n            role=\"dialog\"\n            aria-modal=\"true\">\n            <div\n              id=\"slideout\"\n              className={clsx(\n                'z-fixed fixed inset-0 max-w-[360px] bg-white',\n                'animate-slideout',\n                'overflow-auto',\n                className,\n              )}>\n              <div\n                className={clsx(\n                  'z-sticky sticky top-0 bg-white p-6',\n                  'flex flex-col gap-6',\n                )}>\n                <div\n                  className={clsx(\n                    'flex items-center',\n                    !!title ? 'justify-between' : 'justify-end',\n                  )}>\n                  {title}\n                  <button\n                    onClick={onClose}\n                    aria-label=\"Close sideout\"\n                    type=\"button\"\n                    className={clsx(\n                      'rounded text-neutral-600',\n                      'focus:outline-none focus-visible:ring-4 focus-visible:ring-indigo-600/[.12]',\n                    )}>\n                    <RiCloseLine className=\"size-5\" />\n                  </button>\n                </div>\n                <div className=\"h-[1px] w-full bg-neutral-200\" />\n              </div>\n              <div className=\"px-6 pb-6\">{children}</div>\n            </div>\n          </div>,\n          document.body,\n        )}\n    </>\n  );\n};\n\nexport default SlideOut;\n"
    },
    "/src/components/ui/Tabs/index.js": {
      "code": "import Tabs from './Tabs';\n\nexport default Tabs;\n"
    },
    "/src/components/ui/Tabs/Tabs.jsx": {
      "code": "import clsx from 'clsx';\n\nconst Tabs = ({ label, tabs, value, onSelect }) => {\n  return (\n    <div className=\"isolate w-full overflow-x-auto overflow-y-hidden\">\n      <div\n        className={clsx('flex items-center', ['border-b border-neutral-300'])}>\n        <nav aria-label={label} className={clsx('flex grow gap-6')}>\n          {tabs.map((tabItem) => {\n            const { label: tabItemLabel, value: tabItemValue } = tabItem;\n            const isSelected = tabItemValue === value;\n            const commonProps = {\n              children: (\n                <span\n                  className={clsx(\n                    'flex items-center transition-all',\n                    'font-medium',\n                    isSelected ? 'text-indigo-700' : 'text-neutral-600',\n                  )}>\n                  {tabItemLabel}\n                </span>\n              ),\n              className: clsx(\n                'px-2 pb-[11px] whitespace-nowrap z-10 transition',\n                isSelected ? '-mb-px' : '',\n                isSelected &&\n                  'border border-x-0 border-t-0 border-b-indigo-600',\n              ),\n              onClick: () => onSelect?.(tabItemValue),\n            };\n\n            return (\n              <button\n                key={String(tabItemValue)}\n                type=\"button\"\n                {...commonProps}\n              />\n            );\n          })}\n        </nav>\n      </div>\n    </div>\n  );\n};\n\nexport default Tabs;\n"
    },
    "/src/components/ui/TextInput/index.js": {
      "code": "import TextInput from './TextInput';\n\nexport default TextInput;\n"
    },
    "/src/components/ui/TextInput/TextInput.jsx": {
      "code": "import clsx from 'clsx';\nimport { useId } from 'react';\n\nconst TextInput = ({\n  label,\n  placeholder,\n  value,\n  onChange,\n  type,\n  id: idParam,\n  required,\n  isDisabled,\n  errorMessage,\n  hintMessage,\n  startIcon: StartIcon,\n  endIcon: EndIcon,\n  startIconClassName,\n  endIconClassName,\n}) => {\n  const generateId = useId();\n  const id = idParam ?? generateId;\n  const hasError = !!errorMessage;\n\n  const messageId = useId();\n\n  const hasBottomSection = !!errorMessage || !!hintMessage;\n\n  return (\n    <div className={clsx('flex w-full flex-col gap-1.5', 'relative')}>\n      {label && (\n        <label\n          className={clsx('text-sm font-medium text-neutral-700')}\n          htmlFor={id}>\n          {label}\n        </label>\n      )}\n      <div className=\"relative\">\n        {StartIcon && (\n          <div className=\"pointer-events-none absolute inset-y-0 left-0 flex items-center pl-3.5\">\n            <StartIcon\n              aria-hidden=\"true\"\n              className={clsx('text-neutral-400', 'size-5', startIconClassName)}\n            />\n          </div>\n        )}\n\n        <input\n          id={id}\n          aria-describedby={hasError ? messageId : undefined}\n          aria-invalid={hasError ? true : undefined}\n          type={type}\n          placeholder={placeholder}\n          value={value}\n          onChange={(event) => onChange(event.target.value, event)}\n          required={required}\n          disabled={isDisabled}\n          className={clsx(\n            'block w-full',\n            'px-[13px] py-[9px]',\n            'outline:none',\n            'border border-neutral-200 disabled:border-neutral-100',\n            'bg-neutral-50',\n            'rounded',\n            'text-sm text-neutral-900 placeholder:text-neutral-500 disabled:text-neutral-400 disabled:placeholder:text-neutral-400',\n            'focus:outline-none',\n            'focus:border-indigo-600 focus:ring-4 focus:ring-indigo-600/[.12] focus:ring-offset-0',\n            hasError && 'focus:border-red-600 focus:ring-red-600/[.12]',\n            'disabled:pointer-events-none',\n            StartIcon && 'pl-[41px]',\n            EndIcon && 'pr-[38px]',\n          )}\n        />\n\n        {EndIcon && (\n          <div className=\"pointer-events-none absolute inset-y-0 right-0 flex items-center pr-3.5\">\n            <EndIcon\n              aria-hidden=\"true\"\n              className={clsx('text-neutral-400', 'size-4', endIconClassName)}\n            />\n          </div>\n        )}\n      </div>\n\n      {hasBottomSection && (\n        <div\n          id={messageId}\n          className={clsx(\n            'text-sm text-neutral-500',\n            hasError && 'text-red-600',\n          )}>\n          {errorMessage || hintMessage}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TextInput;\n"
    },
    "/src/components/ui/Toast/index.js": {
      "code": "import Toast from './Toast';\n\nexport default Toast;\n"
    },
    "/src/components/ui/Toast/Toast.jsx": {
      "code": "import clsx from 'clsx';\nimport React from 'react';\n\nconst Toast = ({ type, message }) => {\n  const badge = (\n    <div\n      className={clsx(\n        'flex items-center',\n        'px-2.5 py-0.5',\n        'h-6',\n        'bg-white',\n        'shadow',\n        'rounded-full',\n        'text-sm',\n        type === 'error' && 'text-red-800',\n        type === 'success' && 'text-green-700',\n      )}>\n      {type === 'error' ? 'Error' : 'Success'}\n    </div>\n  );\n\n  return (\n    <div className={clsx('z-toast fixed inset-x-0 top-10')}>\n      <div\n        className={clsx(\n          'mx-4 md:mx-auto md:w-max',\n          'flex items-center gap-3',\n          'p-1 pr-2.5',\n          'rounded-full',\n          'text-sm font-medium',\n          type === 'success' && 'bg-green-50 text-green-700',\n          type === 'error' && 'bg-red-50 text-red-600',\n        )}>\n        {badge}\n        <span>{message}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default Toast;\n"
    },
    "/src/components/ui/Tooltip/index.js": {
      "code": "import Tooltip from './Tooltip';\n\nexport default Tooltip;\n"
    },
    "/src/components/ui/Tooltip/Tooltip.jsx": {
      "code": "import clsx from 'clsx';\nimport { useState } from 'react';\n\nconst Tooltip = ({ children, content, position = 'top', show = true }) => {\n  const [visible, setVisible] = useState(false);\n\n  const positions = {\n    top: 'bottom-full left-1/2 transform -translate-x-1/2 mb-2',\n    bottom: 'top-full left-1/2 transform -translate-x-1/2 mt-2',\n    left: 'right-full top-1/2 transform -translate-y-1/2 mr-2',\n    right: 'left-full top-1/2 transform -translate-y-1/2 ml-2',\n  };\n\n  const arrowPositions = {\n    top: 'bottom-[-4px] left-1/2 transform -translate-x-1/2 border-t-neutral-950 border-t-8 border-x-8 border-x-transparent',\n    bottom:\n      'top-[-4px] left-1/2 transform -translate-x-1/2 border-b-neutral-950 border-b-8 border-x-8 border-x-transparent',\n    left: 'right-[-4px] top-1/2 transform -translate-y-1/2 border-l-neutral-950 border-l-8 border-y-8 border-y-transparent',\n    right:\n      'left-[-4px] top-1/2 transform -translate-y-1/2 border-r-neutral-950 border-r-8 border-y-8 border-y-transparent',\n  };\n\n  return (\n    <div\n      className=\"relative flex items-center\"\n      onMouseEnter={() => show && setVisible(true)}\n      onMouseLeave={() => show && setVisible(false)}>\n      {children}\n      {visible && (\n        <div\n          className={clsx(\n            'absolute min-w-max max-w-xs rounded-lg px-3 py-2 shadow-lg',\n            'bg-neutral-950',\n            'text-xs font-medium text-white',\n            positions[position],\n          )}>\n          {content}\n          <div className={clsx('absolute', arrowPositions[position])} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Tooltip;\n"
    },
    "/src/constants.js": {
      "code": "export const COLORS = {\n  white: { value: '#fff', label: 'White' },\n  black: { value: '#000', label: 'Black' },\n  red: { value: '#DC2626', label: 'Red' },\n  orange: { value: '#EA580C', label: 'Orange' },\n  yellow: { value: '#F59E0B', label: 'Yellow' },\n  green: { value: '#10B981', label: 'Green' },\n  blue: { value: '#4F46E5', label: 'Blue' },\n  brown: { value: '#CA8A04', label: 'Brown' },\n  beige: { value: '#d2b08a', label: 'Beige' },\n  pink: { value: '#EC4899', label: 'Pink' },\n};\n\nexport const COLLECTIONS_OPTIONS = {\n  title: 'Collections',\n  key: 'collection',\n  items: [\n    {\n      name: 'Latest arrivals',\n      value: 'latest',\n      href: '/products?collectionId=latest',\n    },\n    {\n      name: 'Urban Oasis',\n      value: 'urban',\n      href: '/products?collectionId=urban',\n    },\n    {\n      name: 'Cozy Comfort',\n      value: 'cozy',\n      href: '/products?collectionId=cozy',\n    },\n    {\n      name: 'Fresh Fusion',\n      value: 'fresh',\n      href: '/products?collectionId=fresh',\n    },\n  ],\n};\n\nexport const CATEGORY_OPTIONS = {\n  title: 'Category',\n  key: 'category',\n  items: [\n    {\n      name: 'Unisex',\n      value: 'unisex',\n      href: '/products?categoryId=unisex',\n    },\n    {\n      name: 'Women',\n      value: 'women',\n      href: '/products?categoryId=women',\n    },\n    {\n      name: 'Men',\n      value: 'men',\n      href: '/products?categoryId=men',\n    },\n  ],\n};\n\nexport const COLORS_OPTIONS = {\n  title: 'Colors',\n  key: 'color',\n  items: [\n    {\n      color: COLORS.white.value,\n      value: 'white',\n    },\n    {\n      color: COLORS.black.value,\n      value: 'black',\n    },\n    {\n      color: COLORS.red.value,\n      value: 'red',\n    },\n    {\n      color: COLORS.orange.value,\n      value: 'orange',\n    },\n    {\n      color: COLORS.yellow.value,\n      value: 'yellow',\n    },\n    {\n      color: COLORS.green.value,\n      value: 'green',\n    },\n    {\n      color: COLORS.blue.value,\n      value: 'blue',\n    },\n    {\n      color: COLORS.brown.value,\n      value: 'brown',\n    },\n    {\n      color: COLORS.beige.value,\n      value: 'beige',\n    },\n    {\n      color: COLORS.pink.value,\n      value: 'pink',\n    },\n  ],\n};\n\nexport const RATING_OPTIONS = {\n  title: 'Rating',\n  key: 'rating',\n  items: [\n    {\n      value: 5,\n      name: '5 star rating',\n    },\n    {\n      value: 4,\n      name: '4 star rating',\n    },\n    {\n      value: 3,\n      name: '3 star rating',\n    },\n    {\n      value: 2,\n      name: '2 star rating',\n    },\n    {\n      value: 1,\n      name: '1 star rating',\n    },\n  ],\n};\n\nexport const SORT_OPTIONS = [\n  {\n    name: 'Newest',\n    value: 'created',\n    direction: 'desc',\n  },\n  {\n    name: 'Best rating',\n    value: 'rating',\n    direction: 'desc',\n  },\n  {\n    name: 'Most popular',\n    value: 'popularity',\n    direction: 'desc',\n  },\n  {\n    name: 'Price: Low to high',\n    value: 'price',\n    direction: 'asc',\n  },\n  {\n    name: 'Price: High to low',\n    value: 'price',\n    direction: 'desc',\n  },\n];\n"
    },
    "/src/context/CartContext.jsx": {
      "code": "import {\n  createContext,\n  useState,\n  useEffect,\n  useContext,\n  useMemo,\n  useCallback,\n} from 'react';\n\nconst CartContext = createContext();\n\nexport const useCartContext = () => useContext(CartContext);\n\nconst CartContextProvider = ({ children }) => {\n  const [cartItems, setCartItems] = useState([]);\n\n  useEffect(() => {\n    // Retrieve cart from localStorage\n    const storedCart = JSON.parse(localStorage.getItem('cart')) || [];\n    setCartItems(storedCart);\n  }, []);\n\n  const addToCart = useCallback(\n    (item) => {\n      const existingItem = cartItems.find(\n        (cartItem) =>\n          cartItem.id === item.id &&\n          cartItem.color === item.color &&\n          cartItem.size === item.size,\n      );\n\n      let updatedCart;\n      if (existingItem) {\n        updatedCart = cartItems.map((cartItem) =>\n          cartItem.id === item.id &&\n          cartItem.color === item.color &&\n          cartItem.size === item.size\n            ? { ...cartItem, quantity: item.quantity }\n            : cartItem,\n        );\n      } else {\n        updatedCart = [...cartItems, item];\n      }\n\n      setCartItems(updatedCart);\n      localStorage.setItem('cart', JSON.stringify(updatedCart));\n    },\n    [cartItems],\n  );\n\n  const removeFromCart = useCallback(\n    (itemId, color, size) => {\n      const updatedCart = cartItems.filter(\n        (item) =>\n          !(item.id === itemId && item.color === color && item.size === size),\n      );\n      setCartItems(updatedCart);\n      localStorage.setItem('cart', JSON.stringify(updatedCart));\n    },\n    [cartItems],\n  );\n\n  const value = useMemo(\n    () => ({ cartItems, addToCart, removeFromCart }),\n    [cartItems, addToCart, removeFromCart],\n  );\n\n  return <CartContext.Provider value={value}>{children}</CartContext.Provider>;\n};\n\nexport default CartContextProvider;\n"
    },
    "/src/context/ToastContext.jsx": {
      "code": "import {\n  createContext,\n  useCallback,\n  useContext,\n  useMemo,\n  useState,\n} from 'react';\n\nconst ToastContext = createContext({\n  toast: {\n    show: false,\n    type: '',\n    message: '',\n  },\n  showToast: () => {},\n});\n\nexport const useToast = () => {\n  const { showToast } = useContext(ToastContext);\n\n  const error = (message) => showToast('error', message);\n  const success = (message) => showToast('success', message);\n\n  return { error, success };\n};\n\nexport const useToastContext = () => useContext(ToastContext);\n\nconst ToastContextProvider = ({ children }) => {\n  const [toast, setToast] = useState({\n    show: false,\n    type: '',\n    message: '',\n  });\n\n  const showToast = useCallback((type, message) => {\n    setToast({\n      show: true,\n      type,\n      message,\n    });\n    setTimeout(() => {\n      setToast({\n        show: false,\n        type: '',\n        message: '',\n      });\n    }, 10000);\n  }, []);\n\n  const value = useMemo(() => {\n    return {\n      toast,\n      showToast,\n    };\n  }, [toast, showToast]);\n\n  return (\n    <ToastContext.Provider value={value}>{children}</ToastContext.Provider>\n  );\n};\n\nexport default ToastContextProvider;\n"
    },
    "/src/index.css": {
      "code": "@import url('https://fonts.googleapis.com/css2?family=Noto+Sans:ital,wght@0,100..900;1,100..900&display=swap');\n\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\nbody {\n  font-family:\n    'Noto Sans',\n    system-ui,\n    -apple-system,\n    BlinkMacSystemFont,\n    'Segoe UI',\n    Roboto,\n    Oxygen,\n    Ubuntu,\n    Cantarell,\n    'Open Sans',\n    'Helvetica Neue',\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-rendering: optimizeLegibility;\n  background: linear-gradient(147.52deg, #f9fafb 8.89%, #d2d6db 100.48%);\n}\n\n/* Custom z-index */\n.z-sticky {\n  z-index: 1020;\n}\n.z-fixed {\n  z-index: 1030;\n}\n.z-dropdown {\n  z-index: 1000;\n}\n.z-modal {\n  z-index: 1055;\n}\n.z-toast {\n  z-index: 1090;\n}\n\n/* Custom animations and keyframes */\n@keyframes slideout {\n  from {\n    transform: translateX(-100%);\n  }\n  to {\n    transform: translateX(0%);\n  }\n}\n\n.animate-slideout {\n  animation: slideout 0.4s ease-out;\n}\n\n/* Custom box shadow */\n.shadow-custom {\n  box-shadow:\n    0px 1px 2px 0 rgb(0 0 0 / 0.06),\n    0px 1px 3px 0 rgb(0 0 0 / 0.1);\n}\n\n/* Custom background */\n.bg-collection {\n  background: linear-gradient(\n    60deg,\n    rgba(0, 0, 0, 0.4) -9.37%,\n    rgba(0, 0, 0, 0.132) 100%\n  );\n}\n.bg-collection-hover {\n  background: linear-gradient(\n    360deg,\n    rgba(0, 0, 0, 0.6) -9.37%,\n    rgba(0, 0, 0, 0.198) 100%\n  );\n}\n"
    },
    "/src/index.js": {
      "code": "import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport ScrollToTop from './components/ScrollToTop';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <Router>\n      <ScrollToTop />\n      <App />\n    </Router>\n  </React.StrictMode>,\n);\n"
    },
    "/src/Layout.jsx": {
      "code": "import clsx from 'clsx';\nimport { Outlet } from 'react-router-dom';\n\nimport Toast from 'src/components/ui/Toast';\nimport Footer from 'src/components/Footer';\n\nimport { useToastContext } from './context/ToastContext';\nimport Navbar from './components/Navbar';\n\nconst Layout = () => {\n  const { toast } = useToastContext();\n\n  return (\n    <>\n      <Navbar className=\"mt-4\" />\n      <main className=\"mx-auto min-h-screen max-w-[1440px] p-4\">\n        {toast.show && <Toast type={toast.type} message={toast.message} />}\n        <div\n          className={clsx(\n            'min-h-[calc(100vh_-_32px)] rounded-md bg-white',\n            'shadow-sm md:shadow-md lg:shadow-lg',\n            'text-neutral-900',\n          )}>\n          <Outlet />\n          <Footer />\n        </div>\n      </main>\n    </>\n  );\n};\n\nexport default Layout;\n"
    },
    "/src/pages/LatestArrivals/components/LatestArrivalsSection.jsx": {
      "code": "import { useEffect, useState } from 'react';\n\nimport Button from 'src/components/ui/Button';\nimport ProductGridSection from 'src/components/ProductGridSection';\nimport clsx from 'clsx';\n\nconst LatestArrivalsSection = ({ className }) => {\n  const [products, setProducts] = useState([]);\n  const [isProductsLoading, setIsProductsLoading] = useState(true);\n\n  const getLatestArrivalProducts = async () => {\n    setIsProductsLoading(true);\n\n    const data = await fetch(\n      `https://www.greatfrontend.com/api/projects/challenges/e-commerce/products?collection=latest`,\n    );\n    const result = await data.json();\n\n    if (!result.error) {\n      setProducts(result.data);\n    }\n    setIsProductsLoading(false);\n  };\n\n  useEffect(() => {\n    getLatestArrivalProducts();\n  }, []);\n\n  return (\n    <section\n      aria-describedby=\"latest-arrivals-section\"\n      className={clsx(\n        'px-4 py-12 md:py-16 lg:p-24',\n        'flex flex-col gap-8',\n        'h-full',\n        className,\n      )}>\n      <div className=\"flex items-center justify-between md:items-start\">\n        <div className=\"text-2xl font-semibold md:text-3xl\">\n          Latest Arrivals\n        </div>\n        <Button\n          label=\"View all\"\n          variant=\"secondary\"\n          href=\"/products?collectionId=latest\"\n          size=\"lg\"\n        />\n      </div>\n      {isProductsLoading ? (\n        <div className=\"flex h-full w-full items-center justify-center\">\n          Loading...\n        </div>\n      ) : (\n        <ProductGridSection products={products} />\n      )}\n    </section>\n  );\n};\n\nexport default LatestArrivalsSection;\n"
    },
    "/src/pages/LatestArrivals/index.js": {
      "code": "import LatestArrivalsPage from './LatestArrivalsPage';\n\nexport default LatestArrivalsPage;\n"
    },
    "/src/pages/LatestArrivals/LatestArrivalsPage.jsx": {
      "code": "import LatestArrivalsSection from './components/LatestArrivalsSection';\n\nconst LatestArrivalsPage = () => {\n  return <LatestArrivalsSection className=\"md:py-[72px] lg:py-[104px]\" />;\n};\n\nexport default LatestArrivalsPage;\n"
    },
    "/src/pages/ProductDetail/components/AvailableColors.jsx": {
      "code": "import { useMemo } from 'react';\n\nimport ColorSwatches from 'src/components/ui/ColorSwatches';\nimport { useProductDetailsContext } from './ProductDetailsContext';\nimport { COLORS } from 'src/constants';\nimport { getUnavailableColors } from '../utils';\n\nconst AvailableColors = () => {\n  const { selectedColor, setSelectedColor, product } =\n    useProductDetailsContext();\n  const { colors } = product;\n  const unavailableColors = useMemo(\n    () => getUnavailableColors(product),\n    [product],\n  );\n\n  return (\n    <fieldset aria-label=\"Choose a color\">\n      <legend className=\"text-sm text-neutral-500\">Available Colors</legend>\n      <div className=\"mt-4 flex flex-wrap gap-4\">\n        {colors.map((color) => (\n          <ColorSwatches\n            key={color}\n            color={COLORS[color].value}\n            outOfStock={unavailableColors.includes(color)}\n            selected={selectedColor === color}\n            onClick={() => setSelectedColor(color)}\n          />\n        ))}\n      </div>\n    </fieldset>\n  );\n};\n\nexport default AvailableColors;\n"
    },
    "/src/pages/ProductDetail/components/AvailableSizes.jsx": {
      "code": "import clsx from 'clsx';\n\nimport { useProductDetailsContext } from './ProductDetailsContext';\nimport { getUnavailableSizes } from '../utils';\n\nconst SIZE_MAP = {\n  xs: 'XS',\n  sm: 'S',\n  md: 'M',\n  lg: 'L',\n  xl: 'XL',\n};\n\nconst AvailableSizes = () => {\n  const { selectedSize, setSelectedSize, selectedColor, product } =\n    useProductDetailsContext();\n  const { sizes } = product;\n  const unavailableSizes = getUnavailableSizes({\n    product,\n    color: selectedColor,\n  });\n\n  return (\n    <fieldset aria-label=\"Choose a size\">\n      <legend className=\"text-sm text-neutral-500\">Available Sizes</legend>\n\n      <div className={clsx('mt-4', 'flex flex-wrap gap-4')}>\n        {sizes.map((size) => {\n          const outOfStock = unavailableSizes.includes(size);\n\n          return (\n            <label\n              key={size}\n              aria-label={size}\n              className={clsx(\n                outOfStock ? 'pointer-events-none' : 'cursor-pointer',\n              )}>\n              <input\n                type=\"radio\"\n                name=\"size-choice\"\n                value={size}\n                className=\"sr-only\"\n                disabled={outOfStock}\n                tabIndex={-1}\n                aria-checked={selectedSize === size}\n                onChange={() => setSelectedSize(size)}\n              />\n              <span\n                aria-hidden=\"true\"\n                tabIndex={selectedSize === size || outOfStock ? -1 : 0}\n                className={clsx(\n                  'h-12 w-16',\n                  'flex items-center justify-center gap-1.5',\n                  'px-5 py-3',\n                  'font-medium uppercase',\n                  'rounded border',\n                  'focus:outline-none',\n                  outOfStock\n                    ? [\n                        'text-neutral-400',\n                        'pointer-events-none',\n                        'bg-neutral-100',\n                      ]\n                    : [\n                        'text-neutral-900',\n                        'cursor-pointer',\n                        'bg-white hover:bg-neutral-50 focus:bg-neutral-50',\n                      ],\n                  selectedSize === size\n                    ? 'border-indigo-600'\n                    : 'border-neutral-200',\n                  outOfStock && selectedSize !== size && 'border-none',\n                )}\n                onKeyDown={(e) => {\n                  if (e.key === 'Enter' || e.key === ' ') {\n                    setSelectedSize(size);\n                  }\n                }}>\n                {SIZE_MAP[size] ? SIZE_MAP[size] : size}\n              </span>\n            </label>\n          );\n        })}\n      </div>\n    </fieldset>\n  );\n};\n\nexport default AvailableSizes;\n"
    },
    "/src/pages/ProductDetail/components/InfoSection.jsx": {
      "code": "import {\n  Accordion,\n  AccordionContent,\n  AccordionItem,\n  AccordionTrigger,\n} from 'src/components/ui/Accordion';\n\nimport { useProductDetailsContext } from './ProductDetailsContext';\n\nconst InfoSection = () => {\n  const { product } = useProductDetailsContext();\n  const { info } = product;\n\n  return (\n    <section aria-labelledby=\"product-faq\" className=\"mt-10\">\n      <Accordion>\n        {info.map((item) => (\n          <AccordionItem key={item.title} id={item.title}>\n            <AccordionTrigger>{item.title}</AccordionTrigger>\n            <AccordionContent>\n              <ul className=\"ml-4 list-disc pl-2 text-neutral-600\">\n                {item.description.map((descItem) => (\n                  <li key={descItem}>{descItem}</li>\n                ))}\n              </ul>\n            </AccordionContent>\n          </AccordionItem>\n        ))}\n      </Accordion>\n    </section>\n  );\n};\n\nexport default InfoSection;\n"
    },
    "/src/pages/ProductDetail/components/ProductCollectionSection.jsx": {
      "code": "import clsx from 'clsx';\nimport { useCallback, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport ProductGridSection from 'src/components/ProductGridSection';\n\nconst ProductCollectionSection = () => {\n  const { productId } = useParams();\n  const [collectionProducts, setCollectionsProducts] = useState([]);\n  const [isCollectionProductsLoading, setIsCollectionProductsLoading] =\n    useState(true);\n\n  const getCollectionsProducts = useCallback(async () => {\n    setIsCollectionProductsLoading(true);\n\n    const data = await fetch(\n      `https://www.greatfrontend.com/api/projects/challenges/e-commerce/products?collection=latest`,\n    );\n    const result = await data.json();\n\n    if (!result.error) {\n      setCollectionsProducts(\n        result.data.filter((item) => item.product_id !== productId).slice(0, 4),\n      );\n    }\n    setIsCollectionProductsLoading(false);\n  }, [productId]);\n\n  useEffect(() => {\n    getCollectionsProducts();\n  }, [getCollectionsProducts]);\n\n  return (\n    <section\n      className={clsx('px-4 py-12 md:py-16 lg:p-24', 'flex flex-col gap-8')}>\n      <span className=\"text-2xl font-semibold md:text-3xl\">\n        In this collection\n      </span>\n      {isCollectionProductsLoading ? (\n        <div>Loading...</div>\n      ) : (\n        <ProductGridSection products={collectionProducts} />\n      )}\n    </section>\n  );\n};\n\nexport default ProductCollectionSection;\n"
    },
    "/src/pages/ProductDetail/components/ProductDetailsContext.jsx": {
      "code": "import {\n  createContext,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { getUnavailableSizes } from '../utils';\n\nconst ProductDetailsContext = createContext();\n\nexport const useProductDetailsContext = () => useContext(ProductDetailsContext);\n\nconst ProductDetailsContextProvider = ({ children }) => {\n  const navigate = useNavigate();\n  const { productId } = useParams();\n  const [product, setProduct] = useState(null);\n  const [isProductLoading, setIsProductLoading] = useState(false);\n  const [selectedColor, setSelectedColor] = useState(null);\n  const [selectedSize, setSelectedSize] = useState(null);\n  const [itemQuantity, setItemQuantity] = useState(1);\n\n  const getProduct = useCallback(async () => {\n    setIsProductLoading(true);\n    const data = await fetch(\n      `https://www.greatfrontend.com/api/projects/challenges/e-commerce/products/${productId}`,\n    );\n    const result = await data.json();\n\n    if (!result.error) {\n      setProduct(result);\n      setSelectedColor(result.colors[0]);\n    } else {\n      return navigate('/not-found');\n    }\n    setIsProductLoading(false);\n  }, [productId, navigate]);\n\n  const decrementQuantity = useCallback(() => {\n    setItemQuantity((prev) => (prev > 1 ? prev - 1 : 1));\n  }, []);\n\n  const incrementQuantity = useCallback(() => {\n    setItemQuantity((prev) => prev + 1);\n  }, []);\n\n  useEffect(() => {\n    getProduct();\n  }, [getProduct]);\n\n  // Set first available size as the initial selected size\n  useEffect(() => {\n    if (!product || !selectedColor) {\n      return;\n    }\n\n    const unavailableSizes = getUnavailableSizes({\n      product,\n      color: selectedColor,\n    });\n    const availableSizes = [...product.sizes].filter(\n      (size) => !unavailableSizes.includes(size),\n    );\n    if (availableSizes.length > 0) {\n      setSelectedSize(availableSizes[0]);\n    }\n  }, [selectedColor, product]);\n\n  // Reset item quantity to 1 when we change color or size\n  useEffect(() => {\n    setItemQuantity(1);\n  }, [selectedColor, selectedSize]);\n\n  const value = useMemo(() => {\n    return {\n      product,\n      isProductLoading,\n      selectedColor,\n      selectedSize,\n      itemQuantity,\n      setSelectedColor,\n      setSelectedSize,\n      incrementQuantity,\n      decrementQuantity,\n    };\n  }, [\n    product,\n    isProductLoading,\n    selectedColor,\n    setSelectedColor,\n    selectedSize,\n    setSelectedSize,\n    itemQuantity,\n    incrementQuantity,\n    decrementQuantity,\n  ]);\n\n  return (\n    <ProductDetailsContext.Provider value={value}>\n      {children}\n    </ProductDetailsContext.Provider>\n  );\n};\n\nexport default ProductDetailsContextProvider;\n"
    },
    "/src/pages/ProductDetail/components/ProductDetailSection.jsx": {
      "code": "import clsx from 'clsx';\n\nimport ProductImages from './ProductImages';\nimport ProductMetadata from './ProductMetadata';\n\nimport { useProductDetailsContext } from './ProductDetailsContext';\n\nconst ProductDetail = () => {\n  const { isProductLoading, product } = useProductDetailsContext();\n\n  return (\n    <section\n      className={clsx(\n        'px-4 py-12 md:py-16 lg:p-24',\n        'grid grid-cols-4 gap-x-4 gap-y-12 md:grid-cols-6 md:gap-x-8 lg:grid-cols-12',\n      )}>\n      {isProductLoading || !product ? (\n        <div\n          className={clsx(\n            'flex h-full w-full items-center justify-center',\n            'col-span-4 md:col-span-6 lg:col-span-12',\n          )}>\n          Loading...\n        </div>\n      ) : (\n        <>\n          <div className=\"col-span-4 md:col-span-6\">\n            <ProductImages />\n          </div>\n          <div className=\"col-span-4 md:col-span-6\">\n            <ProductMetadata />\n          </div>\n        </>\n      )}\n    </section>\n  );\n};\n\nexport default ProductDetail;\n"
    },
    "/src/pages/ProductDetail/components/ProductImages.jsx": {
      "code": "import { useState } from 'react';\nimport clsx from 'clsx';\n\nimport { useProductDetailsContext } from './ProductDetailsContext';\nimport { getSelectedColorImages } from '../utils';\n\nconst ProductImages = () => {\n  const { product, selectedColor } = useProductDetailsContext();\n  const [selectedPreview, setSelectedPreview] = useState(0);\n\n  const images = getSelectedColorImages({ product, color: selectedColor });\n\n  return (\n    <div className=\"flex flex-col gap-6\">\n      <img\n        src={product.images[selectedPreview].image_url}\n        alt=\"Selected preview\"\n        loading=\"lazy\"\n        className=\"h-[400px] w-full rounded-lg object-cover md:h-[800px]\"\n      />\n      <div className=\"flex gap-4 overflow-x-auto\">\n        {images.map((image, index) => (\n          <img\n            key={image.image_url + index}\n            src={image.image_url}\n            alt={`Preview ${index + 1}`}\n            loading=\"lazy\"\n            onClick={() => setSelectedPreview(index)}\n            className={clsx(\n              'block shrink-0 rounded-lg',\n              'h-[120px] w-20 object-cover md:h-[190px] md:w-[188px] lg:w-40',\n              'cursor-pointer',\n              index === selectedPreview && 'border-[3px] border-indigo-600',\n            )}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ProductImages;\n"
    },
    "/src/pages/ProductDetail/components/ProductMetadata.jsx": {
      "code": "import { useMemo } from 'react';\nimport clsx from 'clsx';\nimport { useMediaQuery } from 'usehooks-ts';\n\nimport Badge from 'src/components/ui/Badge';\nimport Button from 'src/components/ui/Button';\nimport Rating from 'src/components/ui/Rating';\nimport AvailableColors from './AvailableColors';\nimport AvailableSizes from './AvailableSizes';\nimport ProductQuantity from './ProductQuantity';\nimport InfoSection from './InfoSection';\n\nimport { useProductDetailsContext } from './ProductDetailsContext';\nimport { useCartContext } from 'src/context/CartContext';\nimport { getInventoryData } from '../utils';\n\nconst ProductMetadata = () => {\n  const isMobileAndBelow = useMediaQuery('(max-width: 767px)');\n  const { product, selectedColor, selectedSize, itemQuantity } =\n    useProductDetailsContext();\n  const { addToCart } = useCartContext();\n\n  const { name, description, reviews, rating } = product;\n\n  const inventoryData = useMemo(\n    () =>\n      getInventoryData({ product, color: selectedColor, size: selectedSize }),\n    [selectedColor, selectedSize, product],\n  );\n  const { discount_percentage, list_price, sale_price, stock } = inventoryData;\n\n  const roundedRating = Math.round(rating * 10) / 10;\n  const hasDiscount = !!discount_percentage;\n\n  const onAddToCart = (e) => {\n    e.preventDefault();\n\n    const item = {\n      id: product.product_id,\n      quantity: itemQuantity,\n      color: selectedColor,\n      size: selectedSize,\n    };\n    addToCart(item);\n  };\n\n  return (\n    <div>\n      <section\n        className={clsx('flex flex-col gap-8')}\n        aria-labelledby=\"information-heading\">\n        <div className=\"flex flex-col items-start\">\n          <h1 className=\"text-3xl font-semibold md:text-5xl\">{name}</h1>\n          <div className=\"mt-5\">\n            <div className=\"inline-flex items-end gap-2\">\n              <span className=\"text-3xl font-medium text-neutral-600\">\n                ${hasDiscount ? sale_price : list_price}\n              </span>\n              {hasDiscount && (\n                <span className=\"text-lg font-medium text-neutral-400 line-through\">\n                  ${list_price}\n                </span>\n              )}\n            </div>\n          </div>\n          {hasDiscount && (\n            <div className=\"mt-2\">\n              <Badge\n                label={`${discount_percentage}% OFF`}\n                size=\"lg\"\n                variant=\"warning\"\n              />\n            </div>\n          )}\n\n          <div className={clsx('flex flex-wrap items-center gap-2', 'mt-3')}>\n            <div className=\"text-xl text-neutral-900\">{roundedRating ?? 0}</div>\n            <Rating value={roundedRating ?? 0} />\n            {reviews > 0 ? (\n              <Button\n                label={`See all ${reviews} reviews`}\n                href=\"#\"\n                variant=\"link\"\n                className=\"text-sm\"\n              />\n            ) : (\n              <div className=\"flex gap-[2px]\">\n                <span className=\"text-sm text-neutral-900\">\n                  No reviews yet.\n                </span>\n                <Button\n                  label=\"Be the first.\"\n                  href=\"#\"\n                  variant=\"link\"\n                  className=\"text-sm\"\n                />\n              </div>\n            )}\n          </div>\n        </div>\n\n        <p className=\"text-neutral-600\">{description}</p>\n      </section>\n\n      <section aria-labelledby=\"product-options\" className=\"mt-8\">\n        <form className=\"flex flex-col gap-8\" onSubmit={onAddToCart}>\n          <AvailableColors />\n          <AvailableSizes />\n          <ProductQuantity availableStock={stock} />\n\n          {/* Out of stock message */}\n          {stock === 0 && (\n            <div className=\"text-xl font-semibold text-neutral-900\">\n              Sorry, this item is out of stock\n            </div>\n          )}\n\n          <Button\n            label=\"Add to Cart\"\n            size={isMobileAndBelow ? 'xl' : '2xl'}\n            isDisabled={itemQuantity === 0 || stock === 0}\n          />\n        </form>\n      </section>\n\n      <InfoSection />\n    </div>\n  );\n};\n\nexport default ProductMetadata;\n"
    },
    "/src/pages/ProductDetail/components/ProductQuantity.jsx": {
      "code": "import CartControl from 'src/components/CartControl';\nimport { useProductDetailsContext } from './ProductDetailsContext';\n\nconst ProductQuantity = ({ availableStock }) => {\n  const { itemQuantity, incrementQuantity, decrementQuantity } =\n    useProductDetailsContext();\n\n  return (\n    <fieldset aria-label=\"Choose a color\">\n      <legend className=\"text-sm text-neutral-500\">Quantity</legend>\n      <div className=\"mt-4\">\n        <CartControl\n          quantity={itemQuantity}\n          decrement={decrementQuantity}\n          increment={incrementQuantity}\n          availableStock={availableStock}\n        />\n      </div>\n    </fieldset>\n  );\n};\n\nexport default ProductQuantity;\n"
    },
    "/src/pages/ProductDetail/index.js": {
      "code": "import ProductDetailPage from './ProductDetailPage';\n\nexport default ProductDetailPage;\n"
    },
    "/src/pages/ProductDetail/ProductDetailPage.jsx": {
      "code": "import ProductSpecificationSection from 'src/components/ProductSpecificationSection';\n\nimport ProductCollectionSection from './components/ProductCollectionSection';\nimport ProductDetailSection from './components/ProductDetailSection';\nimport ProductDetailsContextProvider from './components/ProductDetailsContext';\n\nconst ProductDetailPage = () => {\n  return (\n    <>\n      <ProductDetailsContextProvider>\n        <ProductDetailSection />\n      </ProductDetailsContextProvider>\n      <ProductSpecificationSection />\n      <ProductCollectionSection />\n    </>\n  );\n};\n\nexport default ProductDetailPage;\n"
    },
    "/src/pages/ProductDetail/utils.js": {
      "code": "export const getUnavailableColors = (product) => {\n  const colorsInStock = new Set();\n  const allColors = new Set(product.colors);\n\n  product.inventory.forEach((item) => {\n    if (item.stock > 0) {\n      colorsInStock.add(item.color);\n    }\n  });\n\n  const unavailableColors = [...allColors].filter(\n    (color) => !colorsInStock.has(color),\n  );\n\n  return unavailableColors;\n};\n\nexport const getUnavailableSizes = ({ product, color }) => {\n  const sizesInStock = new Set();\n  const allSizes = new Set(product.sizes);\n\n  product.inventory.forEach((item) => {\n    if (item.stock > 0 && item.color === color) {\n      sizesInStock.add(item.size);\n    }\n  });\n\n  const unavailableSizes = [...allSizes].filter(\n    (size) => !sizesInStock.has(size),\n  );\n\n  return unavailableSizes;\n};\n\nexport const getInventoryData = ({ product, color, size }) => {\n  let data = {};\n  product.inventory.forEach((item) => {\n    if (item.size === size && item.color === color) {\n      data = item;\n    }\n  });\n\n  return data;\n};\n\nexport const getSelectedColorImages = ({ product, color }) => {\n  const images = product.images?.filter((image) => image.color === color);\n  return images;\n};\n"
    },
    "/src/pages/ProductListing/components/Accordion/Accordion.jsx": {
      "code": "import clsx from 'clsx';\nimport { useState, useRef, createContext, useContext } from 'react';\nimport { RiAddLine, RiSubtractLine } from 'react-icons/ri';\n\nconst AccordionItemContext = createContext();\n\nconst AccordionItem = ({ children, id }) => {\n  const [isOpen, setIsOpen] = useState(true);\n\n  return (\n    <div>\n      <AccordionItemContext.Provider value={{ id, isOpen, setIsOpen }}>\n        {children}\n      </AccordionItemContext.Provider>\n    </div>\n  );\n};\n\nconst AccordionTrigger = ({ children }) => {\n  const { id, isOpen, setIsOpen } = useContext(AccordionItemContext);\n  const Icon = isOpen ? RiSubtractLine : RiAddLine;\n  return (\n    <button\n      className={clsx(\n        'w-full',\n        'flex items-center justify-between gap-6',\n        'focus:outline-none focus-visible:ring-4 focus-visible:ring-indigo-600/[.12]',\n        'text-left font-medium text-neutral-900',\n      )}\n      onClick={() => setIsOpen(!isOpen)}\n      aria-expanded={isOpen}\n      aria-controls={`accordion-content-${id}`}\n      id={`accordion-header-${id}`}>\n      <span>{children}</span>\n      <Icon className=\"m-0.5 size-5 text-neutral-600\" aria-hidden={true} />\n    </button>\n  );\n};\n\nconst AccordionContent = ({ children }) => {\n  const contentRef = useRef(null);\n  const { id, isOpen } = useContext(AccordionItemContext);\n\n  return (\n    <div\n      id={`accordion-content-${id}`}\n      role=\"region\"\n      aria-labelledby={`accordion-header-${id}`}\n      className={clsx(\n        'overflow-hidden',\n        'pr-12',\n        isOpen && 'mt-6',\n        'transition-max-height origin-top transform duration-300 ease-in-out',\n        isOpen ? 'scale-y-100 opacity-100' : 'scale-y-0 opacity-0',\n      )}\n      style={{\n        maxHeight: isOpen ? `${contentRef.current?.scrollHeight}px` : '0',\n      }}\n      ref={contentRef}>\n      <div className=\"text-neutral-600\">{children}</div>\n    </div>\n  );\n};\n\nconst Accordion = ({ children }) => {\n  const hasMultipleItem = Array.isArray(children);\n  return (\n    <div className=\"w-full\">\n      {!hasMultipleItem\n        ? children\n        : children.map((item, index) => (\n            <div key={item.props.id}>\n              {item}\n              <div className=\"my-6 h-[1px] bg-neutral-200\" />\n            </div>\n          ))}\n    </div>\n  );\n};\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent };\n"
    },
    "/src/pages/ProductListing/components/Accordion/index.js": {
      "code": "import * as Accordion from './Accordion';\n\nexport * from './Accordion';\nexport default Accordion;\n"
    },
    "/src/pages/ProductListing/components/Filter.jsx": {
      "code": "import clsx from 'clsx';\nimport { RiFilterLine } from 'react-icons/ri';\nimport { useState } from 'react';\n\nimport CheckboxInput from 'src/components/ui/CheckboxInput';\nimport ColorSwatches from 'src/components/ui/ColorSwatches';\nimport SlideOut from 'src/components/ui/SlideOut';\nimport Button from 'src/components/ui/Button';\nimport Rating from 'src/components/ui/Rating/Rating';\nimport {\n  Accordion,\n  AccordionContent,\n  AccordionItem,\n  AccordionTrigger,\n} from 'src/pages/ProductListing/components/Accordion';\n\nimport { useProductListingContext } from './ProductListingContext';\nimport {\n  CATEGORY_OPTIONS,\n  COLLECTIONS_OPTIONS,\n  COLORS_OPTIONS,\n  RATING_OPTIONS,\n} from 'src/constants';\n\nconst Filter = () => {\n  const {\n    selectedCategory,\n    selectedCollections,\n    selectedColors,\n    selectedRating,\n    filterCount,\n    onSelect,\n    resetFilters,\n  } = useProductListingContext();\n  const [isFilterOpen, setIsFilterOpen] = useState(false);\n\n  const filterItems = (\n    <div className=\"flex flex-col items-center\">\n      <Accordion>\n        <AccordionItem id={COLLECTIONS_OPTIONS.key}>\n          <AccordionTrigger>{COLLECTIONS_OPTIONS.title}</AccordionTrigger>\n          <AccordionContent>\n            <div className=\"flex flex-col gap-4 lg:gap-6\">\n              {COLLECTIONS_OPTIONS.items.map(({ name, value }) => (\n                <CheckboxInput\n                  label={name}\n                  key={value}\n                  value={selectedCollections.has(value)}\n                  onChange={() => onSelect(COLLECTIONS_OPTIONS.key, value)}\n                />\n              ))}\n            </div>\n          </AccordionContent>\n        </AccordionItem>\n\n        <AccordionItem id={CATEGORY_OPTIONS.key}>\n          <AccordionTrigger>{CATEGORY_OPTIONS.title}</AccordionTrigger>\n          <AccordionContent>\n            <div className=\"flex flex-col gap-4\">\n              {CATEGORY_OPTIONS.items.map(({ name, value }) => (\n                <CheckboxInput\n                  label={name}\n                  key={value}\n                  value={selectedCategory.has(value)}\n                  onChange={() => onSelect(CATEGORY_OPTIONS.key, value)}\n                />\n              ))}\n            </div>\n          </AccordionContent>\n        </AccordionItem>\n\n        <AccordionItem id={COLORS_OPTIONS.key}>\n          <AccordionTrigger>{COLORS_OPTIONS.title}</AccordionTrigger>\n          <AccordionContent>\n            <div className=\"flex flex-wrap gap-2\">\n              {COLORS_OPTIONS.items.map(({ color, value }) => (\n                <ColorSwatches\n                  key={value}\n                  type=\"checkbox\"\n                  color={color}\n                  selected={selectedColors.has(value)}\n                  onClick={() => onSelect(COLORS_OPTIONS.key, value)}\n                  size=\"sm\"\n                />\n              ))}\n            </div>\n          </AccordionContent>\n        </AccordionItem>\n\n        <AccordionItem id={RATING_OPTIONS.key}>\n          <AccordionTrigger>{RATING_OPTIONS.title}</AccordionTrigger>\n          <AccordionContent>\n            <div className=\"flex flex-col items-start gap-4 lg:gap-6\">\n              {RATING_OPTIONS.items.map(({ value }) => (\n                <button\n                  key={value}\n                  type=\"button\"\n                  className={clsx(\n                    'rounded',\n                    'focus:outline-none focus:ring-indigo-600/[.12] focus:ring-offset-0 focus-visible:ring-2',\n                  )}\n                  onClick={() => onSelect(RATING_OPTIONS.key, value)}>\n                  <Rating\n                    value={value}\n                    selected={selectedRating.has(value)}\n                    showHover\n                  />\n                </button>\n              ))}\n            </div>\n          </AccordionContent>\n        </AccordionItem>\n      </Accordion>\n      {filterCount > 0 && (\n        <Button\n          onClick={() => {\n            resetFilters();\n            setIsFilterOpen(false);\n          }}\n          label={`Clear All (${filterCount})`}\n          variant=\"link\"\n          size=\"lg\"\n        />\n      )}\n    </div>\n  );\n\n  return (\n    <div>\n      <div className=\"sticky top-10 hidden lg:block\">{filterItems}</div>\n      <div className=\"block lg:hidden\">\n        <SlideOut\n          isShown={isFilterOpen}\n          title={<span className=\"text-xl text-neutral-900\">Filter</span>}\n          onClose={() => setIsFilterOpen(false)}\n          trigger={\n            <Button\n              label=\"Filter\"\n              variant=\"secondary\"\n              startIcon={RiFilterLine}\n              onClick={() => setIsFilterOpen(!isFilterOpen)}\n            />\n          }>\n          {filterItems}\n        </SlideOut>\n      </div>\n    </div>\n  );\n};\n\nexport default Filter;\n"
    },
    "/src/pages/ProductListing/components/hooks/useProductFilters.js": {
      "code": "import { useEffect, useRef, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport {\n  CATEGORY_OPTIONS,\n  COLLECTIONS_OPTIONS,\n  COLORS_OPTIONS,\n  RATING_OPTIONS,\n} from 'src/constants';\n\nexport default function useProductFilters() {\n  const { search } = useLocation();\n  const isMounted = useRef(false);\n\n  const query = new URLSearchParams(search);\n  const collectionId = query.get('collectionId');\n  const categoryId = query.get('categoryId');\n\n  const [selectedCollections, setSelectedCollections] = useState(\n    collectionId ? new Set().add(collectionId) : new Set(),\n  );\n  const [selectedCategory, setSelectedCategory] = useState(\n    categoryId ? new Set().add(categoryId) : new Set(),\n  );\n  const [selectedColors, setSelectedColors] = useState(new Set());\n  const [selectedRating, setSelectedRating] = useState(new Set());\n  const [selectedSort, setSelectedSort] = useState({\n    value: 'created',\n    direction: 'desc',\n  });\n\n  const onSelect = (type, value) => {\n    let newSelectedItems;\n    if (type === COLLECTIONS_OPTIONS.key) {\n      newSelectedItems = new Set(selectedCollections);\n    }\n    if (type === CATEGORY_OPTIONS.key) {\n      newSelectedItems = new Set(selectedCategory);\n    }\n    if (type === COLORS_OPTIONS.key) {\n      newSelectedItems = new Set(selectedColors);\n    }\n    if (type === RATING_OPTIONS.key) {\n      newSelectedItems = new Set(selectedRating);\n    }\n\n    newSelectedItems.has(value)\n      ? newSelectedItems.delete(value)\n      : newSelectedItems.add(value);\n\n    if (type === COLLECTIONS_OPTIONS.key) {\n      setSelectedCollections(newSelectedItems);\n    }\n    if (type === CATEGORY_OPTIONS.key) {\n      setSelectedCategory(newSelectedItems);\n    }\n    if (type === COLORS_OPTIONS.key) {\n      setSelectedColors(newSelectedItems);\n    }\n    if (type === RATING_OPTIONS.key) {\n      setSelectedRating(newSelectedItems);\n    }\n  };\n\n  const resetFilters = () => {\n    setSelectedCollections(new Set());\n    setSelectedCategory(new Set());\n    setSelectedColors(new Set());\n    setSelectedRating(new Set());\n  };\n\n  const filterCount =\n    selectedCollections.size +\n    selectedCategory.size +\n    selectedColors.size +\n    selectedRating.size;\n\n  useEffect(() => {\n    // only run after mounted when the collectionId or categoryId query param change\n    if (isMounted.current) {\n      if (collectionId) {\n        // Reset every filters when we query params is changed\n        resetFilters();\n        setSelectedCollections(new Set().add(collectionId));\n      }\n      if (categoryId) {\n        // Reset every filters when we query params is changed\n        resetFilters();\n        setSelectedCategory(new Set().add(categoryId));\n      }\n    }\n    isMounted.current = true;\n  }, [collectionId, categoryId]);\n\n  return {\n    selectedCollections,\n    selectedCategory,\n    selectedColors,\n    selectedRating,\n    selectedSort,\n    filterCount,\n    onSelect,\n    resetFilters,\n    onSortChange: setSelectedSort,\n  };\n}\n"
    },
    "/src/pages/ProductListing/components/ProductListingContext.jsx": {
      "code": "import {\n  createContext,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport useProductFilters from './hooks/useProductFilters';\nimport {\n  CATEGORY_OPTIONS,\n  COLLECTIONS_OPTIONS,\n  COLORS_OPTIONS,\n  RATING_OPTIONS,\n} from 'src/constants';\n\nconst ProductListingContext = createContext();\n\nexport const useProductListingContext = () => useContext(ProductListingContext);\n\nconst ProductListingContextProvider = ({ children }) => {\n  const [products, setProducts] = useState(null);\n  const [isProductsLoading, setIsProductsLoading] = useState(true);\n  const {\n    selectedCollections,\n    selectedCategory,\n    selectedColors,\n    selectedRating,\n    selectedSort,\n    filterCount,\n    onSelect,\n    resetFilters,\n    onSortChange,\n  } = useProductFilters();\n\n  const getProducts = useCallback(\n    async ({ colors, collections, ratings, categories, sort }) => {\n      setIsProductsLoading(true);\n\n      let queryString = '';\n      if (\n        colors.size > 0 ||\n        collections.size > 0 ||\n        ratings.size > 0 ||\n        categories.size > 0\n      ) {\n        queryString = [\n          ...Array.from(colors).map(\n            (color) => `${COLORS_OPTIONS.key}=${encodeURIComponent(color)}`,\n          ),\n          ...Array.from(collections).map(\n            (collection) =>\n              `${COLLECTIONS_OPTIONS.key}=${encodeURIComponent(collection)}`,\n          ),\n          ...Array.from(ratings).map(\n            (rating) => `${RATING_OPTIONS.key}=${encodeURIComponent(rating)}`,\n          ),\n          ...Array.from(categories).map(\n            (category) =>\n              `${CATEGORY_OPTIONS.key}=${encodeURIComponent(category)}`,\n          ),\n        ].join('&');\n      }\n\n      queryString = `${queryString ? `${queryString}&` : ''}sort=${\n        sort.value\n      }&direction=${sort.direction}`;\n\n      const data = await fetch(\n        `https://www.greatfrontend.com/api/projects/challenges/e-commerce/products${\n          queryString ? `?${queryString}` : ''\n        }`,\n      );\n      const result = await data.json();\n\n      if (!result.error) {\n        setProducts(result.data);\n      }\n      setIsProductsLoading(false);\n    },\n    [],\n  );\n\n  useEffect(() => {\n    getProducts({\n      colors: selectedColors,\n      categories: selectedCategory,\n      collections: selectedCollections,\n      ratings: selectedRating,\n      sort: selectedSort,\n    });\n  }, [\n    getProducts,\n    selectedColors,\n    selectedCategory,\n    selectedCollections,\n    selectedRating,\n    selectedSort,\n  ]);\n\n  const value = useMemo(() => {\n    return {\n      products,\n      isProductsLoading,\n\n      selectedCollections,\n      selectedCategory,\n      selectedColors,\n      selectedRating,\n      selectedSort,\n      filterCount,\n      onSelect,\n      resetFilters,\n      onSortChange,\n    };\n  }, [\n    products,\n    isProductsLoading,\n\n    selectedCollections,\n    selectedCategory,\n    selectedColors,\n    selectedRating,\n    selectedSort,\n    filterCount,\n    onSelect,\n    resetFilters,\n    onSortChange,\n  ]);\n\n  return (\n    <ProductListingContext.Provider value={value}>\n      {children}\n    </ProductListingContext.Provider>\n  );\n};\n\nexport default ProductListingContextProvider;\n"
    },
    "/src/pages/ProductListing/components/ProductListingSection.jsx": {
      "code": "import { RiTShirt2Line } from 'react-icons/ri';\nimport clsx from 'clsx';\n\nimport ProductCard from 'src/components/ProductCard';\nimport Button from 'src/components/ui/Button';\n\nimport { useProductListingContext } from './ProductListingContext';\n\nconst ProductListingSection = () => {\n  const { products, isProductsLoading, filterCount, resetFilters } =\n    useProductListingContext();\n\n  if (isProductsLoading) {\n    return (\n      <div\n        className={clsx(\n          'col-span-4 md:col-span-6 lg:col-span-9',\n          'flex justify-center',\n        )}>\n        Loading...\n      </div>\n    );\n  }\n\n  if (filterCount > 0 && products.length === 0) {\n    return (\n      <div\n        className={clsx(\n          'h-full w-full',\n          'col-span-4 md:col-span-6 lg:col-span-9',\n          'flex flex-col items-center justify-center gap-5',\n        )}>\n        <div\n          className={clsx(\n            'size-12 rounded-full bg-white shadow',\n            'flex items-center justify-center',\n          )}>\n          <RiTShirt2Line className=\"size-6 text-indigo-700\" />\n        </div>\n        <div\n          className={clsx(\n            'flex flex-col items-center gap-2',\n            'text-center text-neutral-900',\n          )}>\n          <span className=\"text-xl font-medium\">Nothing found just yet</span>\n          <span>\n            Adjust your filters a bit, and let's see what we can find!\n          </span>\n        </div>\n        <Button label=\"Reset filters\" size=\"lg\" onClick={resetFilters} />\n      </div>\n    );\n  }\n\n  return products.map((product) => (\n    <div key={product.product_id} className={clsx('col-span-4 md:col-span-3')}>\n      <ProductCard product={product} />\n    </div>\n  ));\n};\n\nexport default ProductListingSection;\n"
    },
    "/src/pages/ProductListing/components/SortByFilter.jsx": {
      "code": "import { Dropdown, DropdownItem } from 'src/components/ui/Dropdown';\n\nimport { useProductListingContext } from './ProductListingContext';\nimport { SORT_OPTIONS } from 'src/constants';\n\nconst SortByFilter = () => {\n  const { onSortChange, selectedSort } = useProductListingContext();\n  return (\n    <Dropdown>\n      {SORT_OPTIONS.map((option) => (\n        <DropdownItem\n          key={option.value + option.direction}\n          isSelected={\n            option.value === selectedSort.value &&\n            option.direction === selectedSort.direction\n          }\n          onSelect={() =>\n            onSortChange({ value: option.value, direction: option.direction })\n          }>\n          {option.name}\n        </DropdownItem>\n      ))}\n    </Dropdown>\n  );\n};\n\nexport default SortByFilter;\n"
    },
    "/src/pages/ProductListing/index.js": {
      "code": "import ProductListingPage from './ProductListingPage';\n\nexport default ProductListingPage;\n"
    },
    "/src/pages/ProductListing/ProductListingPage.jsx": {
      "code": "import clsx from 'clsx';\n\nimport Filter from './components/Filter';\nimport ProductListingContextProvider from './components/ProductListingContext';\nimport ProductListingSection from './components/ProductListingSection';\nimport SortByFilter from './components/SortByFilter';\n\nconst ProductListingPage = () => {\n  return (\n    <ProductListingContextProvider>\n      <div\n        className={clsx(\n          'w-full',\n          'px-4 py-12 md:py-[72px] lg:px-24 lg:py-[104px]',\n          'grid grid-cols-4 gap-x-4 gap-y-8 md:grid-cols-6 md:gap-x-8 lg:grid-cols-12',\n        )}>\n        <div\n          className={clsx(\n            'col-span-4 md:col-span-6 lg:col-span-3 lg:pr-12 lg:pt-4',\n            'flex justify-between',\n          )}>\n          <Filter />\n          <div className=\"block lg:hidden\">\n            <SortByFilter />\n          </div>\n        </div>\n\n        <div\n          className={clsx(\n            'col-span-4 md:col-span-6  lg:col-span-9',\n            'flex flex-col items-end gap-8',\n          )}>\n          <div className=\"hidden lg:block\">\n            <SortByFilter />\n          </div>\n\n          <div\n            className={clsx(\n              'h-full w-full',\n              'grid grid-cols-4 gap-8 md:grid-cols-6 lg:grid-cols-9',\n            )}>\n            <ProductListingSection />\n          </div>\n        </div>\n      </div>\n    </ProductListingContextProvider>\n  );\n};\n\nexport default ProductListingPage;\n"
    },
    "/src/pages/Storefront/components/CollectionsGridSection.jsx": {
      "code": "import clsx from 'clsx';\nimport { useEffect, useState } from 'react';\n\nimport CollectionCard from 'src/components/CollectionCard';\n\nconst CollectionsGridSection = () => {\n  const [collections, setCollections] = useState([]);\n  const [isFetching, setIsFetching] = useState(true);\n\n  const getLatestArrivalProducts = async () => {\n    setIsFetching(true);\n\n    const data = await fetch(\n      `https://www.greatfrontend.com/api/projects/challenges/e-commerce/collections`,\n    );\n    const result = await data.json();\n\n    if (!result.error) {\n      setCollections(result.data);\n    }\n    setIsFetching(false);\n  };\n\n  useEffect(() => {\n    getLatestArrivalProducts();\n  }, []);\n\n  return (\n    <section\n      aria-describedby=\"collections-section\"\n      className={clsx('px-4 py-12 md:py-16 lg:p-24', 'flex flex-col gap-8')}>\n      <div className=\"text-3xl font-semibold\">Our Collections</div>\n      {isFetching ? (\n        <div>Loading...</div>\n      ) : (\n        <div className={clsx('flex flex-col gap-7 md:flex-row')}>\n          <div className={clsx('flex-1')}>\n            <CollectionCard\n              imageUrl={collections[0].image_url}\n              name={collections[0].name}\n              description={collections[0].description}\n              id={collections[0].collection_id}\n            />\n          </div>\n          <div className={clsx('flex-1', 'flex flex-col gap-7')}>\n            <div className={clsx('flex-1')}>\n              <CollectionCard\n                imageUrl={collections[1].image_url}\n                name={collections[1].name}\n                description={collections[1].description}\n                id={collections[1].collection_id}\n                variant=\"secondary\"\n              />\n            </div>\n            <div className={clsx('flex-1')}>\n              <CollectionCard\n                imageUrl={collections[2].image_url}\n                name={collections[2].name}\n                description={collections[2].description}\n                id={collections[2].collection_id}\n                variant=\"secondary\"\n              />\n            </div>\n          </div>\n        </div>\n      )}\n    </section>\n  );\n};\n\nexport default CollectionsGridSection;\n"
    },
    "/src/pages/Storefront/components/FeaturesGridSection.jsx": {
      "code": "import clsx from 'clsx';\nimport { RiExchangeLine, RiShieldCheckLine, RiTruckLine } from 'react-icons/ri';\n\nconst FEATURES = [\n  {\n    title: 'Complimentary Shipping',\n    description:\n      'Enjoy the convenience of free shipping for all orders. We believe in transparent pricing, and the price you see is the price you pay—no surprise fees',\n    icon: RiTruckLine,\n  },\n  {\n    title: '2-Year Quality Promise',\n    description:\n      \"Shop with confidence knowing that we stand behind our products. Should any issue arise within the first two years, rest assured we're here to help with a hassle-free replacement.\",\n    icon: RiShieldCheckLine,\n  },\n  {\n    title: 'Easy Exchanges',\n    description:\n      \"If your purchase isn't quite right, pass it on to a friend who might love it, and let us know. We're happy to facilitate an exchange to ensure you have the perfect item to complement your lifestyle.\",\n    icon: RiExchangeLine,\n  },\n];\n\nconst FeaturesGridSection = () => {\n  return (\n    <section\n      aria-describedby=\"features-section\"\n      className={clsx(\n        'px-4 py-12 md:py-16 lg:p-24',\n        'flex flex-col gap-12 md:gap-16',\n      )}>\n      <header className={clsx('flex flex-col gap-5 lg:px-40', 'text-center')}>\n        <div className=\"flex flex-col justify-center gap-3 lg:px-10\">\n          <span className=\"font-semibold text-indigo-700\">\n            Elevate Your Experience\n          </span>\n          <h2 className=\"text-3xl font-semibold md:text-5xl\">\n            Our Commitment to Exceptional Service\n          </h2>\n        </div>\n        <p className=\"text-xl text-neutral-600\">\n          We pride ourselves on a foundation of exceptional customer service,\n          where every interaction is a testament to our dedication to\n          excellence.\n        </p>\n      </header>\n      <ul\n        className={clsx(\n          'grid grid-cols-4 md:grid-cols-6 lg:grid-cols-12',\n          'gap-x-4 gap-y-8 md:gap-x-8',\n        )}>\n        {FEATURES.map(({ title, description, icon: Icon }) => (\n          <li\n            key={title}\n            className={clsx(\n              'col-span-4 md:col-span-6 lg:col-span-4',\n              'flex flex-col items-center justify-center gap-5',\n            )}>\n            <div\n              aria-hidden=\"true\"\n              className={clsx(\n                'shadow-custom h-12 w-12 rounded-full bg-white',\n                'flex items-center justify-center',\n              )}>\n              <Icon className=\"size-6 text-indigo-700\" />\n            </div>\n            <div className=\"flex flex-col justify-center gap-2 self-stretch\">\n              <span className=\"text-center text-xl font-semibold text-neutral-900\">\n                {title}\n              </span>\n              <span className=\"text-center text-base font-normal text-neutral-600\">\n                {description}\n              </span>\n            </div>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nexport default FeaturesGridSection;\n"
    },
    "/src/pages/Storefront/components/HeroSection.jsx": {
      "code": "import clsx from 'clsx';\nimport Button from 'src/components/ui/Button';\nimport { useMediaQuery } from 'usehooks-ts';\n\nconst HeroSection = () => {\n  const isMobileAndBelow = useMediaQuery('(max-width: 767px)');\n\n  return (\n    <section\n      aria-describedby=\"hero-section\"\n      className={clsx(\n        'px-4 py-12 md:py-16 lg:p-24',\n        'grid grid-cols-4 md:grid-cols-6 lg:grid-cols-12',\n        'gap-x-4 gap-y-12 md:gap-x-8 md:gap-y-8',\n      )}>\n      <div\n        className={clsx(\n          'col-span-4 md:col-span-6 lg:col-span-5',\n          'flex flex-col justify-center gap-8 md:gap-16',\n        )}>\n        <div className=\"flex flex-col justify-center gap-4 md:gap-6\">\n          <span className=\"text-4xl font-semibold md:text-5xl lg:text-6xl\">\n            Summer styles are finally here\n          </span>\n          <span className=\"text-xl text-neutral-600\">\n            This year, our new summer collection will be your haven from the\n            world's harsh elements.\n          </span>\n        </div>\n        <div className=\"w-[151.5px] md:w-[213px] lg:w-[175.5px]\">\n          <Button\n            href=\"/products\"\n            label=\"Shop now\"\n            size={isMobileAndBelow ? 'xl' : '2xl'}\n            className=\"w-full\"\n          />\n        </div>\n      </div>\n      <img\n        src=\"https://vaqybtnqyonvlwtskzmv.supabase.co/storage/v1/object/public/e-commerce-track-images/banner.jpg\"\n        alt=\"Storefront hero banner\"\n        className={clsx(\n          'object-cover',\n          'rounded-lg',\n          'col-span-4 md:col-span-6 lg:col-span-7',\n          'h-[264px] w-full md:h-[526px]',\n        )}\n      />\n    </section>\n  );\n};\n\nexport default HeroSection;\n"
    },
    "/src/pages/Storefront/index.js": {
      "code": "import StorefrontPage from './StorefrontPage';\n\nexport default StorefrontPage;\n"
    },
    "/src/pages/Storefront/StorefrontPage.jsx": {
      "code": "import LatestArrivalsSection from '../LatestArrivals/components/LatestArrivalsSection';\nimport HeroSection from './components/HeroSection';\nimport CollectionsGridSection from './components/CollectionsGridSection';\nimport FeaturesGridSection from './components/FeaturesGridSection';\n\nconst StorefrontPage = () => {\n  return (\n    <div>\n      <HeroSection />\n      <LatestArrivalsSection />\n      <CollectionsGridSection />\n      <FeaturesGridSection />\n    </div>\n  );\n};\n\nexport default StorefrontPage;\n"
    }
  },
  "workspace": {
    "visibleFiles": [
      "/src/App.js",
      "/src/index.css",
      "/src/pages/Storefront/StorefrontPage.jsx"
    ],
    "activeFile": "/src/App.js",
    "environment": "create-react-app",
    "externalResources": [
      "https://cdn.tailwindcss.com"
    ]
  }
}